<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">cHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgTUFQTUVTU0FHRSA9ICJATUFQTUVTU0FHRV9BU19E
T0NAOiI7DQpwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBIQVNIVEFCTEUgPSAiQEhBU0hUQUJM
RV9BU19ET0NAOiI7DQpwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBTVFJFQU0gPSAiQFNUUkVB
TV9BU19ET0NAOiI7DQpwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBCWVRFUyA9ICJAQllURVNf
QVNfRE9DQDoiOw0KcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgTk9ERSA9ICJATk9ERV9BU19E
T0NAOiI7DQpwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBBUlJBWUxJU1QgPSAiQEFSUkFZTElT
VF9BU19ET0NAOiI7DQpwdWJsaWMgc3RhdGljIGZpbmFsIFN0cmluZyBFTlRSSUVTID0gImVudHJp
ZXMiOw0KcHVibGljIHN0YXRpYyBmaW5hbCBTdHJpbmcgRU5UUlkgPSAiZW50cnkiOw0KcHVibGlj
IHN0YXRpYyBmaW5hbCBTdHJpbmcgVkFMVUUgPSAidmFsdWUiOw0KcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgU3RyaW5nIEtFWSA9ICJrZXkiOw0KcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIFVURl84
ID0gIlVURi04IjsNCg0KLy8gRG8gbm90IGFjY2VzcyBwcmV2aW91c1RpbWVzdGFtcCB3aXRob3V0
IHN5bmNocm9uaXphdGlvbiBvbiB0aW1lU3RhbXBMb2NrIQ0KcHJpdmF0ZSBzdGF0aWMgbG9uZyBw
cmV2aW91c1RpbWVzdGFtcDsNCnByaXZhdGUgc3RhdGljIGZpbmFsIE9iamVjdCBwcmV2aW91c1Rp
bWVzdGFtcExvY2sgPSBuZXcgT2JqZWN0KCk7DQpwcml2YXRlIHN0YXRpYyBmaW5hbCBEYXRlVGlt
ZUZvcm1hdHRlciB0aW1lc3RhbXBGb3JtYXR0ZXIgPSBEYXRlVGltZUZvcm1hdHRlci5vZlBhdHRl
cm4oInl5eXlNTWRkJ1QnSEhtbXNzLlNTUyIpOw0KDQpAU3VwcHJlc3NXYXJuaW5ncyh7ICJyYXd0
eXBlcyIsICJ1bmNoZWNrZWQiLCAicmVzb3VyY2UiIH0pDQpwdWJsaWMgc3RhdGljIElEYXRhIGR1
cGxpY2F0ZU9iamVjdHNBc0RvY3NJbXBsKElEYXRhIGlEYXRhKSB7DQoJDQoJSURhdGFNYXAgaURh
dGFNYXAgPSBuZXcgSURhdGFNYXAoaURhdGEpOw0KCQ0KCVNldDxTdHJpbmc+IGtleVNldCA9IGlE
YXRhTWFwLmtleVNldCgpOw0KCWZvciAoU3RyaW5nIGtleSA6IGtleVNldCkgew0KCQlPYmplY3Qg
b2JqZWN0ID0gaURhdGFNYXAuZ2V0KGtleSk7DQoJCQ0KCQkvKmlmIChvYmplY3QgaW5zdGFuY2Vv
ZiBNYXBNZXNzYWdlKSB7DQoJCQlsb2cob2JqZWN0LmdldENsYXNzKCkuZ2V0Q2Fub25pY2FsTmFt
ZSgpKTsNCgkJCU1hcE1lc3NhZ2UgbWFwTWVzc2FnZSA9IChNYXBNZXNzYWdlKSBvYmplY3Q7DQoJ
CQl0cnkgew0KCQkJCUVudW1lcmF0aW9uIG5hbWVzID0gbWFwTWVzc2FnZS5nZXRNYXBOYW1lcygp
Ow0KCQkJCUlEYXRhIG1hcE1lc3NhZ2VEb2MgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJCQkJ
SURhdGFNYXAgbWFwTWVzc2FnZURvY01hcCA9IG5ldyBJRGF0YU1hcChtYXBNZXNzYWdlRG9jKTsN
CgkJCQl3aGlsZSAobmFtZXMuaGFzTW9yZUVsZW1lbnRzKCkpIHsNCgkJCQkJU3RyaW5nIGVudW1L
ZXkgPSBuYW1lcy5uZXh0RWxlbWVudCgpLnRvU3RyaW5nKCk7DQoJCQkJCU9iamVjdCB2YWx1ZSA9
IG1hcE1lc3NhZ2UuZ2V0T2JqZWN0KGVudW1LZXkpOw0KCQkJCQltYXBNZXNzYWdlRG9jTWFwLnB1
dChlbnVtS2V5LCB2YWx1ZSk7DQoJCQkJfQ0KCQkJCWlEYXRhTWFwLnB1dChNQVBNRVNTQUdFICsg
a2V5LCBtYXBNZXNzYWdlRG9jKTsNCgkJCQkvLyBHbyBvbiBsaWtlIGEgbm9ybWFsIElEYXRhDQoJ
CQkJZHVwbGljYXRlT2JqZWN0c0FzRG9jc0ltcGwobWFwTWVzc2FnZURvYyk7DQoJCQl9IGNhdGNo
IChKTVNFeGNlcHRpb24gZSkgew0KCQkJfQ0KCQl9IGVsc2UqLyBpZiAob2JqZWN0IGluc3RhbmNl
b2YgSGFzaHRhYmxlKSB7DQoJCQlJRGF0YSBoYXNodGFibGVEb2MgPSBJRGF0YUZhY3RvcnkuY3Jl
YXRlKCk7DQoJCQlJRGF0YU1hcCBoYXNodGFibGVNYXAgPSBuZXcgSURhdGFNYXAoaGFzaHRhYmxl
RG9jKTsNCgkJCUhhc2h0YWJsZTxTdHJpbmcsIE9iamVjdD4gaGFzaFRhYmxlID0gKEhhc2h0YWJs
ZTxTdHJpbmcsIE9iamVjdD4pIG9iamVjdDsNCgkJCVNldCBoYXNoS2V5cyA9IGhhc2hUYWJsZS5r
ZXlTZXQoKTsNCgkJCUlEYXRhW10JZW50cmllcyA9IG5ldyBJRGF0YVtoYXNoS2V5cy5zaXplKCld
Ow0KCQkJaW50IGkgPSAwOw0KCQkJZm9yIChPYmplY3QgaGFzaEtleU9iamVjdCA6IGhhc2hLZXlz
KSB7DQoJCQkJU3RyaW5nIGhhc2hLZXkgPSAoU3RyaW5nKSBoYXNoS2V5T2JqZWN0Ow0KCQkJCU9i
amVjdCBoYXNoT2JqZWN0ID0gaGFzaFRhYmxlLmdldChoYXNoS2V5KTsNCgkJCQllbnRyaWVzW2ld
ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOw0KCQkJCUlEYXRhTWFwIGVudHJpeU1hcCA9IG5ldyBJ
RGF0YU1hcChlbnRyaWVzW2ldKTsNCgkJCQllbnRyaXlNYXAucHV0KEtFWSwgaGFzaEtleSk7DQoJ
CQkJZW50cml5TWFwLnB1dChWQUxVRSwgaGFzaE9iamVjdCk7DQoJCQkJaSsrOw0KCQkJfQ0KCQkJ
aGFzaHRhYmxlTWFwLnB1dChFTlRSSUVTLCBlbnRyaWVzKTsNCgkJCWlEYXRhTWFwLnB1dChIQVNI
VEFCTEUgKyBrZXksIGhhc2h0YWJsZURvYyk7DQoJCX0gZWxzZSBpZiAob2JqZWN0IGluc3RhbmNl
b2YgSW5wdXRTdHJlYW0pIHsNCgkJCUlucHV0U3RyZWFtIHN0cmVhbSA9IChJbnB1dFN0cmVhbSkg
b2JqZWN0Ow0KCQkJZmluYWwgaW50IGFycmF5U2l6ZSA9IDEwMjQ7DQoJCQlieXRlW10gYnl0ZUFy
cmF5ID0gbmV3IGJ5dGVbYXJyYXlTaXplXTsNCgkJCVN0cmluZ0J1aWxkZXIgYnVpbGRlciA9IG5l
dyBTdHJpbmdCdWlsZGVyKCk7DQoJCQl0cnkgew0KCQkJCWludCByZWQgPSAwOw0KCQkJCXdoaWxl
KChyZWQgPSBzdHJlYW0ucmVhZChieXRlQXJyYXkpKSA+IDApIHsNCgkJCQkJaWYgKHJlZCA9PSBh
cnJheVNpemUpIHsNCgkJCQkJCWJ1aWxkZXIuYXBwZW5kKG5ldyBTdHJpbmcoYnl0ZUFycmF5LCBV
VEZfOCkpOw0KCQkJCQl9IGVsc2Ugew0KCQkJCQkJYnVpbGRlci5hcHBlbmQobmV3IFN0cmluZyhB
cnJheXMuY29weU9mKGJ5dGVBcnJheSwgcmVkKSkpOw0KCQkJCQl9DQoJCQkJfQ0KCQkJfSBjYXRj
aCAoSU9FeGNlcHRpb24gZSkgew0KCQkJfQ0KCQkJDQoJCQlpRGF0YU1hcC5wdXQoU1RSRUFNICsg
a2V5LCBidWlsZGVyLnRvU3RyaW5nKCkpOw0KCQkJdHJ5IHsNCgkJCQlzdHJlYW0ucmVzZXQoKTsN
CgkJCX0gY2F0Y2ggKElPRXhjZXB0aW9uIGUpIHt9DQoJCX0gZWxzZSBpZiAob2JqZWN0IGluc3Rh
bmNlb2YgQXJyYXlMaXN0KSB7DQoJCQlBcnJheUxpc3QgYXJyYXlMaXN0ID0gKEFycmF5TGlzdCkg
b2JqZWN0Ow0KCQkJSURhdGEgYXJyYXlMaXN0RG9jID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOw0K
CQkJSURhdGFNYXAgYXJyYXlMaXN0TWFwID0gbmV3IElEYXRhTWFwKGFycmF5TGlzdERvYyk7DQoJ
CQlJRGF0YVtdCWVudHJpZXMgPSBuZXcgSURhdGFbYXJyYXlMaXN0LnNpemUoKV07DQoJCQlmb3Ig
KGludCBpID0gMDsgaSA8IGFycmF5TGlzdC5zaXplKCk7IGkrKykgew0KCQkJCU9iamVjdCBhcnJh
eUxpc3RPYmplY3QgPSBhcnJheUxpc3QuZ2V0KGkpOw0KCQkJCWlmIChhcnJheUxpc3RPYmplY3Qg
aW5zdGFuY2VvZiBJRGF0YSkgew0KCQkJCQllbnRyaWVzW2ldID0gKElEYXRhKSBhcnJheUxpc3RP
YmplY3Q7DQoJCQkJfQ0KCQkJfQ0KCQkJYXJyYXlMaXN0TWFwLnB1dChFTlRSSUVTLCBlbnRyaWVz
KTsNCgkJCWlEYXRhTWFwLnB1dChBUlJBWUxJU1QgKyBrZXksIGFycmF5TGlzdERvYyk7DQoJCX0g
ZWxzZSBpZiAob2JqZWN0IGluc3RhbmNlb2YgYnl0ZVtdKSB7DQoJCQl0cnkgew0KCQkJCWlEYXRh
TWFwLnB1dChCWVRFUyArIGtleSwgbmV3IFN0cmluZygoYnl0ZVtdKSBvYmplY3QsIFVURl84KSk7
DQoJCQl9IGNhdGNoIChVbnN1cHBvcnRlZEVuY29kaW5nRXhjZXB0aW9uIGUpIHsNCgkJCX0NCgkJ
fSBlbHNlIGlmIChvYmplY3QgaW5zdGFuY2VvZiBOb2RlKSB7DQoJCQlpRGF0YU1hcC5wdXQoTk9E
RSArIGtleSwgbm9kZVRvRG9jdW1lbnQoKE5vZGUpIG9iamVjdCkpOw0KCQl9IGVsc2UgaWYgKG9i
amVjdCBpbnN0YW5jZW9mIElEYXRhKSB7DQoJCQlkdXBsaWNhdGVPYmplY3RzQXNEb2NzSW1wbCgo
SURhdGEpIG9iamVjdCk7DQoJCX0gZWxzZSBpZiAob2JqZWN0IGluc3RhbmNlb2YgSURhdGFbXSkg
ew0KCQkJZm9yKElEYXRhIGlEYXRhT2ZBcnJheSA6IChJRGF0YVtdKSBvYmplY3QpIHsNCgkJCQlk
dXBsaWNhdGVPYmplY3RzQXNEb2NzSW1wbChpRGF0YU9mQXJyYXkpOw0KCQkJfQ0KCQl9DQoJfQ0K
DQoJcmV0dXJuIGlEYXRhOw0KfQ0KDQpwdWJsaWMgc3RhdGljIElEYXRhIHJlcGxpY2F0ZU9iamVj
dHNGcm9tRG9jc0ltcGwoSURhdGEgaURhdGEpIHsNCgkNCglJRGF0YU1hcCBpRGF0YU1hcCA9IG5l
dyBJRGF0YU1hcChpRGF0YSk7DQoJDQoJU2V0PFN0cmluZz4ga2V5U2V0ID0gaURhdGFNYXAua2V5
U2V0KCk7DQoJZm9yIChTdHJpbmcga2V5IDoga2V5U2V0KSB7DQoJCWlmIChrZXkuc3RhcnRzV2l0
aChIQVNIVEFCTEUpKSB7DQoJCQlJRGF0YSBoYXNodGFibGVEb2MgPSAoSURhdGEpIGlEYXRhTWFw
LmdldChrZXkpOw0KCQkJSURhdGFNYXAgaGFzaHRhYmxlTWFwID0gbmV3IElEYXRhTWFwKGhhc2h0
YWJsZURvYyk7DQoJCQlJRGF0YVtdIGVudHJpZXMgPSBoYXNodGFibGVNYXAuZ2V0QXNJRGF0YUFy
cmF5KEVOVFJJRVMpOw0KCQkJSGFzaHRhYmxlPFN0cmluZywgT2JqZWN0PiBoYXNodGFibGUgPSBu
ZXcgSGFzaHRhYmxlPFN0cmluZywgT2JqZWN0PihlbnRyaWVzLmxlbmd0aCk7DQoJCQlmb3IgKElE
YXRhIGVudHJ5IDogZW50cmllcykgew0KCQkJCUlEYXRhTWFwIGVudHJ5TWFwID0gbmV3IElEYXRh
TWFwKGVudHJ5KTsNCgkJCQlTdHJpbmcgaGFzaEtleSA9IGVudHJ5TWFwLmdldEFzU3RyaW5nKEtF
WSk7DQoJCQkJT2JqZWN0IHZhbHVlT2JqZWN0ID0gZW50cnlNYXAuZ2V0KFZBTFVFKTsNCgkJCQlo
YXNodGFibGUucHV0KGhhc2hLZXksIHZhbHVlT2JqZWN0KTsNCgkJCX0NCgkJCWlEYXRhTWFwLnB1
dChrZXkuc3Vic3RyaW5nKEhBU0hUQUJMRS5sZW5ndGgoKSksIGhhc2h0YWJsZSk7DQoJCX0gZWxz
ZSBpZiAoa2V5LnN0YXJ0c1dpdGgoU1RSRUFNKSkgew0KCQkJU3RyaW5nIHN0cmVhbVN0cmluZyA9
IGlEYXRhTWFwLmdldEFzU3RyaW5nKGtleSk7DQoNCgkJCS8vIGlucHV0DQoJCQlJRGF0YSBpbnB1
dCA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsNCgkJCUlEYXRhTWFwIGlucHV0TWFwID0gbmV3IElE
YXRhTWFwKGlucHV0KTsNCgkJCWlucHV0TWFwLnB1dCgic3RyaW5nIiwgc3RyZWFtU3RyaW5nKTsN
CgkJCWlucHV0TWFwLnB1dCgiZW5jb2RpbmciLCBVVEZfOCk7DQoNCgkJCS8vIG91dHB1dA0KCQkJ
SURhdGEgb3V0cHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOw0KCQkJdHJ5ew0KCQkJCW91dHB1
dCA9IFNlcnZpY2UuZG9JbnZva2UoInB1Yi5pbyIsICJzdHJpbmdUb1N0cmVhbSIsIGlucHV0KTsN
CgkJCX0gY2F0Y2goRXhjZXB0aW9uIGUpe30NCgkJCUlEYXRhTWFwIG91dHB1dE1hcCA9IG5ldyBJ
RGF0YU1hcChvdXRwdXQpOw0KCQkJT2JqZWN0IGlucHV0U3RyZWFtID0gb3V0cHV0TWFwLmdldCgi
aW5wdXRTdHJlYW0iICk7DQoNCgkJCWlEYXRhTWFwLnB1dChrZXkuc3Vic3RyaW5nKFNUUkVBTS5s
ZW5ndGgoKSksIGlucHV0U3RyZWFtKTsNCgkJfSBlbHNlIGlmIChrZXkuc3RhcnRzV2l0aChBUlJB
WUxJU1QpKSB7DQoJCQlJRGF0YSBhcnJheUxpc3REb2MgPSAoSURhdGEpIGlEYXRhTWFwLmdldChr
ZXkpOw0KCQkJSURhdGFNYXAgYXJyYXlMaXN0TWFwID0gbmV3IElEYXRhTWFwKGFycmF5TGlzdERv
Yyk7DQoJCQlJRGF0YVtdIGVudHJpZXMgPSBhcnJheUxpc3RNYXAuZ2V0QXNJRGF0YUFycmF5KEVO
VFJJRVMpOw0KCQkJQXJyYXlMaXN0PElEYXRhPiBhcnJheUxpc3QgPSBuZXcgQXJyYXlMaXN0PElE
YXRhPihlbnRyaWVzLmxlbmd0aCk7DQoJCQlmb3IgKElEYXRhIGVudHJ5IDogZW50cmllcykgew0K
CQkJCWFycmF5TGlzdC5hZGQoZW50cnkpOw0KCQkJfQ0KCQkJaURhdGFNYXAucHV0KGtleS5zdWJz
dHJpbmcoQVJSQVlMSVNULmxlbmd0aCgpKSwgYXJyYXlMaXN0KTsNCgkJfSBlbHNlIGlmIChrZXku
c3RhcnRzV2l0aChCWVRFUykpIHsNCgkJCVN0cmluZyBieXRlc1N0cmluZyA9IGlEYXRhTWFwLmdl
dEFzU3RyaW5nKGtleSk7DQoJCQl0cnkgew0KCQkJCWlEYXRhTWFwLnB1dChrZXkuc3Vic3RyaW5n
KEJZVEVTLmxlbmd0aCgpKSwgYnl0ZXNTdHJpbmcuZ2V0Qnl0ZXMoVVRGXzgpKTsNCgkJCX0gY2F0
Y2ggKFVuc3VwcG9ydGVkRW5jb2RpbmdFeGNlcHRpb24gZSkgew0KCQkJfQ0KCQl9IGVsc2UgaWYg
KGtleS5zdGFydHNXaXRoKE5PREUpKSB7DQoJCQlJRGF0YSBub2RlRG9jID0gaURhdGFNYXAuZ2V0
QXNJRGF0YShrZXkpOw0KCQkJeG1sU3RyaW5nVG9Ob2RlKGRvY3VtZW50VG9YbWxTdHJpbmcobm9k
ZURvYykpOw0KCQkJaURhdGFNYXAucHV0KGtleS5zdWJzdHJpbmcoTk9ERS5sZW5ndGgoKSksIHht
bFN0cmluZ1RvTm9kZShkb2N1bWVudFRvWG1sU3RyaW5nKG5vZGVEb2MpKSk7DQoJCX0gZWxzZSBp
ZiAoaURhdGFNYXAuZ2V0KGtleSkgaW5zdGFuY2VvZiBJRGF0YSkgew0KCQkJcmVwbGljYXRlT2Jq
ZWN0c0Zyb21Eb2NzSW1wbCgoSURhdGEpIGlEYXRhTWFwLmdldChrZXkpKTsNCgkJfSBlbHNlIGlm
IChpRGF0YU1hcC5nZXQoa2V5KSBpbnN0YW5jZW9mIElEYXRhW10pIHsNCgkJCWZvcihJRGF0YSBp
RGF0YU9mQXJyYXkgOiAoSURhdGFbXSkgaURhdGFNYXAuZ2V0KGtleSkpIHsNCgkJCQlyZXBsaWNh
dGVPYmplY3RzRnJvbURvY3NJbXBsKGlEYXRhT2ZBcnJheSk7DQoJCQl9DQoJCX0NCgl9DQoNCgly
ZXR1cm4gaURhdGE7DQp9DQoNCnByaXZhdGUgc3RhdGljIElEYXRhIG5vZGVUb0RvY3VtZW50KE5v
ZGUgbm9kZSkgew0KDQoJLy8gaW5wdXQNCglJRGF0YSBpbnB1dCA9IElEYXRhRmFjdG9yeS5jcmVh
dGUoKTsNCglJRGF0YUN1cnNvciBpbnB1dEN1cnNvciA9IGlucHV0LmdldEN1cnNvcigpOw0KCUlE
YXRhVXRpbC5wdXQoIGlucHV0Q3Vyc29yLCAibm9kZSIsIG5vZGUgKTsNCg0KCS8vIG91dHB1dA0K
CUlEYXRhIAlvdXRwdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJdHJ5ew0KCQlvdXRwdXQg
PSBTZXJ2aWNlLmRvSW52b2tlKCAicHViLnhtbCIsICJ4bWxOb2RlVG9Eb2N1bWVudCIsIGlucHV0
ICk7DQoJfWNhdGNoKCBFeGNlcHRpb24gZSl7fQ0KCUlEYXRhQ3Vyc29yIG91dHB1dEN1cnNvciA9
IG91dHB1dC5nZXRDdXJzb3IoKTsNCg0KCS8vIGRvY3VtZW50DQoJSURhdGEJZG9jdW1lbnQgPSBJ
RGF0YVV0aWwuZ2V0SURhdGEoIG91dHB1dEN1cnNvciwgImRvY3VtZW50IiApOw0KCW91dHB1dEN1
cnNvci5kZXN0cm95KCk7DQoJDQoJcmV0dXJuIGRvY3VtZW50Ow0KDQp9DQoNCnByaXZhdGUgc3Rh
dGljIFN0cmluZyBkb2N1bWVudFRvWG1sU3RyaW5nKElEYXRhIGlkYXRhKSB7DQoNCgkvLyBpbnB1
dA0KCUlEYXRhIGlucHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOw0KCUlEYXRhQ3Vyc29yIGlu
cHV0Q3Vyc29yID0gaW5wdXQuZ2V0Q3Vyc29yKCk7DQoNCgkvLyBkb2N1bWVudA0KCUlEYXRhVXRp
bC5wdXQoIGlucHV0Q3Vyc29yLCAiZG9jdW1lbnQiLCBpZGF0YSApOw0KDQoJLy8gb3V0cHV0DQoJ
SURhdGEgCW91dHB1dCA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsNCgl0cnl7DQoJCW91dHB1dCA9
IFNlcnZpY2UuZG9JbnZva2UoICJwdWIueG1sIiwgImRvY3VtZW50VG9YTUxTdHJpbmciLCBpbnB1
dCApOw0KCX1jYXRjaCggRXhjZXB0aW9uIGUpe30NCglJRGF0YUN1cnNvciBvdXRwdXRDdXJzb3Ig
PSBvdXRwdXQuZ2V0Q3Vyc29yKCk7DQoJCVN0cmluZwl4bWxkYXRhID0gSURhdGFVdGlsLmdldFN0
cmluZyggb3V0cHV0Q3Vyc29yLCAieG1sZGF0YSIgKTsNCglvdXRwdXRDdXJzb3IuZGVzdHJveSgp
Ow0KDQoJcmV0dXJuIHhtbGRhdGE7DQp9DQoNCnByaXZhdGUgc3RhdGljIE5vZGUgeG1sU3RyaW5n
VG9Ob2RlKFN0cmluZyB4bWxTdHJpbmcpIHsNCg0KCS8vIGlucHV0DQoJSURhdGEgaW5wdXQgPSBJ
RGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJSURhdGFDdXJzb3IgaW5wdXRDdXJzb3IgPSBpbnB1dC5n
ZXRDdXJzb3IoKTsNCglJRGF0YVV0aWwucHV0KCBpbnB1dEN1cnNvciwgInhtbGRhdGEiLCB4bWxT
dHJpbmcgKTsNCg0KCS8vIG91dHB1dA0KCUlEYXRhIAlvdXRwdXQgPSBJRGF0YUZhY3RvcnkuY3Jl
YXRlKCk7DQoJdHJ5ew0KCQlvdXRwdXQgPSBTZXJ2aWNlLmRvSW52b2tlKCAicHViLnhtbCIsICJ4
bWxTdHJpbmdUb1hNTE5vZGUiLCBpbnB1dCApOw0KCX1jYXRjaCggRXhjZXB0aW9uIGUpe30NCglJ
RGF0YUN1cnNvciBvdXRwdXRDdXJzb3IgPSBvdXRwdXQuZ2V0Q3Vyc29yKCk7DQoJCU9iamVjdAlu
b2RlID0gSURhdGFVdGlsLmdldCggb3V0cHV0Q3Vyc29yLCAibm9kZSIgKTsNCglvdXRwdXRDdXJz
b3IuZGVzdHJveSgpOw0KCQ0KCXJldHVybiAoTm9kZSkgbm9kZTsNCn0NCg0KcHVibGljIHN0YXRp
YyB2b2lkIGxvZyhTdHJpbmcgbWVzc2FnZSkgew0KCS8vIGlucHV0DQoJSURhdGEgaW5wdXQgPSBJ
RGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJSURhdGFDdXJzb3IgaW5wdXRDdXJzb3IgPSBpbnB1dC5n
ZXRDdXJzb3IoKTsNCglJRGF0YVV0aWwucHV0KGlucHV0Q3Vyc29yLCAibWVzc2FnZSIsIG1lc3Nh
Z2UpOw0KCWlucHV0Q3Vyc29yLmRlc3Ryb3koKTsNCg0KCXRyeSB7DQoJCVNlcnZpY2UuZG9JbnZv
a2UoInB1Yi5mbG93IiwgImRlYnVnTG9nIiwgaW5wdXQpOw0KCX0gY2F0Y2ggKEV4Y2VwdGlvbiBl
KSB7DQoJfQ0KfQkNCgkNCgkNCgkNCg==</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>com.wm.util.coder.IDataXMLCoder</value>
    <value>com.wm.app.b2b.server.InvokeState</value>
    <value>java.io.BufferedOutputStream</value>
    <value>java.io.IOException</value>
    <value>java.io.InputStream</value>
    <value>java.io.OutputStream</value>
    <value>java.io.UnsupportedEncodingException</value>
    <value>java.nio.file.Files</value>
    <value>java.nio.file.Path</value>
    <value>java.nio.file.Paths</value>
    <value>java.time.Instant</value>
    <value>java.time.LocalDateTime</value>
    <value>java.time.ZoneId</value>
    <value>java.time.format.DateTimeFormatter</value>
    <value>java.util.ArrayList</value>
    <value>java.util.Arrays</value>
    <value>java.util.Enumeration</value>
    <value>java.util.HashMap</value>
    <value>java.util.Hashtable</value>
    <value>java.util.List</value>
    <value>java.util.Map</value>
    <value>java.util.Set</value>
    <value>java.util.Stack</value>
    <value>javax.jms.JMSException</value>
    <value>javax.jms.MapMessage</value>
    <value>javax.print.attribute.standard.Severity</value>
    <value>com.wm.lang.xml.Node</value>
    <value>com.softwareag.util.IDataMap</value>
  </array>
</Values>
