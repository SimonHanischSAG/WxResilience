<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">LyoqDQogKiBSZWN1cnNpdmVseSByZW1vdmVzIGFsbCB2YWx1ZXMgZnJvbSBhIGRvY3VtZW50IHRo
YXQgYXJlIG5vdCB3aGl0ZWxpc3RlZC4NCiAqIA0KICogQHBhcmFtIGtleSBUaGUga2V5IG9mIHRo
ZSB2YWx1ZS4gQ2FuIGJlIG51bGwuDQogKiBAcGFyYW0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNr
IGlmIGl0IHNob3VsZCBiZSByZW1vdmVkLiBUaGUgcm9vdCBzaG91bGQgYmUgZWl0aGVyIGEgZG9j
dW1lbnQNCiAqIG9yIGEgZG9jdW1lbnQtYXJyYXkuDQogKiBAcGFyYW0gd2hpdGVsaXN0IEEgc2V0
IG9mIGNsYXNzZXMgdGhhdCBzaG91bGQgYmUga2VwdC4gQ2FuIGJlIG51bGwgaWYgb25seSB0aGUg
ZGVmYXVsdCB0eXBlcw0KICogc2hvdWxkIGJlIGtlcHQuDQogKiBAcGFyYW0gc2l6ZSBBIERvY3Vt
ZW50U2l6ZS1PYmplY3QgdG8gY2FsY3VsYXRlIHRoZSBzaXplIG9mIHRoZSBkb2N1bWVudC4NCiAq
IEByZXR1cm4gV2hldGhlciB0aGUgdmFsdWUgc2hvdWxkIGJlIGtlcHQgb3Igbm90LiBUaGUgY2Fs
bGVyIGlzIHJlc3BvbnNpYmxlIGZvciByZW1vdmluZyB0aGUgdmFsdWUuDQogKiBAdGhyb3dzIHNj
aHdhcnouY29tbW9uLmljbC51dGlscy5kb2N1bWVudC5hcHBseVdoaXRlbGlzdF9TVkMuRG9jdW1l
bnRTaXplLkRvY3VtZW50U2l6ZVRvb0JpZ0V4Y2VwdGlvbiANCiAqLw0KcHJpdmF0ZSBzdGF0aWMg
Ym9vbGVhbiBhcHBseVdoaXRlbGlzdChTdHJpbmcga2V5LCBPYmplY3QgdmFsdWUsIExpc3Q8Q2xh
c3M8Pz4+IHdoaXRlbGlzdCwgRG9jdW1lbnRTaXplIHNpemUpDQoJCXRocm93cyBEb2N1bWVudFNp
emUuVG9vQmlnRXhjZXB0aW9uIHsNCgkNCglpZiAodmFsdWUgaW5zdGFuY2VvZiBJRGF0YSkgew0K
CQlzaXplLmFkZEtleShrZXkpOw0KCQlzaXplLmFkZElEYXRhKCk7DQoNCgkJSURhdGFDdXJzb3Ig
Y3Vyc29yID0gKChJRGF0YSkgdmFsdWUpLmdldEN1cnNvcigpOw0KCQlib29sZWFuIGRlbGV0ZSA9
IGZhbHNlOw0KCQl3aGlsZSAoZGVsZXRlICYmIGN1cnNvci5kZWxldGUoKSB8fCBjdXJzb3IubmV4
dCgpKSB7DQoJCQlkZWxldGUgPSAhYXBwbHlXaGl0ZWxpc3QoY3Vyc29yLmdldEtleSgpLCBjdXJz
b3IuZ2V0VmFsdWUoKSwgd2hpdGVsaXN0LCBzaXplKTsNCgkJfQ0KCQljdXJzb3IuZGVzdHJveSgp
Ow0KCQlyZXR1cm4gdHJ1ZTsNCgl9DQoJZWxzZSBpZiAodmFsdWUgaW5zdGFuY2VvZiBJRGF0YVtd
KSB7DQoJCXNpemUuYWRkS2V5KGtleSk7DQoNCgkJZm9yIChJRGF0YSBkb2MgOiAoSURhdGFbXSkg
dmFsdWUpIHsNCgkJCWFwcGx5V2hpdGVsaXN0KG51bGwsIGRvYywgd2hpdGVsaXN0LCBzaXplKTsN
CgkJfQ0KCQlyZXR1cm4gdHJ1ZTsJCQkNCgl9DQoNCglib29sZWFuIGtlZXAgPSB2YWx1ZSA9PSBu
dWxsDQoJCXx8IHZhbHVlIGluc3RhbmNlb2YgU3RyaW5nICAgICAgJiYgc2l6ZS5hZGRTdHJpbmco
dmFsdWUpDQoJCXx8IHZhbHVlIGluc3RhbmNlb2YgU3RyaW5nW10gICAgJiYgc2l6ZS5hZGRTdHJp
bmdBcnJheSh2YWx1ZSkNCgkJfHwgdmFsdWUgaW5zdGFuY2VvZiBOdW1iZXIgICAgICAmJiBzaXpl
LmFkZE51bWJlcih2YWx1ZSkNCgkJfHwgdmFsdWUgaW5zdGFuY2VvZiBOdW1iZXJbXSAgICAmJiBz
aXplLmFkZE51bWJlckFycmF5KHZhbHVlKQ0KCQl8fCB2YWx1ZSBpbnN0YW5jZW9mIEJvb2xlYW4g
ICAgICYmIHNpemUuYWRkQm9vbGVhbih2YWx1ZSkNCgkJfHwgdmFsdWUgaW5zdGFuY2VvZiBCb29s
ZWFuW10gICAmJiBzaXplLmFkZEJvb2xlYW5BcnJheSh2YWx1ZSkNCgkJfHwgdmFsdWUgaW5zdGFu
Y2VvZiBDaGFyYWN0ZXIgICAmJiBzaXplLmFkZENoYXIodmFsdWUpDQoJCXx8IHZhbHVlIGluc3Rh
bmNlb2YgQ2hhcmFjdGVyW10gJiYgc2l6ZS5hZGRDaGFyQXJyYXkodmFsdWUpDQoJCXx8IHZhbHVl
IGluc3RhbmNlb2YgRGF0ZSAgICAgICAgJiYgc2l6ZS5hZGREYXRlKHZhbHVlKQ0KCQl8fCB2YWx1
ZSBpbnN0YW5jZW9mIERhdGVbXSAgICAgICYmIHNpemUuYWRkRGF0ZUFycmF5KHZhbHVlKQ0KCQkN
CgkJLy8gQSBTdHJpbmcgVGFibGUgaXMgaW50ZXJuYWxseSBqdXN0IGEgdHdvIGRpbWVuc2lvbmFs
IFN0cmluZyBhcnJheS4NCgkJfHwgdmFsdWUgaW5zdGFuY2VvZiBTdHJpbmdbXVtdICAmJiBzaXpl
LmFkZFN0cmluZ1RhYmxlKHZhbHVlKQ0KCQkJCQkJDQoJCS8vIENoZWNrIGZvciBwcmltaXRpdmUg
YXJyYXlzLg0KCQl8fCB2YWx1ZS5nZXRDbGFzcygpLmlzQXJyYXkoKSAmJiB2YWx1ZS5nZXRDbGFz
cygpLmdldENvbXBvbmVudFR5cGUoKS5pc1ByaW1pdGl2ZSgpICYmIHNpemUuYWRkUHJpbWl0aXZl
QXJyYXkodmFsdWUpDQoNCgkJLy8gQ2hlY2sgaWYgdGhlIHZhbHVlIGlzIG9mIGFueSB0eXBlIGlu
IHRoZSBwcm92aWRlZCB3aGl0ZWxpc3QuIFRoZSB2YWx1ZSBpcyBhbHNvIHZhbGlkIGlmIGl0IGlz
DQoJCS8vIGFuIGFycmF5IG9mIHRob3NlIHR5cGVzLg0KCQl8fCB3aGl0ZWxpc3QgIT0gbnVsbCAm
JiB3aGl0ZWxpc3Quc3RyZWFtKCkuYW55TWF0Y2goYyAtPiB2YWx1ZS5nZXRDbGFzcygpLmlzQXJy
YXkoKQ0KCQkJCT8gYy5pc0Fzc2lnbmFibGVGcm9tKHZhbHVlLmdldENsYXNzKCkuZ2V0Q29tcG9u
ZW50VHlwZSgpKQ0KCQkJCTogYy5pc0luc3RhbmNlKHZhbHVlKQ0KCQkpOw0KCQ0KCWlmIChrZWVw
KSBzaXplLmFkZEtleShrZXkpOw0KCXJldHVybiBrZWVwOw0KfQ0KDQovKioNCiAqIFRoaXMgY2xh
c3MgdGFrZXMgY2FyZSBvZiB0aGUgc2l6ZS1jYWxjdWxhdGlvbi4gSXQgcHJvdmlkZXMgZGlmZmVy
ZW50IG1ldGhvZHMgZm9yIGFkZGluZyB0aGUgc2l6ZSBvZiB2YXJpb3VzIHR5cGVzDQogKiBhbmQg
bWF5IHRocm93IGEgVG9vQmlnRXhjZXB0aW9uIGlmIHRoZSBvcHRpb25hbCBtYXggc2l6ZSBpcyBl
eGNlZWRlZC4NCiAqLw0KcHJpdmF0ZSBzdGF0aWMgY2xhc3MgRG9jdW1lbnRTaXplIHsNCglwcml2
YXRlIHN0YXRpYyBmaW5hbCBNYXA8Q2xhc3M8Pz4sIEludGVnZXI+IE5VTUJFUl9TSVpFUzsNCglw
cml2YXRlIHN0YXRpYyBmaW5hbCBpbnQgSURBVEFfT1ZFUkhFQURfU0laRSA9IDE3Ow0KCXByaXZh
dGUgc3RhdGljIGZpbmFsIGludCBQQUlSX09WRVJIRUFEX1NJWkUgPSAxOw0KCXByaXZhdGUgc3Rh
dGljIGZpbmFsIGludCBDSEFSX1NJWkUgPSAyOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIGludCBC
T09MX1NJWkUgPSAxOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIGludCBEQVRFX1NJWkUgPSAzMjsN
Cg0KCXByaXZhdGUgbG9uZyBzaXplOw0KCXByaXZhdGUgTG9uZyBtYXhTaXplOw0KCQ0KCXB1Ymxp
YyBEb2N1bWVudFNpemUoTG9uZyBtYXhTaXplKSB7DQoJCXRoaXMubWF4U2l6ZSA9IG1heFNpemU7
DQoJfQ0KCQ0KCXB1YmxpYyBsb25nIGdldFNpemUoKSB7DQoJCXJldHVybiBzaXplOw0KCX0NCgkN
CglwdWJsaWMgYm9vbGVhbiBhZGRLZXkoU3RyaW5nIGtleSkgdGhyb3dzIFRvb0JpZ0V4Y2VwdGlv
biAgew0KCQlpZiAoa2V5ICE9IG51bGwpIHsNCgkJCXNpemUgKz0ga2V5Lmxlbmd0aCgpICogQ0hB
Ul9TSVpFOw0KCQkJc2l6ZSArPSBQQUlSX09WRVJIRUFEX1NJWkU7DQoJCQlyZXR1cm4gY2hlY2tT
aXplKCk7DQoJCX0NCgkJcmV0dXJuIHRydWU7DQoJfQ0KCQ0KCXB1YmxpYyBib29sZWFuIGFkZElE
YXRhKCkgdGhyb3dzIFRvb0JpZ0V4Y2VwdGlvbiAgew0KCQlzaXplICs9IElEQVRBX09WRVJIRUFE
X1NJWkU7DQoJCXJldHVybiBjaGVja1NpemUoKTsNCgl9DQoJDQoJcHVibGljIGJvb2xlYW4gYWRk
U3RyaW5nKE9iamVjdCBvKSB0aHJvd3MgVG9vQmlnRXhjZXB0aW9uICB7DQoJCXNpemUgKz0gKChT
dHJpbmcpIG8pLmxlbmd0aCgpICogQ0hBUl9TSVpFOw0KCQlyZXR1cm4gY2hlY2tTaXplKCk7DQoJ
fQ0KCQ0KCXB1YmxpYyBib29sZWFuIGFkZFN0cmluZ0FycmF5KE9iamVjdCBvKSB0aHJvd3MgVG9v
QmlnRXhjZXB0aW9uICB7DQoJCWZvciAoU3RyaW5nIHMgOiAoU3RyaW5nW10pIG8pIHsNCgkJCWlm
IChzICE9IG51bGwpIHNpemUgKz0gcy5sZW5ndGgoKSAqIENIQVJfU0laRTsNCgkJfQ0KCQlyZXR1
cm4gY2hlY2tTaXplKCk7DQoJfQ0KCQ0KCXB1YmxpYyBib29sZWFuIGFkZFN0cmluZ1RhYmxlKE9i
amVjdCBvKSB0aHJvd3MgVG9vQmlnRXhjZXB0aW9uICB7DQoJCWZvciAoU3RyaW5nW10gczEgOiAo
U3RyaW5nW11bXSkgbykgew0KCQkJaWYgKHMxICE9IG51bGwpIHsNCgkJCQlmb3IgKFN0cmluZyBz
MiA6IChTdHJpbmdbXSkgczEpIHsNCgkJCQkJaWYgKHMyICE9IG51bGwpIHNpemUgKz0gczIubGVu
Z3RoKCkgKiBDSEFSX1NJWkU7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJCXJldHVybiBjaGVja1NpemUo
KTsNCgl9DQoJDQoJcHVibGljIGJvb2xlYW4gYWRkTnVtYmVyKE9iamVjdCBvKSB0aHJvd3MgVG9v
QmlnRXhjZXB0aW9uICB7DQoJCXNpemUgKz0gTlVNQkVSX1NJWkVTLmdldChvLmdldENsYXNzKCkp
Ow0KCQlyZXR1cm4gY2hlY2tTaXplKCk7DQoJfQ0KCQ0KCXB1YmxpYyBib29sZWFuIGFkZE51bWJl
ckFycmF5KE9iamVjdCBvKSB0aHJvd3MgVG9vQmlnRXhjZXB0aW9uICB7DQoJCXNpemUgKz0gTlVN
QkVSX1NJWkVTLmdldChvLmdldENsYXNzKCkuZ2V0Q29tcG9uZW50VHlwZSgpKSAqIHNpemVPZigo
T2JqZWN0W10pIG8pOw0KCQlyZXR1cm4gY2hlY2tTaXplKCk7DQoJfQ0KCQ0KCXB1YmxpYyBib29s
ZWFuIGFkZEJvb2xlYW4oT2JqZWN0IG8pIHRocm93cyBUb29CaWdFeGNlcHRpb24gIHsNCgkJc2l6
ZSArPSBCT09MX1NJWkU7DQoJCXJldHVybiBjaGVja1NpemUoKTsNCgl9DQoJDQoJcHVibGljIGJv
b2xlYW4gYWRkQm9vbGVhbkFycmF5KE9iamVjdCBvKSB0aHJvd3MgVG9vQmlnRXhjZXB0aW9uICB7
DQoJCXNpemUgKz0gQk9PTF9TSVpFICogc2l6ZU9mKChPYmplY3RbXSkgbyk7DQoJCXJldHVybiBj
aGVja1NpemUoKTsNCgl9DQoJDQoJcHVibGljIGJvb2xlYW4gYWRkQ2hhcihPYmplY3QgbykgdGhy
b3dzIFRvb0JpZ0V4Y2VwdGlvbiAgew0KCQlzaXplICs9IENIQVJfU0laRTsNCgkJcmV0dXJuIGNo
ZWNrU2l6ZSgpOw0KCX0NCgkNCglwdWJsaWMgYm9vbGVhbiBhZGRDaGFyQXJyYXkoT2JqZWN0IG8p
IHRocm93cyBUb29CaWdFeGNlcHRpb24gIHsNCgkJc2l6ZSArPSBDSEFSX1NJWkUgKiBzaXplT2Yo
KE9iamVjdFtdKSBvKTsNCgkJcmV0dXJuIGNoZWNrU2l6ZSgpOw0KCX0NCgkNCglwdWJsaWMgYm9v
bGVhbiBhZGREYXRlKE9iamVjdCBvKSB0aHJvd3MgVG9vQmlnRXhjZXB0aW9uICB7DQoJCXNpemUg
Kz0gREFURV9TSVpFOw0KCQlyZXR1cm4gY2hlY2tTaXplKCk7DQoJfQ0KCQ0KCXB1YmxpYyBib29s
ZWFuIGFkZERhdGVBcnJheShPYmplY3QgbykgdGhyb3dzIFRvb0JpZ0V4Y2VwdGlvbiAgew0KCQlz
aXplICs9IERBVEVfU0laRSAqIHNpemVPZigoT2JqZWN0W10pIG8pOw0KCQlyZXR1cm4gY2hlY2tT
aXplKCk7DQoJfQ0KCQ0KCXB1YmxpYyBib29sZWFuIGFkZFByaW1pdGl2ZUFycmF5KE9iamVjdCBv
KSB0aHJvd3MgVG9vQmlnRXhjZXB0aW9uICB7DQoJCXNpemUgKz0gTlVNQkVSX1NJWkVTLmdldChv
LmdldENsYXNzKCkuZ2V0Q29tcG9uZW50VHlwZSgpKSAqIEFycmF5LmdldExlbmd0aChvKTsNCgkJ
cmV0dXJuIGNoZWNrU2l6ZSgpOw0KCX0NCgkNCglwcml2YXRlIGxvbmcgc2l6ZU9mKE9iamVjdFtd
IGFycmF5KSB7DQoJCXJldHVybiBBcnJheXMuc3RyZWFtKGFycmF5KQ0KCQkJCS5maWx0ZXIoamF2
YS51dGlsLk9iamVjdHM6Om5vbk51bGwpDQoJCQkJLmNvdW50KCk7DQoJfQ0KCQ0KCXByaXZhdGUg
Ym9vbGVhbiBjaGVja1NpemUoKSB0aHJvd3MgVG9vQmlnRXhjZXB0aW9uICB7DQoJCWlmIChtYXhT
aXplICE9IG51bGwgJiYgc2l6ZSA+IG1heFNpemUpIHRocm93IG5ldyBUb29CaWdFeGNlcHRpb24o
KTsNCgkJcmV0dXJuIHRydWU7DQoJfQ0KCQ0KCXN0YXRpYyB7DQoJCU5VTUJFUl9TSVpFUyA9IG5l
dyBIYXNoTWFwPD4oKTsNCgkJTlVNQkVSX1NJWkVTLnB1dChCeXRlLmNsYXNzLCAxKTsNCgkJTlVN
QkVSX1NJWkVTLnB1dChTaG9ydC5jbGFzcywgMik7DQoJCU5VTUJFUl9TSVpFUy5wdXQoSW50ZWdl
ci5jbGFzcywgNCk7DQoJCU5VTUJFUl9TSVpFUy5wdXQoTG9uZy5jbGFzcywgOCk7DQoJCU5VTUJF
Ul9TSVpFUy5wdXQoRmxvYXQuY2xhc3MsIDQpOw0KCQlOVU1CRVJfU0laRVMucHV0KERvdWJsZS5j
bGFzcywgOCk7DQoJCS8vIENoYXJhY3RlciBub3QgbmVlZGVkLCBzaW5jZSBpdCBpc24ndCBhIG51
bWJlci4NCg0KCQlOVU1CRVJfU0laRVMucHV0KGJ5dGUuY2xhc3MsIDEpOw0KCQlOVU1CRVJfU0la
RVMucHV0KHNob3J0LmNsYXNzLCAyKTsNCgkJTlVNQkVSX1NJWkVTLnB1dChpbnQuY2xhc3MsIDQp
Ow0KCQlOVU1CRVJfU0laRVMucHV0KGxvbmcuY2xhc3MsIDgpOw0KCQlOVU1CRVJfU0laRVMucHV0
KGZsb2F0LmNsYXNzLCA0KTsNCgkJTlVNQkVSX1NJWkVTLnB1dChkb3VibGUuY2xhc3MsIDgpOw0K
CQlOVU1CRVJfU0laRVMucHV0KGNoYXIuY2xhc3MsIENIQVJfU0laRSk7DQoJfQ0KCQ0KCWNsYXNz
IFRvb0JpZ0V4Y2VwdGlvbiBleHRlbmRzIEV4Y2VwdGlvbiB7fQ0KfQ0KDQoNCg==</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>java.lang.reflect.Array</value>
    <value>java.util.Arrays</value>
    <value>java.util.Date</value>
    <value>java.util.HashMap</value>
    <value>java.util.List</value>
    <value>java.util.Map</value>
    <value>java.util.stream.Collectors</value>
    <value>com.wm.data.IData</value>
    <value>com.wm.data.IDataCursor</value>
    <value>com.wm.data.IDataUtil</value>
  </array>
</Values>
