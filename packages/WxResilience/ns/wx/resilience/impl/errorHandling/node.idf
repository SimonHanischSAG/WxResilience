<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">QEZ1bmN0aW9uYWxJbnRlcmZhY2UKcHVibGljIHN0YXRpYyBpbnRlcmZhY2UgRXJyb3JIYW5kbGlu
Z0xpc3RlbmVyIHsKCXB1YmxpYyB2b2lkIGFjY2VwdChTdHJpbmcgcFNlcnZpY2VOYW1lLCBJRGF0
YSBwUGlwZWxpbmUpOwp9CgpARnVuY3Rpb25hbEludGVyZmFjZQpwdWJsaWMgc3RhdGljIGludGVy
ZmFjZSBDYWxsZXJUeXBlU3VwcGxpZXIgewoJcHVibGljIFN0cmluZyBnZXQoKTsKfQoKcHJpdmF0
ZSBzdGF0aWMgUGF0aCBjcmVhdGVTdW1tYXJpemVkRXJyb3JIYW5kbGluZygpIHRocm93cyBTZXJ2
aWNlRXhjZXB0aW9uIHsKCXN5bmNocm9uaXplZChjcmVhdGVTdW1tYXJpemVkRXJyb3JIYW5kbGlu
Z0xvY2spIHsKCQlyZXR1cm4gY3JlYXRlU3VtbWFyaXplZEVycm9ySGFuZGxpbmcoU1VNTUFSSVpF
RF9FUlJPUl9IQU5ETElOR19GSUxFKTsKCX0KfQpwcml2YXRlIHN0YXRpYyBQYXRoIGNyZWF0ZVN1
bW1hcml6ZWRFcnJvckhhbmRsaW5nKFN0cmluZyBwRmlsZU5hbWUpCgkJdGhyb3dzIFNlcnZpY2VF
eGNlcHRpb24gewoJRmlsZSBJU0RpciA9IFNlcnZlckFQSS5nZXRTZXJ2ZXJDb25maWdEaXIoKS5n
ZXRQYXJlbnRGaWxlKCk7CglGaWxlIElTUGFja2FnZXMgPSBuZXcgamF2YS5pby5GaWxlKElTRGly
LCAicGFja2FnZXMiKTsKCWZpbmFsIFBhdGggY29uZmlnRGlyID0gU2VydmVyQVBJLmdldFBhY2th
Z2VDb25maWdEaXIoV1hfUkVTSUxJRU5DRSkudG9QYXRoKCk7CglmaW5hbCBQYXRoIG91dHB1dEZp
bGUgPSBjb25maWdEaXIucmVzb2x2ZShwRmlsZU5hbWUpOwoJUGF0aHMuYXNzZXJ0UGFyZW50RGly
RXhpc3RzKG91dHB1dEZpbGUpOwoKCXRyeSB7CgkJdHJ5IChDcmVhdG9yIGNyZWF0b3IgPSBTdW1t
YXJpemVkRXJyb3JIYW5kbGluZ0hhbmRsZXIubmV3Q3JlYXRvcihvdXRwdXRGaWxlKSkgewoJCQlm
b3IgKEZpbGUgcGFja2FnZURpciA6IElTUGFja2FnZXMubGlzdEZpbGVzKCkpIHsKCQkJCWlmIChw
YWNrYWdlRGlyLmlzRGlyZWN0b3J5KCkpIHsKCQkJCQlmaW5hbCBTdHJpbmcgcGFja2FnZU5hbWUg
PSBwYWNrYWdlRGlyLmdldE5hbWUoKTsKCQkJCQlpZiAocGFja2FnZU5hbWUuc3RhcnRzV2l0aCgi
V20iKSkgewoJCQkJCQljb250aW51ZTsKCQkJCQl9CgkJCQkJZmluYWwgRmlsZSBwYWNrYWdlQ2Zn
RGlyID0gbmV3IEZpbGUocGFja2FnZURpciwgImNvbmZpZyIpOwoJCQkJCWlmIChwYWNrYWdlQ2Zn
RGlyLmlzRGlyZWN0b3J5KCkpIHsKCQkJCQkJZmluYWwgRmlsZSBwYWNrYWdlRWhkRmlsZSA9IG5l
dyBGaWxlKHBhY2thZ2VDZmdEaXIsIEVSUk9SX0hBTkRMSU5HX1hNTF9GSUxFKTsKCQkJCQkJaWYg
KHBhY2thZ2VFaGRGaWxlLmlzRmlsZSgpKSB7CgkJCQkJCQljcmVhdG9yLnBhcnNlKHBhY2thZ2VF
aGRGaWxlLCBwYWNrYWdlTmFtZSk7CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCQl9CgkJdmFs
aWRhdGVYTUwoKTsKCX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7CgkJTG9nLmxvZ0Vycm9yKCJFcnJv
ciBkdXJpbmcgcGFyc2luZyBvZiBzdW1tYXJpemVkRXhjZXB0aW9uSGFuZGxpbmdEZWZpbml0aW9u
OiAiICsgZS5nZXRNZXNzYWdlKCkpOwoJCXRocm93IEV4Y2VwdGlvbnMuc2hvdyhlLCBTZXJ2aWNl
RXhjZXB0aW9uLmNsYXNzKTsKCX0KCXJldHVybiBvdXRwdXRGaWxlOwp9Cgpwcml2YXRlIHN0YXRp
YyBmaW5hbCBFcnJvckhhbmRsaW5nTGlzdGVuZXIgREVGQVVMVF9FUlJPUl9IQU5ETEVSID0gbmV3
IEVycm9ySGFuZGxpbmdMaXN0ZW5lcigpIHsKCXB1YmxpYyB2b2lkIGFjY2VwdChTdHJpbmcgcywg
SURhdGEgZCkgewoJCUxvZy5sb2dEZWJ1ZygiRGVmYXVsdEVycm9ySGFuZGxlcjogLS0+ICIgKyBz
KTsKCQl0cnkgewoJCQlTZXJ2aWNlLmRvSW52b2tlKE5TTmFtZS5jcmVhdGUocyksIGQpOwoJCX0g
Y2F0Y2ggKEV4Y2VwdGlvbiBlKSB7CgkJCUxvZy5sb2dEZWJ1ZygiRGVmYXVsdEVycm9ySGFuZGxl
cjogIiArIGUuZ2V0Q2xhc3MoKS5nZXROYW1lKCkgKyAiLCAiICsgZS5nZXRNZXNzYWdlKCkpOwoJ
CQl0aHJvdyBuZXcgVW5kZWNsYXJlZFRocm93YWJsZUV4Y2VwdGlvbihlKTsKCQl9CgkJTG9nLmxv
Z0RlYnVnKCJEZWZhdWx0RXJyb3JIYW5kbGVyOiA8LS0iKTsKCX0KfTsKcHJpdmF0ZSBzdGF0aWMg
RXJyb3JIYW5kbGluZ0xpc3RlbmVyIGdldEVycm9ySGFuZGxlcigpIHsKCXN5bmNocm9uaXplZCAo
ZXJyb3JIYW5kbGluZ0xpc3RlbmVyTG9jaykgewoJCWlmIChfZXJyb3JIYW5kbGluZ0xpc3RlbmVy
ID09IG51bGwpIHsKCQkJcmV0dXJuIERFRkFVTFRfRVJST1JfSEFORExFUjsKCQl9IGVsc2UgewoJ
CQlyZXR1cm4gX2Vycm9ySGFuZGxpbmdMaXN0ZW5lcjsKCQl9Cgl9Cn0KcHVibGljIHN0YXRpYyB2
b2lkIHNldEVycm9ySGFuZGxlcihFcnJvckhhbmRsaW5nTGlzdGVuZXIgcEVycm9ySGFuZGxpbmdM
aXN0ZW5lcikgewoJc3luY2hyb25pemVkIChlcnJvckhhbmRsaW5nTGlzdGVuZXJMb2NrKSB7CgkJ
X2Vycm9ySGFuZGxpbmdMaXN0ZW5lciA9IHBFcnJvckhhbmRsaW5nTGlzdGVuZXI7Cgl9Cn0KcHJp
dmF0ZSBzdGF0aWMgdm9pZCBpbnZva2VFcnJvckhhbmRsZXIoSURhdGEgcEhhbmRsaW5nU2Vydmlj
ZUlucHV0LAoJCWZpbmFsIFN0cmluZyBwU2VydmljZU5hbWUpIHRocm93cyBFeGNlcHRpb24gewoJ
TG9nLmxvZ0RlYnVnKCJpbnZva2VFcnJvckhhbmRsZXI6IC0tPiAiKTsKCWZpbmFsIEVycm9ySGFu
ZGxpbmdMaXN0ZW5lciBlaGwgPSBnZXRFcnJvckhhbmRsZXIoKTsKCUxvZy5sb2dEZWJ1ZygiaW52
b2tlRXJyb3JIYW5kbGVyOiBlaD0iICsgZWhsKTsKCWVobC5hY2NlcHQocFNlcnZpY2VOYW1lLCBw
SGFuZGxpbmdTZXJ2aWNlSW5wdXQpOwoJTG9nLmxvZ0RlYnVnKCJpbnZva2VFcnJvckhhbmRsZXI6
IDwtLSIpOwoKCS8vIC0tLSA8PElTLUVORD4+IC0tLQp9Cgpwcml2YXRlIHN0YXRpYyBEb2N1bWVu
dCBnZXRlcnJvckhhbmRsaW5ncygpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKCXN5bmNocm9u
aXplZChlcnJvckhhbmRsaW5nTG9jaykgewoJCWlmIChfZXJyb3JIYW5kbGluZyAhPSBudWxsKSB7
CgkJCXJldHVybiBfZXJyb3JIYW5kbGluZzsKCQl9Cgl9Cglpbml0aWFsaXplRXJyb3JIYW5kbGlu
Z3MobnVsbCk7CglzeW5jaHJvbml6ZWQgKGVycm9ySGFuZGxpbmdMb2NrKSB7CgkJaWYgKF9lcnJv
ckhhbmRsaW5nID09IG51bGwpIHsKCQkJdGhyb3cgbmV3IElsbGVnYWxTdGF0ZUV4Y2VwdGlvbigi
VW5hYmxlIHRvIGluaXRpYWxpemUgZXJyb3JIYW5kbGluZy4gRGlkIHlvdSBhc3NlbWJsZSBpdD8i
KTsKCQl9IGVsc2UgewoJCQlyZXR1cm4gX2Vycm9ySGFuZGxpbmc7CgkJfQoJfQp9Cgpwcml2YXRl
IHN0YXRpYyBTdHJpbmcgZ2V0Q2FsbGVyVHlwZSgpIHsKCUNhbGxlclR5cGVTdXBwbGllciBjdHM7
IAoJc3luY2hyb25pemVkIChjYWxsZXJUeXBlU3VwcGxpZXJMb2NrKSB7CgkJY3RzID0gY2FsbGVy
VHlwZVN1cHBsaWVyOwoJfQoJaWYgKGN0cyA9PSBudWxsKSB7CgkJY3RzID0gREVGQVVMVF9DQUxM
RVJfVFlQRV9TVVBQTElFUjsKCX0KCXJldHVybiBjdHMuZ2V0KCk7Cn0KCnB1YmxpYyBzdGF0aWMg
dm9pZCBzZXRDYWxsZXJUeXBlU3VwcGxpZXIoQ2FsbGVyVHlwZVN1cHBsaWVyIHBTdXBwbGllcikg
ewoJc3luY2hyb25pemVkIChjYWxsZXJUeXBlU3VwcGxpZXJMb2NrKSB7CgkJY2FsbGVyVHlwZVN1
cHBsaWVyID0gcFN1cHBsaWVyOwoJfQp9Cgpwcml2YXRlIHN0YXRpYyBTdHJpbmcgZ2V0Q2FsbGVy
VHlwZUJ5Q2FsbGluZ1NlcnZpY2UoKSB7CglJRGF0YSBpbnB1dCA9IG51bGw7CglTdHJpbmcgdHlw
ZSA9ICIiOwoJLy8gb3V0cHV0CglJRGF0YSBvdXRwdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7
Cgl0cnkgewoJCW91dHB1dCA9IFNlcnZpY2UuZG9JbnZva2UoICJ3eC5yZXNpbGllbmNlLmltcGwu
Y2FsbGVyIiwgImdldENhbGxlciIsIGlucHV0ICk7CgkJSURhdGFNYXAgb3V0cHV0TWFwID0gbmV3
IElEYXRhTWFwKG91dHB1dCk7CgkJSURhdGFNYXAgY2FsbGVyTWFwID0gbmV3IElEYXRhTWFwKG91
dHB1dE1hcC5nZXRBc0lEYXRhKCJjYWxsZXIiKSk7CgkJcmV0dXJuIGNhbGxlck1hcC5nZXRBc1N0
cmluZygidHlwZSIpOwoJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsKCQlyZXR1cm4gdHlwZTsKCX0J
Cn0KCgoJcHJpdmF0ZSBzdGF0aWMgU3RyaW5nIGdldENhbGxTdGFja0FzSlNPTlN0cmluZyhBcnJh
eUxpc3Q8SURhdGFDdXJzb3I+IGVycm9ySW5mb0hpZXJhY2h5KSB7CgoJCUlEYXRhW10gY2FsbFN0
YWNrID0gSURhdGFVdGlsLmdldElEYXRhQXJyYXkoZXJyb3JJbmZvSGllcmFjaHkuZ2V0KDApLCBF
UlJPUl9JTkZPX0NBTExfU1RBQ0spOwoJCQoJCVN0cmluZyBqc29uU3RyaW5nID0gIiI7CgkJCgkJ
aWYgKGNhbGxTdGFjayAhPSBudWxsKSB7CgkJCS8vIGlucHV0CgkJCUlEYXRhIGlucHV0ID0gSURh
dGFGYWN0b3J5LmNyZWF0ZSgpOwoJCQlJRGF0YUN1cnNvciBpbnB1dEN1cnNvciA9IGlucHV0Lmdl
dEN1cnNvcigpOwoKCQkJLy8gZG9jdW1lbnQKCQkJSURhdGEgZG9jdW1lbnQgPSBJRGF0YUZhY3Rv
cnkuY3JlYXRlKCk7CgkJCUlEYXRhQ3Vyc29yIGRvY3VtZW50Q3Vyc29yID0gZG9jdW1lbnQuZ2V0
Q3Vyc29yKCk7CgkJCUlEYXRhVXRpbC5wdXQoZG9jdW1lbnRDdXJzb3IsICJjYWxsU3RhY2siLCBj
YWxsU3RhY2spOwoJCQlJRGF0YVV0aWwucHV0KGlucHV0Q3Vyc29yLCAiZG9jdW1lbnQiLCBkb2N1
bWVudCk7CgkJCUlEYXRhVXRpbC5wdXQoaW5wdXRDdXJzb3IsICJwcmV0dHlQcmludCIsICJmYWxz
ZSIpOwoJCQlpbnB1dEN1cnNvci5kZXN0cm95KCk7CgoJCQkvLyBvdXRwdXQKCQkJSURhdGEgb3V0
cHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoJCQl0cnkgewoJCQkJb3V0cHV0ID0gU2Vydmlj
ZS5kb0ludm9rZSgicHViLmpzb24iLCAiZG9jdW1lbnRUb0pTT05TdHJpbmciLCBpbnB1dCk7CgkJ
CQlJRGF0YUN1cnNvciBvdXRwdXRDdXJzb3IgPSBvdXRwdXQuZ2V0Q3Vyc29yKCk7CgkJCQlqc29u
U3RyaW5nID0gSURhdGFVdGlsLmdldFN0cmluZyhvdXRwdXRDdXJzb3IsICJqc29uU3RyaW5nIik7
CgkJCQlvdXRwdXRDdXJzb3IuZGVzdHJveSgpOwoJCQl9IGNhdGNoIChFeGNlcHRpb24gZSkgewoJ
CQkJLy8gSXQgaXMgcG9zc2libGUsIHRoYXQgdGhpcyBzZXJ2aWNlIGRvZXMgbm90IGV4aXN0cyAo
V004LjIgZW52aXJvbm1lbnRzL3N0b3JlcykuCgkJCQkvLyBUcnkgYWdhaW4gd2l0aCBTZXJ2aWNl
IGZyb20gV21KU09OIHBhY2thZ2U6CgkJCQkvLyBUaGlzIGJsb2NrIGNhbiBiZSBkZWxldGVkLCBp
ZiBldmVyeSBlbnZpcm9ubWVudCBpcyBvbiBXTTkuMCEKCQkJCXRyeSB7CgkJCQkJb3V0cHV0ID0g
U2VydmljZS5kb0ludm9rZSgicHViLmpzb24iLCAiZG9jdW1lbnRUb0pTT04iLCBpbnB1dCk7CgkJ
CQkJSURhdGFDdXJzb3Igb3V0cHV0Q3Vyc29yID0gb3V0cHV0LmdldEN1cnNvcigpOwoJCQkJCWpz
b25TdHJpbmcgPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKG91dHB1dEN1cnNvciwgImpzb24iKTsKCQkJ
CQlvdXRwdXRDdXJzb3IuZGVzdHJveSgpOwoJCQkJfSBjYXRjaCAoRXhjZXB0aW9uIGlubmVyRXgp
IHsKCQkJCX0KCQkJfQoJCX0KCQkKCQlyZXR1cm4ganNvblN0cmluZzsKCX0KCQoJcHJpdmF0ZSBz
dGF0aWMgSGFzaE1hcDxTdHJpbmcsIFN0cmluZz4gY3JlYXRlR2VuZXJpY1ZhbHVlTWFwKEV4Y2Vw
dGlvbkhhbmRsaW5nSW5mbyBoYW5kbGluZywgYm9vbGVhbiBicmVha1JldHJ5TG9vcCkgewoJCUhh
c2hNYXA8U3RyaW5nLCBTdHJpbmc+IGdlbmVyaWNWYWx1ZU1hcCA9IG5ldyBIYXNoTWFwPFN0cmlu
ZywgU3RyaW5nPigpOwoKCQkvLyBldmFsdWF0ZSBlcnJvclRvQmVUaHJvd246CgkJU3RyaW5nIGVy
cm9yVG9CZVRocm93biA9IGhhbmRsaW5nLmdldEVycm9yVG9CZVRocm93bigpOwoJCQoJCWludCBy
ZXRyeUNvdW50ID0gZ2V0UmV0cnlDb3VudCgpOwoJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FU
VFJJQlVURV9SRVRSWV9DT1VOVCwgU3RyaW5nLnZhbHVlT2YocmV0cnlDb3VudCkpOwoKCQlTdHJp
bmcgbWF4UmV0cnlBdHRlbXB0c1N0cmluZyA9IGhhbmRsaW5nLmdldE1heFJldHJ5QXR0ZW1wdHMo
KTsKCQlJbnRlZ2VyIG1heFJldHJ5QXR0ZW1wdHMgPSBudWxsOwoJCXRyeSB7CgkJCW1heFJldHJ5
QXR0ZW1wdHMgPSBJbnRlZ2VyLnZhbHVlT2YobWF4UmV0cnlBdHRlbXB0c1N0cmluZyk7CgkJfSBj
YXRjaCAoTnVtYmVyRm9ybWF0RXhjZXB0aW9uIG5mZSkgewoJCX0JCQkJCQkKCQkKCQlpbnQgbWF4
UmV0cnlBdHRlbXB0c0RlZmF1bHQgPSAwOwoJCVN0cmluZyBtYXhSZXRyeUF0dGVtcHRzRGVmYXVs
dFN0cmluZyA9IGdldFZhbHVlQ29uZigKCQkJCU1BWF9SRVRSWV9BVFRFTVBUU19ERUZBVUxULCBQ
QUNLQUdFX0xDTF9FUlJPUiwgInRydWUiLAoJCQkJIiIsICIiLCAiIiwgIiIpOwkJCgkJdHJ5IHsK
CQkJbWF4UmV0cnlBdHRlbXB0c0RlZmF1bHQgPSBJbnRlZ2VyLnZhbHVlT2YobWF4UmV0cnlBdHRl
bXB0c0RlZmF1bHRTdHJpbmcpOwoJCX0gY2F0Y2ggKE51bWJlckZvcm1hdEV4Y2VwdGlvbiBuZmUp
IHt9CgoJCWludCBtYXhSZXRyeUF0dGVtcHRzQmVmb3JlQWJvcnQgPSAwOwoJCVN0cmluZyBtYXhS
ZXRyeUF0dGVtcHRzQmVmb3JlQ2FuY2VsUmV0cnlTdHJpbmcgPSBnZXRWYWx1ZUNvbmYoCgkJCQlN
QVhfUkVUUllfQVRURU1QVFNfQkVGT1JFX0NBTkNFTF9SRVRSWSwgUEFDS0FHRV9MQ0xfRVJST1Is
ICJ0cnVlIiwKCQkJCSIiLCAiIiwgIiIsICIiKTsJCQoJCXRyeSB7CgkJCW1heFJldHJ5QXR0ZW1w
dHNCZWZvcmVBYm9ydCA9IEludGVnZXIudmFsdWVPZihtYXhSZXRyeUF0dGVtcHRzQmVmb3JlQ2Fu
Y2VsUmV0cnlTdHJpbmcpOwoJCX0gY2F0Y2ggKE51bWJlckZvcm1hdEV4Y2VwdGlvbiBuZmUpIHt9
CgoJCS8vIERldGVybWluZSBlcnJvclRvQmVUaHJvd24gYW5kIG1heFJldHJ5QXR0ZW1wdHMgYWNj
b3JkaW5nIHRvIHJldHJ5IGNvbmZpZ3VyYXRpb246CgkJaWYgKGJyZWFrUmV0cnlMb29wKSB7CgkJ
CWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9SRVRVUk5fVkFMVUVfSUQsIENPTlRJ
TlVFLmVxdWFscyhlcnJvclRvQmVUaHJvd24pP0NPTlRJTlVFOkFCT1JUKTsKCQkJZ2VuZXJpY1Zh
bHVlTWFwLnB1dChFSERfQVRUUklCVVRFX01BWF9SRVRSWV9BVFRFTVBUUywgU3RyaW5nLnZhbHVl
T2YocmV0cnlDb3VudCkpOwoJCX0gZWxzZSBpZiAobWF4UmV0cnlBdHRlbXB0cyAhPSBudWxsICYm
IG1heFJldHJ5QXR0ZW1wdHMgPT0gLTEgJiYgcmV0cnlDb3VudCA8IG1heFJldHJ5QXR0ZW1wdHNC
ZWZvcmVBYm9ydCkgewoJCQlnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVfUkVUVVJO
X1ZBTFVFX0lELCBSRVRSWSk7CgkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9N
QVhfUkVUUllfQVRURU1QVFMsIG1heFJldHJ5QXR0ZW1wdHNCZWZvcmVDYW5jZWxSZXRyeVN0cmlu
Zyk7CgkJfSBlbHNlIHsKCQkJaWYgKG1heFJldHJ5QXR0ZW1wdHMgIT0gbnVsbCAmJiByZXRyeUNv
dW50IDwgbWF4UmV0cnlBdHRlbXB0cykgewoJCQkJZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRU
UklCVVRFX1JFVFVSTl9WQUxVRV9JRCwgUkVUUlkpOwoJCQkJZ2VuZXJpY1ZhbHVlTWFwLnB1dChF
SERfQVRUUklCVVRFX01BWF9SRVRSWV9BVFRFTVBUUywgbWF4UmV0cnlBdHRlbXB0c1N0cmluZyk7
CgkJCX0gZWxzZSB7CgkJCQkgaWYgKFJFVFJZLmVxdWFscyhlcnJvclRvQmVUaHJvd24pICYmIG1h
eFJldHJ5QXR0ZW1wdHMgPT0gbnVsbCAmJiByZXRyeUNvdW50IDwgbWF4UmV0cnlBdHRlbXB0c0Rl
ZmF1bHQpIHsKCQkJCQkgZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX1JFVFVSTl9W
QUxVRV9JRCwgUkVUUlkpOwoJCQkJCSBnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVf
TUFYX1JFVFJZX0FUVEVNUFRTLCBtYXhSZXRyeUF0dGVtcHRzRGVmYXVsdFN0cmluZyk7CgkJCQkg
fSBlbHNlIHsKCQkJCQkgaWYgKENPTlRJTlVFLmVxdWFscyhlcnJvclRvQmVUaHJvd24pKSB7CgkJ
CQkJCSBnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVfUkVUVVJOX1ZBTFVFX0lELCBD
T05USU5VRSk7CgkJCQkJIH0gZWxzZSB7CgkJCQkJCSAvLyBGaW5hbCBiZWhhdmlvciBmb3IgYWJv
cnQgYW5kIHJldHJ5OiBhYm9ydAoJCQkJCQkgZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklC
VVRFX1JFVFVSTl9WQUxVRV9JRCwgQUJPUlQpOwoJCQkJCSB9CgkJCQkJIC8vIG1heFJldHJ5QXR0
ZW1wdHMgaXMgcmVhY2hlZCBvciB3YXMgbm90IGRlZmluZWQgKC0+IDApCgkJCQkJIFN0cmluZyBt
YXhSZXRyeUF0dGVtcHRzUmVzdWx0ID0gbWF4UmV0cnlBdHRlbXB0cyAhPSBudWxsID8gbWF4UmV0
cnlBdHRlbXB0c1N0cmluZyA6ICIwIjsKCQkJCQkgZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRU
UklCVVRFX01BWF9SRVRSWV9BVFRFTVBUUywgbWF4UmV0cnlBdHRlbXB0c1Jlc3VsdCk7CgkJCQkg
fQoJCQl9CgkJfQoJCXJldHVybiBnZW5lcmljVmFsdWVNYXA7Cgl9CgkKCS8qKgoJICogRmlsdGVy
cyB0aGUgZXJyb3IgaGllcmFyY2h5IGZvciB0aGUgZGVlcGVzdCBzZXJ2aWNlIC0tPiBzaG93cwoJ
ICogaW4gd2hpY2ggc2VydmljZSBvZiBvdXIgY29kZSB0aGUgZXJyb3Igb2NjdXJlZAoJICogCgkg
KiBAcGFyYW0gaGllcmFjaGljYWxFcnJvckluZm8KCSAqIEByZXR1cm4gdGhlIGxldmVsIG9mIHRo
ZSBkZWVwZXN0IHNlcnZpY2UgbmFtZQoJICovCglwcml2YXRlIHN0YXRpYyBpbnQgZ2V0RGVlcGVz
dEFwcGxpY2F0aW9uU2VydmljZUxldmVsKEFycmF5TGlzdDxFcnJvckluZm8+IGhpZXJhY2hpY2Fs
RXJyb3JJbmZvKSB7CgkJU3RyaW5nIHNlcnZpY2UgPSBudWxsOwoJCWZvciAoaW50IGxldmVsID0g
aGllcmFjaGljYWxFcnJvckluZm8uc2l6ZSgpIC0gMTsgbGV2ZWwgPiAwOyBsZXZlbC0tKSB7CgkJ
CXNlcnZpY2UgPSBoaWVyYWNoaWNhbEVycm9ySW5mby5nZXQobGV2ZWwpLmdldFNlcnZpY2UoKTsK
CQkJLy8gY3JlYXRlIG9mIExpc3Qgb2YgRmxvd25hbWVzIHRvIGlnbm9yZQoJCQlMaXN0PFN0cmlu
Zz4gaWdub3JlRmxvd3MgPSBBcnJheXMuYXNMaXN0KCJ3eC5yZXNpbGllbmNlLnB1Yi5yZXNpbGll
bmNlOnRocm93RXJyb3IiLAoJCQkJCSAJCQkJCQkJCSJ3eC5yZXNpbGllbmNlLnB1Yi5yZXNpbGll
bmNlOnRocm93RXJyb3JJZk5lY2Vzc2FyeSIsIAoJCQkJCQkJCQkJCQkJICJ3eC5yZXNpbGllbmNl
LnB1Yi5yZXNpbGllbmNlOnBvc3RQcm9jZXNzRm9yVG9wTGV2ZWxTZXJ2aWNlIik7CgkJCQoJCQkK
CQkJCgkJCQoJCQkKCQkJaWYgKHNlcnZpY2UgIT0gbnVsbCAmJiAKCQkJCSFzZXJ2aWNlLnN0YXJ0
c1dpdGgoInB1Yi4iKSAmJgoJCQkJIXNlcnZpY2Uuc3RhcnRzV2l0aCgid20uIikgJiYgCgkJCQkh
aWdub3JlRmxvd3MuY29udGFpbnMoc2VydmljZSkKCQkJKSB7CgkJCQlyZXR1cm4gbGV2ZWw7CgkJ
CX0KCQl9CgoJCXJldHVybiAwOwoJfQoKCQoJLyoqCgkgKiBMb2dzIG1lc3NhZ2UgZnJvbSBhIGNh
dGFsb2cuCgkgKiAKCSAqIEBwYXJhbSBhRmFjaWxpdHlLZXkKCSAqICAgICAgICAgICAgZGVmaW5l
cyB0aGUgZmFjaWxpdHkgaW4gdGhlIGNhdGFsb2cKCSAqIEBwYXJhbSBhTWVzc2FnZUtleQoJICog
ICAgICAgICAgICBjb3JyZXNwb25kcyB3aXRoIHRoZSBtZXNzYWdlIGtleSBpbiB0aGUgY2F0YWxv
ZwoJICogQHBhcmFtIGFNZXNzYWdlUGFyYW1zCgkgKiAgICAgICAgICAgIGlmIG1lc3NhZ2UgaW4g
dGhlIGNhdGFsb2cgaGFzIHBhcmFtZXRlcnMKCSAqIEB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbgoJ
ICogICAgICAgICAgICAgdGhyb3duIGlmIHRoZSBsb2dnaW5nIGZhaWxlZAoJICovCgkvKnByaXZh
dGUgc3RhdGljIHZvaWQgbG9nTWVzc2FnZUZyb21DYXRhbG9nKFN0cmluZyBhRmFjaWxpdHlLZXks
IFN0cmluZyBhTWVzc2FnZUtleSwgU3RyaW5nW10gYU1lc3NhZ2VQYXJhbXMpIHsKCQkvLyBpbnB1
dAoJCUlEYXRhIHRJbnB1dCA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsKCQlJRGF0YUN1cnNvciBp
bnB1dEN1cnNvciA9IHRJbnB1dC5nZXRDdXJzb3IoKTsKCQlJRGF0YVV0aWwucHV0KGlucHV0Q3Vy
c29yLCAiZmFjaWxpdHlLZXkiLCBhRmFjaWxpdHlLZXkpOwoJCUlEYXRhVXRpbC5wdXQoaW5wdXRD
dXJzb3IsICJtZXNzYWdlS2V5IiwgYU1lc3NhZ2VLZXkpOwoJCgkJLy8gVGhlcmUgYXJlIHNvbWUg
bWVzc2FnZSBwYXJhbXMgcHJvdmlkZWQKCQlpZiAoYU1lc3NhZ2VQYXJhbXMubGVuZ3RoID4gMCkg
ewoJCQlJRGF0YVV0aWwucHV0KGlucHV0Q3Vyc29yLCAibWVzc2FnZVBhcmFtcyIsIGFNZXNzYWdl
UGFyYW1zKTsKCQl9CgkJaW5wdXRDdXJzb3IuZGVzdHJveSgpOwoJCgkJdHJ5IHsKCQkJU2Vydmlj
ZS5kb0ludm9rZSgid3gucmVzaWxpZW5jZS5pbXBsOiIsICJsb2dNZXNzYWdlRnJvbUNhdGFsb2ci
LCB0SW5wdXQpOwoJCX0gCgkJY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7CgkJfQoJfSovCgoJCglwcml2
YXRlIHN0YXRpYyB2b2lkIHZhbGlkYXRlWE1MKCkgdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewoJ
CUxvZy5sb2dJbmZvKCJWYWxpZGF0aW5nIHRoZSBzdW1tYXJpemVkIGVycm9yIGhhbmRsaW5nIik7
CgkJRmlsZSB4bWxGaWxlID0gbmV3IEZpbGUoU2VydmVyQVBJLmdldFBhY2thZ2VDb25maWdEaXIo
V1hfUkVTSUxJRU5DRSkgKyAiLyIgKyBTVU1NQVJJWkVEX0VSUk9SX0hBTkRMSU5HX0ZJTEUpOwoJ
CUZpbGUgc2NoZW1hRmlsZSA9IG5ldyBGaWxlKFNlcnZlckFQSS5nZXRQYWNrYWdlQ29uZmlnRGly
KFdYX1JFU0lMSUVOQ0UpICsgIi8iICsgRVhDRVBUSU9OX0hBTkRMSU5HX1hTRF9GSUxFKTsKCQkK
CQl0cnkgewoJCQkvLyAxLiBMb29rdXAgYSBmYWN0b3J5IGZvciB0aGUgVzNDIFhNTCBTY2hlbWEg
bGFuZ3VhZ2UKCQkJU2NoZW1hRmFjdG9yeSBmYWN0b3J5ID0gU2NoZW1hRmFjdG9yeS5uZXdJbnN0
YW5jZSgiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiKTsKCQkJLy8gMi4gQ29tcGls
ZSB0aGUgc2NoZW1hLgoJCQkvLyBIZXJlIHRoZSBzY2hlbWEgaXMgbG9hZGVkIGZyb20gYSBqYXZh
LmlvLkZpbGUsIGJ1dCB5b3UgY291bGQgdXNlCgkJCS8vIGEgamF2YS5uZXQuVVJMIG9yIGEgamF2
YXgueG1sLnRyYW5zZm9ybS5Tb3VyY2UgaW5zdGVhZC4KCQkJU2NoZW1hIHNjaGVtYSA9IGZhY3Rv
cnkubmV3U2NoZW1hKHNjaGVtYUZpbGUpOwkKCQkJLy8gMy4gR2V0IGEgdmFsaWRhdG9yIGZyb20g
dGhlIHNjaGVtYS4KCQkJVmFsaWRhdG9yIHZhbGlkYXRvciA9IHNjaGVtYS5uZXdWYWxpZGF0b3Io
KTsJCgkJCS8vIDQuIFBhcnNlIHRoZSBkb2N1bWVudCB5b3Ugd2FudCB0byBjaGVjay4KCQkJU291
cmNlIHNvdXJjZSA9IG5ldyBTdHJlYW1Tb3VyY2UoeG1sRmlsZSk7CQoJCQkvLyA1LiBDaGVjayB0
aGUgZG9jdW1lbnQKCQkJdmFsaWRhdG9yLnZhbGlkYXRlKHNvdXJjZSk7CgkJCUxvZy5sb2dJbmZv
KHhtbEZpbGUuZ2V0TmFtZSgpICsgIiBpcyB2YWxpZCIpOwoJCX0gCgkJY2F0Y2ggKFNBWEV4Y2Vw
dGlvbnxJT0V4Y2VwdGlvbiBleCkgewoJCQlTdHJpbmcgbWVzc2FnZSA9IHhtbEZpbGUuZ2V0TmFt
ZSgpICsgIiBpcyBub3QgdmFsaWQgYmVjYXVzZSBcbiIgKyBleC5nZXRNZXNzYWdlKCk7CgkJCWZp
bmFsIFNlcnZpY2VFeGNlcHRpb24gc2UgPSBuZXcgU2VydmljZUV4Y2VwdGlvbihtZXNzYWdlKTsK
CQkJc2UuaW5pdENhdXNlKGV4KTsKCQkJdGhyb3cgc2U7CgkJfQkKCX0KCglwcml2YXRlIHN0YXRp
YyBTdHJpbmcgZ2V0VmFsdWVDb25mKFN0cmluZyBrZXksIFN0cmluZyB3eENvbmZpZ1BrZ05hbWUs
CgkJCVN0cmluZyBub1NlcnZpY2VFeGNlcHRpb24sIFN0cmluZyBzdWJzdGl0dXRlVmFyaWFibGVz
LAoJCQlTdHJpbmcgaWdub3JlR2xvYmFsVmFsdWVzLCBTdHJpbmcgc2NhbkFsbENvbmZpZ3VyYXRp
b25zLAoJCQlTdHJpbmcgbm9WYXJpYWJsZUludGVycG9sYXRpb24pIHsKCQlTdHJpbmcgcHJvcGVy
dHlWYWx1ZSA9ICIgIjsKCQkvLyBpbnB1dAoJCUlEYXRhIGNvbmZpZ1BhcmFtID0gSURhdGFGYWN0
b3J5LmNyZWF0ZSgpOwoJCUlEYXRhQ3Vyc29yIGNvbmZpZ1BhcmFtQ3Vyc29yID0gY29uZmlnUGFy
YW0uZ2V0Q3Vyc29yKCk7CgkJSURhdGFVdGlsLnB1dChjb25maWdQYXJhbUN1cnNvciwgImtleSIs
IGtleSk7CgkJSURhdGFVdGlsLnB1dChjb25maWdQYXJhbUN1cnNvciwgInd4Q29uZmlnUGtnTmFt
ZSIsIHd4Q29uZmlnUGtnTmFtZSk7CgkJSURhdGFVdGlsLnB1dChjb25maWdQYXJhbUN1cnNvciwg
Im5vU2VydmljZUV4Y2VwdGlvbiIsCgkJCQlub1NlcnZpY2VFeGNlcHRpb24pOwoJCWNvbmZpZ1Bh
cmFtQ3Vyc29yLmRlc3Ryb3koKTsKCQoJCS8vIG91dHB1dAoJCUlEYXRhIGNvbmZpZ091dHB1dCA9
IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsKCQl0cnkgewoJCQljb25maWdPdXRwdXQgPSBTZXJ2aWNl
LmRvSW52b2tlKCJ3eC5jb25maWcucHViIiwgImdldFZhbHVlIiwKCQkJCQljb25maWdQYXJhbSk7
CgkJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsKCQkJcmV0dXJuIHByb3BlcnR5VmFsdWU7CgkJfQoJ
CUlEYXRhQ3Vyc29yIGNvbmZpZ091dHB1dEN1cnNvciA9IGNvbmZpZ091dHB1dC5nZXRDdXJzb3Io
KTsKCQlwcm9wZXJ0eVZhbHVlID0gSURhdGFVdGlsCgkJCQkuZ2V0U3RyaW5nKGNvbmZpZ091dHB1
dEN1cnNvciwgInByb3BlcnR5VmFsdWUiKTsKCQljb25maWdPdXRwdXRDdXJzb3IuZGVzdHJveSgp
OwoJCUxvZy5sb2dEZWJ1ZygiZ2V0VmFsdWVDb25mIGZvciAiICsga2V5ICsgIiByZXR1cm5zOiAi
ICsgcHJvcGVydHlWYWx1ZSk7CgkJcmV0dXJuIHByb3BlcnR5VmFsdWU7Cgl9CgkKCXByaXZhdGUg
c3RhdGljIGludCBnZXRSZXRyeUNvdW50KCkgewoJCUlEYXRhIGlucHV0ID0gbnVsbDsKCQkvLyBv
dXRwdXQKCQlJRGF0YSBvdXRwdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CgkJdHJ5IHsKCQkJ
b3V0cHV0ID0gU2VydmljZS5kb0ludm9rZSgicHViLmZsb3ciLCAiZ2V0UmV0cnlDb3VudCIsIGlu
cHV0KTsKCQkJSURhdGFDdXJzb3Igb3V0cHV0Q3Vyc29yID0gb3V0cHV0LmdldEN1cnNvcigpOwoJ
CQlyZXR1cm4gSW50ZWdlci5wYXJzZUludChJRGF0YVV0aWwuZ2V0U3RyaW5nKG91dHB1dEN1cnNv
ciwgInJldHJ5Q291bnQiKSk7CgkJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsKCQkJcmV0dXJuIDA7
CgkJfQoJfQoJCgkvKioKCSAqIEV4dHJhY3RzIGFuIGVycm9yIGhpZXJhcmNoeSBmb3IgYSBnaXZl
biBlcnJvciBoaWVyYXJjaHkgKG5vcm1hbGx5IG9ubHkKCSAqIGZpbGxlZCBieSBvbmUgKHJvb3Qp
IGVycm9yKS4gVXNlcyB0aGUgY2FsbFN0YWNrIGFuZCB0aGUgZGVlcGVzdCBlcnJvckluZm8gdG8g
YnVpbGQgaGllYXJjaHkuCgkgKiAKCSAqIEBwYXJhbSBwRXJyb3JIaWVyYXJjaHkKCSAqICAgICAg
ICAgICAgLSBhcnJheSBsaXN0IG9mIElEYXRhQ3Vyc29ycyBvbiBwdWIuZXZlbnQ6ZXhjZXB0aW9u
SW5mbwoJICogQHJldHVybiBmdWxsIGFycmF5IGxpc3QgYXJyYXkgbGlzdCBvZiBFcnJvckluZm8g
b24KCSAqICAgICAgICAgcHViLmV2ZW50OmV4Y2VwdGlvbkluZm8sIGNvbnRhaW5pbmcgYWxsIGVy
cm9ycyBmcm9tIHJvb3QoMCkgdG8KCSAqICAgICAgICAgb3JpZ2luIChzaXplIG9mIGFycmF5IGxp
c3QpCgkgKi8KCXByaXZhdGUgc3RhdGljIEFycmF5TGlzdDxFcnJvckluZm8+IGV4dHJhY3RFcnJv
ckhpZXJhcmNoeShBcnJheUxpc3Q8SURhdGFDdXJzb3I+IHBFcnJvckhpZXJhcmNoeSkgewkKCQlp
ZiAocEVycm9ySGllcmFyY2h5ID09IG51bGwpIHsKCQkJcmV0dXJuIG51bGw7CgkJfQoJCQoJCUlE
YXRhQ3Vyc29yIGRlZXBlc3ROZXN0ZWRFcnJvciA9IGdldERlZXBlc3ROZXN0ZWRFcnJvcihwRXJy
b3JIaWVyYXJjaHkpOwoJCQoJCS8vIGdldCBjYWxsU3RhY2sgb2YgZXJyb3I6CgkJSURhdGFbXSBj
YWxsU3RhY2sgPSBJRGF0YVV0aWwuZ2V0SURhdGFBcnJheShwRXJyb3JIaWVyYXJjaHkuZ2V0KDAp
LCAiY2FsbFN0YWNrIik7CgkJQXJyYXlMaXN0PEVycm9ySW5mbz4gZXJyb3JJbmZvTGlzdCA9IG51
bGw7CgkJCgkJaWYgKGNhbGxTdGFjayAhPSBudWxsKSB7CgkJCWVycm9ySW5mb0xpc3QgPSBuZXcg
QXJyYXlMaXN0PEVycm9ySW5mbz4oY2FsbFN0YWNrLmxlbmd0aCk7CgkJCQoJCQkvLyB1c2UgdGhl
IGVycm9yIGFuZCBlcnJvclR5cGUgb2YgdGhlIGRlZXBlc3QgZXJyb3JJbmZvIHRvIGRldGVybWlu
ZSB0aGUgZXJyb3IgYW5kIGVycm9yVHlwZSBvZiBlYWNoIGxldmVsOgoJCQlTdHJpbmcgbmVzdGVk
RXJyb3JUeXBlID0gSURhdGFVdGlsLmdldFN0cmluZyhkZWVwZXN0TmVzdGVkRXJyb3IsIEVSUk9S
X0lORk9fRVJST1JfVFlQRSk7CgkJCVN0cmluZyBuZXN0ZWRFcnJvciA9IElEYXRhVXRpbC5nZXRT
dHJpbmcoZGVlcGVzdE5lc3RlZEVycm9yLCBFUlJPUl9JTkZPX0VSUk9SKTsKCgkJCS8vIHRoZSBj
YWxsc3RhY2sgaXMgb3JkZXJlZCBpbnZlcnNlIQoJCQlmb3IgKGludCBpID0gY2FsbFN0YWNrLmxl
bmd0aCAtIDEgOyBpID49IDA7IGktLSkgewoJCQkJLy8gdXNlIHRoZSBzZXJ2aWNlIG5hbWVzIG9m
IHRoZSBjYWxsc3RhY2s6CgkJCQlJRGF0YUN1cnNvciBjYWxsU3RhY2tDdXJzb3IgPSBjYWxsU3Rh
Y2tbaV0uZ2V0Q3Vyc29yKCk7CgkJCQlTdHJpbmcgc2VydmljZSA9IElEYXRhVXRpbC5nZXRTdHJp
bmcoY2FsbFN0YWNrQ3Vyc29yLCBFUlJPUl9JTkZPX0NBTExfU1RBQ0tfU0VSVklDRSk7CgkJCQlT
dHJpbmcgZmxvd1N0ZXAgPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKGNhbGxTdGFja0N1cnNvciwgRVJS
T1JfSU5GT19DQUxMX1NUQUNLX0ZMT1dfU1RFUCk7CgkJCQlpZiAoZmxvd1N0ZXAgPT0gbnVsbCB8
fCBmbG93U3RlcC5lcXVhbHMoIiIpKSB7CgkJCQkJZmxvd1N0ZXAgPSAibi5hLiI7CgkJCQl9CgkJ
CQkKCQkJCWVycm9ySW5mb0xpc3QuYWRkKG5ldyBFcnJvckluZm8obmVzdGVkRXJyb3IsIG5lc3Rl
ZEVycm9yVHlwZSwgc2VydmljZSwgZmxvd1N0ZXApKTsKCQkJfQoJCX0KCQlyZXR1cm4gZXJyb3JJ
bmZvTGlzdDsKCX0KCQoJLyoqCgkgKiBHZXRzIHRoZSBkZWVwZXN0IGVycm9yIGluIHRoZSBlcnJv
ciBoaWVyYXJjaHkKCSAqIAoJICogQHBhcmFtIHBFcnJvckhpZXJhcmNoeQoJICogICAgICAgICAg
ICAtIGFycmF5IGxpc3Qgb2YgSURhdGFDdXJzb3JzIG9uIHB1Yi5ldmVudDpleGNlcHRpb25JbmZv
CgkgKiBAcmV0dXJuIGN1cnNvciBvZiB0aGUgZGVlcGVzdCBlcnJvcgoJICovCglwcml2YXRlIHN0
YXRpYyBJRGF0YUN1cnNvciBnZXREZWVwZXN0TmVzdGVkRXJyb3IoQXJyYXlMaXN0PElEYXRhQ3Vy
c29yPiBwRXJyb3JIaWVyYXJjaHkpIHsJCQoJCQoJCUlEYXRhQ3Vyc29yIG5lc3RlZEVycm9yID0g
cEVycm9ySGllcmFyY2h5LmdldCgwKTsKCQlJRGF0YUN1cnNvciBjdXJyZW50RXJyb3IgPSBudWxs
OwoJCUlEYXRhIG5lc3RlZEVycm9ySURhdGEgPSBudWxsOwoJCWRvIHsKCQkJY3VycmVudEVycm9y
ID0gbmVzdGVkRXJyb3I7CgkJCW5lc3RlZEVycm9ySURhdGEgPSBJRGF0YVV0aWwuZ2V0SURhdGEo
Y3VycmVudEVycm9yLCBFUlJPUl9JTkZPX05FU1RFRF9FUlJPUl9JRCk7CgkJCWlmIChuZXN0ZWRF
cnJvcklEYXRhICE9IG51bGwpIHsKCQkJCW5lc3RlZEVycm9yID0gbmVzdGVkRXJyb3JJRGF0YS5n
ZXRDdXJzb3IoKTsKCQkJfSBlbHNlIHsKCQkJCW5lc3RlZEVycm9yID0gbnVsbDsKCQkJfQoJCX0g
d2hpbGUgKG5lc3RlZEVycm9yICE9IG51bGwpOwoKCQlyZXR1cm4gY3VycmVudEVycm9yOwoKCX0J
CgoJLypwdWJsaWMgc3RhdGljIGNsYXNzIExvZyB7CgkJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTG9n
IElOU1RBTkNFID0gbmV3IExvZygpOwoJCXByaXZhdGUgc3RhdGljIGZpbmFsIGJvb2xlYW4gbG9n
Z2luZyA9IGZhbHNlOwoKCQlwdWJsaWMgc3RhdGljIHZvaWQgaW5pdCgpIHsKCQkJaWYgKGxvZ2dp
bmcpIHsKCQkJCUlOU1RBTkNFLmluaXRXcml0ZXIoKTsKCQkJfQoJCX0KCQlwdWJsaWMgc3RhdGlj
IHZvaWQgd3JpdGUoU3RyaW5nIHBNZXNzYWdlKSB7CgkJCWlmIChsb2dnaW5nKSB7CgkJCQlJTlNU
QU5DRS5sb2cocE1lc3NhZ2UpOwoJCQl9CgkJfQoJCXB1YmxpYyBzdGF0aWMgdm9pZCBjbG9zZSgp
IHsKCQkJaWYgKGxvZ2dpbmcpIHsKCQkJCUlOU1RBTkNFLmNsb3NlV3JpdGVyKCk7CgkJCX0KCQl9
CgkJcHVibGljIHN0YXRpYyBib29sZWFuIGlzTG9nZ2luZygpIHsKCQkJcmV0dXJuIGxvZ2dpbmc7
CgkJfQoKCQlwcml2YXRlIGJvb2xlYW4gaW5pdGlhbGl6ZWQ7CgkJcHJpdmF0ZSB2b2lkIGluaXRX
cml0ZXIoKSB7CgkJCWluaXRpYWxpemVkID0gdHJ1ZTsKCQl9CgkJcHJpdmF0ZSB2b2lkIGNsb3Nl
V3JpdGVyKCkgewoJCQlpbml0aWFsaXplZCA9IGZhbHNlOwoJCX0KCQlwcml2YXRlIHZvaWQgbG9n
KFN0cmluZyBwTWVzc2FnZSkgewoJCQlpZiAoaW5pdGlhbGl6ZWQpIHsKCQkJCS8vIFRPRE86CgkJ
CQkvL0xvZy5sb2dUcmFjZU1lc3NhZ2UoIkVIRiIsIHBNZXNzYWdlKTsKCQkJfQoJCX0KCX0qLwoJ
cHVibGljIHN0YXRpYyBjbGFzcyBFcnJvckhhbmRsaW5nRXhjZXB0aW9uIGV4dGVuZHMgUnVudGlt
ZUV4Y2VwdGlvbiB7CgkJcHJpdmF0ZSBzdGF0aWMgZmluYWwgbG9uZyBzZXJpYWxWZXJzaW9uVUlE
ID0gLTM5NTAxMDA3NDE2MzY0Nzk2ODFMOwoKCQlwdWJsaWMgRXJyb3JIYW5kbGluZ0V4Y2VwdGlv
bihTdHJpbmcgcE1zZywgVGhyb3dhYmxlIHBDYXVzZSkgewoJCQlzdXBlcihwTXNnLCBwQ2F1c2Up
OwoJCX0KCgkJcHVibGljIEVycm9ySGFuZGxpbmdFeGNlcHRpb24oU3RyaW5nIHBNc2cpIHsKCQkJ
c3VwZXIocE1zZyk7CgkJfQoKCQlwdWJsaWMgRXJyb3JIYW5kbGluZ0V4Y2VwdGlvbihUaHJvd2Fi
bGUgcENhdXNlKSB7CgkJCXN1cGVyKHBDYXVzZSk7CgkJfQoJfQoKCXB1YmxpYyBzdGF0aWMgY2xh
c3MgRXhjZXB0aW9uSGFuZGxpbmdJbmZvIHsKCQkvLyBPbGQgcmVwcmVzZW50YXRpb24gb2YgRXhj
ZXB0aW9uSGFuZGxpbmdJbmZvIChkZXByZWNhdGVkKQoJCXByaXZhdGUgZmluYWwgTGlzdDxTdHJp
bmc+IHNlcnZpY2VOYW1lcyA9IG5ldyBBcnJheUxpc3Q8PigpOwoJCXByaXZhdGUgZmluYWwgU3Ry
aW5nICBlcnJvclRvQmVUaHJvd24sIHR5cGUsIGVycm9yQ29kZSwgZXhjZXB0aW9uVHlwZSwgbWF4
UmV0cnlBdHRlbXB0czsKCQlwcml2YXRlIGZpbmFsIGJvb2xlYW4gcHJpbnRCdXNpbmVzc09iamVj
dDsKCQlwdWJsaWMgRXhjZXB0aW9uSGFuZGxpbmdJbmZvKFN0cmluZyBwRXJyb3JUb0JlVGhyb3du
LCBTdHJpbmcgcFR5cGUsIFN0cmluZyBwRXJyb3JDb2RlLAoJCQkJIAkJCQkJIFN0cmluZyBwRXhj
ZXB0aW9uVHlwZSwgU3RyaW5nIHBNYXhSZXRyeUF0dGVtcHRzLAoJCQkJIAkJCQkJIGJvb2xlYW4g
cFByaW50QnVzaW5lc3NPYmplY3QpIHsKCQkJZXJyb3JUb0JlVGhyb3duID0gcEVycm9yVG9CZVRo
cm93bjsKCQkJdHlwZSA9IHBUeXBlOwoJCQllcnJvckNvZGUgPSBwRXJyb3JDb2RlOwoJCQlleGNl
cHRpb25UeXBlID0gcEV4Y2VwdGlvblR5cGU7CgkJCW1heFJldHJ5QXR0ZW1wdHMgPSBwTWF4UmV0
cnlBdHRlbXB0czsKCQkJcHJpbnRCdXNpbmVzc09iamVjdCA9IHBQcmludEJ1c2luZXNzT2JqZWN0
OwoJCX0KCgkJcHVibGljIExpc3Q8U3RyaW5nPiBnZXRIYW5kbGluZ1NlcnZpY2VzKCkgewoJCQly
ZXR1cm4gc2VydmljZU5hbWVzOwoJCX0KCgkJcHVibGljIHZvaWQgYWRkU2VydmljZU5hbWUoU3Ry
aW5nIHBTZXJ2aWNlTmFtZSkgewoJCQlzZXJ2aWNlTmFtZXMuYWRkKHBTZXJ2aWNlTmFtZSk7CgkJ
fQoKCQlwdWJsaWMgU3RyaW5nIGdldEVycm9yVG9CZVRocm93bigpIHsKCQkJcmV0dXJuIGVycm9y
VG9CZVRocm93bjsKCQl9CgoJCXB1YmxpYyBTdHJpbmcgZ2V0VHlwZSgpIHsKCQkJcmV0dXJuIHR5
cGU7CgkJfQoKCQlwdWJsaWMgU3RyaW5nIGdldEVycm9yQ29kZSgpIHsKCQkJcmV0dXJuIGVycm9y
Q29kZTsKCQl9CgoJCXB1YmxpYyBTdHJpbmcgZ2V0RXhjZXB0aW9uVHlwZSgpIHsKCQkJcmV0dXJu
IGV4Y2VwdGlvblR5cGU7CgkJfQoKCQlwdWJsaWMgU3RyaW5nIGdldE1heFJldHJ5QXR0ZW1wdHMo
KSB7CgkJCXJldHVybiBtYXhSZXRyeUF0dGVtcHRzOwoJCX0KCgkJcHVibGljIGJvb2xlYW4gaXNQ
cmludEJ1c2luZXNzT2JqZWN0KCkgewoJCQlyZXR1cm4gcHJpbnRCdXNpbmVzc09iamVjdDsKCQl9
CgoJCUBPdmVycmlkZQoJCXB1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKSB7CgkJCWZpbmFsIFN0cmlu
Z0J1aWxkZXIgc2IgPSBuZXcgU3RyaW5nQnVpbGRlcigpOwoJCQlzYi5hcHBlbmQoc3VwZXIudG9T
dHJpbmcoKSk7CgkJCXNiLmFwcGVuZCgiOiBlcnJvclRvQmVUaHJvd249ICIpOwoJCQlzYi5hcHBl
bmQoZXJyb3JUb0JlVGhyb3duKTsKCQkJc2IuYXBwZW5kKCIsIHR5cGU9Iik7CgkJCXNiLmFwcGVu
ZCh0eXBlKTsKCQkJc2IuYXBwZW5kKCJlcnJvckNvZGU9Iik7CgkJCXNiLmFwcGVuZChlcnJvckNv
ZGUpOwoJCQlzYi5hcHBlbmQoIiwgcHJvamVjdD0iKTsKCQkJc2IuYXBwZW5kKCIsIGV4Y2VwdGlv
blR5cGU9Iik7CgkJCXNiLmFwcGVuZChleGNlcHRpb25UeXBlKTsKCQkJc2IuYXBwZW5kKCIsIG1h
eFJldHJ5QXR0ZW1wdHM9Iik7CgkJCXNiLmFwcGVuZChtYXhSZXRyeUF0dGVtcHRzKTsKCQkJc2Iu
YXBwZW5kKCIsIHByaW50QnVzaW5lc3NPYmplY3Q9Iik7CgkJCXNiLmFwcGVuZChwcmludEJ1c2lu
ZXNzT2JqZWN0KTsKCQkJc2IuYXBwZW5kKCIsIHNlcnZpY2VOYW1lcz0iKTsKCQkJLy8gVE9ETzoK
CQkJLy9zYi5hcHBlbmQoU3RyaW5ncy5hc1N0cmluZyhzZXJ2aWNlTmFtZXMpKTsKCQkJcmV0dXJu
IHNiLnRvU3RyaW5nKCk7CgkJfQoJCQoJfQoJCgkvKioKCSAqIEV4dHJhY3QgaGFuZGxpbmdzIGZv
ciBhbiBlcnJvciBhdCBhIGxvY2F0aW9uIGZyb20gYSBnaXZlbiBleGNlcHRpb24KCSAqIGhhbmRs
aW5nIGRlZmluaXRpb24KCSAqIAoJICogQHBhcmFtIHBFcnJvckhhbmRsaW5nCgkgKiAgICAgICAg
ICAgIGRlZmluaXRpb24gYXMgRE9NIGRvY3VtZW50IHRvIHVzZSBmb3IgZXh0cmFjdGlvbgoJICog
QHBhcmFtIHBMb2NhdGlvblhQYXRoCgkgKiAgICAgICAgICAgIGVycm9yIGxvY2F0aW9uIGFzIFhQ
QVRICgkgKiBAcGFyYW0gcEV4Y2VwdGlvblR5cGUKCSAqICAgICAgICAgICAgZXJyb3IgdHlwZSBh
cyBTdHJpbmcKCSAqIEBwYXJhbSBjdXJyZW50Q2FsbGVyVHlwZQoJICogICAgICAgICAgICBjYWxs
ZXIgdHlwZSBhcyBTdHJpbmcJCgkgKiBAcGFyYW0gY3VycmVudEVycm9yTWVzc2FnZQoJICogICAg
ICAgICAgICBvcmlnaW5hbCBlcnJvciBhcyBTdHJpbmcgCgkgKiBAcmV0dXJuIGFsbCBmb3VuZCBo
YW5kbGluZ3MgZm9yIHRoZSBnaXZlbiBlcnJvciBhcyBhbiBhcnJheSBsaXN0LCBlbXB0eQoJICog
ICAgICAgICBsaXN0IGluIGNhc2Ugb2Ygbm8gZm91bmQgZXJyb3IKCSAqIEB0aHJvd3MgU2Vydmlj
ZUV4Y2VwdGlvbgoJICovCglAU3VwcHJlc3NXYXJuaW5ncygidW5jaGVja2VkIikKCXByaXZhdGUg
c3RhdGljIEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyBnZXRIYW5kbGluZ3NGb3JMb2NhdGlvbigKCQkJ
RG9jdW1lbnQgcEVycm9ySGFuZGxpbmcsIFN0cmluZyBwTG9jYXRpb25YUGF0aCwKCQkJU3RyaW5n
IHBFeGNlcHRpb25UeXBlLCBTdHJpbmcgY3VycmVudENhbGxlclR5cGUsIFN0cmluZyBjdXJyZW50
RXJyb3JNZXNzYWdlKQoJCQl0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CgkJTG9nLmxvZ0RlYnVn
KCJnZXRIYW5kbGluZ3NGb3JMb2NhdGlvbjogLS0+ICIgKyBwTG9jYXRpb25YUGF0aCArICIsICIg
KyBwRXhjZXB0aW9uVHlwZSArICIsICIgKyBjdXJyZW50Q2FsbGVyVHlwZSArICIsICIgKyBjdXJy
ZW50RXJyb3JNZXNzYWdlKTsKCgkJLy8gZ2V0IGV4Y2VwdGlvbiBsaXN0IGZvciBsb2NhdGlvbgoJ
CUxpc3Q8RWxlbWVudD4gZXhjZXB0aW9uTm9kZXMgPSBudWxsOwoJCXRyeSB7CgkJCWV4Y2VwdGlv
bk5vZGVzID0gKExpc3Q8RWxlbWVudD4pIFhQYXRoLnNlbGVjdE5vZGVzKHBFcnJvckhhbmRsaW5n
LCBwTG9jYXRpb25YUGF0aCk7CgkJfSAKCQljYXRjaCAoSkRPTUV4Y2VwdGlvbiBlKSB7CgkJCUxv
Zy5sb2dFcnJvcigiSkRPTSBFcnJvciBkdXJpbmcgZXh0cmFjdGlvbiBvZiBlcnJvciB0eXBlcyBm
cm9tIGV4Y2VwdGlvbiBoYW5kbGluZyBkZWZpbml0aW9uOiAiICsgZS5nZXRNZXNzYWdlKCkpOwoJ
CQlMb2cubG9nRGVidWcoImdldEhhbmRsaW5nc0ZvckxvY2F0aW9uOiA8LS0gbnVsbCAoSkRPTUV4
Y2VwdGlvbjogIiArIGUuZ2V0TWVzc2FnZSgpICsgIikiKTsKCQkJcmV0dXJuIG51bGw7CgkJfQog
ICAgICAgIC8vIGNoZWNrIGV4Y2VwdGlvbiBub2RlcyBzYW5pdHkKCQlpZiAoZXhjZXB0aW9uTm9k
ZXMgPT0gbnVsbCB8fCBleGNlcHRpb25Ob2Rlcy5pc0VtcHR5KCkpIHsKCQkJTG9nLmxvZ0RlYnVn
KCJnZXRIYW5kbGluZ3NGb3JMb2NhdGlvbjogPC0tIG51bGwgKE5vIGV4Y2VwdGlvbk5vZGVzKSIp
OwoJCQlyZXR1cm4gbnVsbDsKCQl9CQkJCgkJCgkJLy8gZXh0cmFjdCBleGNlcHRpb25zIGZyb20g
bGlzdCwgaWYgbG9jYXRpb24gZXhpc3RzIGFuZCBleGNlcHRpb24KCQkvLyBkZWZpbml0aW9ucyBh
cmUgY29udGFpbmVkCgkJLy8gaXRlcmF0aW9uIG92ZXIgYWxsIGRlZmluZWQgZXhjZXB0aW9ucyBp
biBsb2NhdGlvbgoJCUV4Y2VwdGlvbkhhbmRsaW5nSW5mbyBleGNlcHRpb25IYW5kbGluZ0luZm8g
PSBudWxsOwoJCUVsZW1lbnQgZXhjZXB0aW9uSGFuZGxpbmdFbGVtZW50ID0gbnVsbDsKCQlmb3Ig
KEVsZW1lbnQgZXhjZXB0aW9uTm9kZSA6IGV4Y2VwdGlvbk5vZGVzKSB7CgkJCWJvb2xlYW4gaXNF
cnJvck1lc3NhZ2VDb250YWluc0NoZWNrVHJ1ZSA9IGZhbHNlOwoJCQlmaW5hbCBTdHJpbmcgZXJy
b3JNZXNzYWdlQ29udGFpbnNGcm9tRGVmaW5pdGlvbiA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmli
dXRlVmFsdWUoRUhEX0FUVFJJQlVURV9FUlJPUl9NRVNTQUdFX0NPTlRBSU5TKTsKCQkJaWYgKGVy
cm9yTWVzc2FnZUNvbnRhaW5zRnJvbURlZmluaXRpb24gPT0gbnVsbCB8fAoJCQkJKGN1cnJlbnRF
cnJvck1lc3NhZ2UgIT0gbnVsbCAmJgoJCQkJZXJyb3JNZXNzYWdlQ29udGFpbnNGcm9tRGVmaW5p
dGlvbiAhPSBudWxsICYmCgkJCQljdXJyZW50RXJyb3JNZXNzYWdlLmNvbnRhaW5zKGVycm9yTWVz
c2FnZUNvbnRhaW5zRnJvbURlZmluaXRpb24pKSkgCgkJCXsKCQkJCWlzRXJyb3JNZXNzYWdlQ29u
dGFpbnNDaGVja1RydWUgPSB0cnVlOwoJCQl9CgoJCQkvLyBDaGVjayBmb3Igb3B0aW9uYWwgYXR0
cmlidXQgZXJyb3JNZXNzYWdlUmVnZXg6CgkJCWJvb2xlYW4gaXNFcnJvck1lc3NhZ2VSZWdleENo
ZWNrVHJ1ZSA9IGZhbHNlOwoJCQlmaW5hbCBTdHJpbmcgZXJyb3JNZXNzYWdlUmVnZXhGcm9tRGVm
aW5pdGlvbiA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVURV9F
UlJPUl9NRVNTQUdFX1JFR0VYX0lEKTsKCQkJaWYgKGVycm9yTWVzc2FnZVJlZ2V4RnJvbURlZmlu
aXRpb24gPT0gbnVsbCB8fAoJCQkJKGN1cnJlbnRFcnJvck1lc3NhZ2UgIT0gbnVsbCAmJgoJCQkJ
ZXJyb3JNZXNzYWdlUmVnZXhGcm9tRGVmaW5pdGlvbiAhPSBudWxsICYmCgkJCQljdXJyZW50RXJy
b3JNZXNzYWdlLm1hdGNoZXMoZXJyb3JNZXNzYWdlUmVnZXhGcm9tRGVmaW5pdGlvbikpKSAKCQkJ
ewoJCQkJaXNFcnJvck1lc3NhZ2VSZWdleENoZWNrVHJ1ZSA9IHRydWU7CgkJCX0KCQkJCgkJCS8v
IENoZWNrIGZvciBvcHRpb25hbCBhdHRyaWJ1dCBjYWxsZXJUeXBlOgoJCQlib29sZWFuIGlzQ2Fs
bGVyVHlwZUNoZWNrVHJ1ZSA9IGZhbHNlOwoJCQlmaW5hbCBTdHJpbmcgY2FsbGVyVHlwZUZyb21E
ZWZpbml0aW9uID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklCVVRF
X0VSUk9SX0NBTExFUl9UWVBFX0lEKTsKCQkJaWYgKGNhbGxlclR5cGVGcm9tRGVmaW5pdGlvbiA9
PSBudWxsIHx8CgkJCQkoY3VycmVudENhbGxlclR5cGUgIT0gbnVsbCAmJgoJCQkJY2FsbGVyVHlw
ZUZyb21EZWZpbml0aW9uICE9IG51bGwgJiYKCQkJCWN1cnJlbnRDYWxsZXJUeXBlLmVxdWFscyhj
YWxsZXJUeXBlRnJvbURlZmluaXRpb24pKSkgCgkJCXsKCQkJCWlzQ2FsbGVyVHlwZUNoZWNrVHJ1
ZSA9IHRydWU7CgkJCX0KCQkJCgkJCS8vIGlmIGRlZmluZWQgZXhjZXB0aW9uIHR5cGUgZXF1YWxz
IGV4Y2VwdGlvbiwgc2V0IGhhbmRsaW5nIGFuZAoJCQkvLyBleGl0IGxvb3AKCQkJZmluYWwgU3Ry
aW5nIGV4Y2VwdGlvblR5cGVGcm9tRGVmaW5pdGlvbiA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmli
dXRlVmFsdWUoRUhEX0FUVFJJQlVURV9FUlJPUl9UWVBFX0lEKTsKCQkJaWYgKGV4Y2VwdGlvblR5
cGVGcm9tRGVmaW5pdGlvbi5lcXVhbHMocEV4Y2VwdGlvblR5cGUpICYmIGlzRXJyb3JNZXNzYWdl
Q29udGFpbnNDaGVja1RydWUgJiYgaXNFcnJvck1lc3NhZ2VSZWdleENoZWNrVHJ1ZSAmJiBpc0Nh
bGxlclR5cGVDaGVja1RydWUpIHsKCQkJCWV4Y2VwdGlvbkhhbmRsaW5nSW5mbyA9IGdldFJldFZh
bChleGNlcHRpb25Ob2RlLCBwRXhjZXB0aW9uVHlwZSk7CgkJCQlleGNlcHRpb25IYW5kbGluZ0Vs
ZW1lbnQgPSBleGNlcHRpb25Ob2RlOwoJCQkJYnJlYWs7CgkJCX0JCgkJCSAgCgkJCS8vIGlmIGdl
bmVyaWMgaGFuZGxpbmcgaXMgYWxsb3dlZCBhbmQgZGVmaW5lZCAodHlwZT0iYWxsIiksIHNldCAo
Y2FjaGUpCgkJCS8vIGdlbmVyaWMgaGFuZGxpbmcKCQkJZWxzZSBpZiAoZXhjZXB0aW9uVHlwZUZy
b21EZWZpbml0aW9uLmVxdWFscyhFSERfVkFMVUVfR0VORVJJQ19FUlJPUl9UWVBFX0lEKSAmJiBp
c0Vycm9yTWVzc2FnZUNvbnRhaW5zQ2hlY2tUcnVlICYmIGlzRXJyb3JNZXNzYWdlUmVnZXhDaGVj
a1RydWUgJiYgaXNDYWxsZXJUeXBlQ2hlY2tUcnVlKSB7CgkJCQlleGNlcHRpb25IYW5kbGluZ0lu
Zm8gPSBnZXRSZXRWYWwoZXhjZXB0aW9uTm9kZSwgcEV4Y2VwdGlvblR5cGUpOwoJCQkJZXhjZXB0
aW9uSGFuZGxpbmdFbGVtZW50ID0gZXhjZXB0aW9uTm9kZTsKCQkJCWJyZWFrOwoJCQl9CgkJfQoK
CQlpZiAoZXhjZXB0aW9uSGFuZGxpbmdFbGVtZW50ID09IG51bGwpIHsKCQkJcmV0dXJuIG51bGw7
CgkJfSBlbHNlIHsKCQkJLy8gY2hlY2sgaGFuZGxpbmcgbm9kZXMgc2FuaXR5CgkJCWZvciAoT2Jq
ZWN0IG4gOiBleGNlcHRpb25IYW5kbGluZ0VsZW1lbnQuZ2V0Q2hpbGRyZW4oRUhEX0FUVFJJQlVU
RV9IQU5ETElORykpIHsKCQkJCQlleGNlcHRpb25IYW5kbGluZ0luZm8uYWRkU2VydmljZU5hbWUo
KChFbGVtZW50KSBuKS5nZXRUZXh0KCkpOwoJCQl9CgoJCQlMb2cubG9nRGVidWcoImdldEhhbmRs
aW5nc0ZvckxvY2F0aW9uOiA8LS0gIiArIGV4Y2VwdGlvbkhhbmRsaW5nSW5mbyk7CgkJCXJldHVy
biBleGNlcHRpb25IYW5kbGluZ0luZm87CgkJfQoJCQoJfQoJCglwcml2YXRlIHN0YXRpYyBFeGNl
cHRpb25IYW5kbGluZ0luZm8gZ2V0UmV0VmFsKEVsZW1lbnQgZXhjZXB0aW9uTm9kZSwgU3RyaW5n
IGV4Y2VwdGlvblR5cGUpIHsJCgkJZmluYWwgU3RyaW5nIGVycm9yVG9CZVRocm93biA9IGV4Y2Vw
dGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVURV9SRVRVUk5fVkFMVUVfSUQp
OwoJCWZpbmFsIFN0cmluZyB0eXBlID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShF
SERfQVRUUklCVVRFX0VSUk9SX1RZUEVfSUQpOwoJCWZpbmFsIFN0cmluZyBlcnJvckhhbmRsaW5n
SWQgPSBleGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9BVFRSSUJVVEVfRVJST1Jf
SEFORExJTkdfSURfSUQpOwoJCWZpbmFsIFN0cmluZyBtYXhSZXRyeUF0dGVtcHRzID0gZXhjZXB0
aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX01BWF9SRVRSWV9BVFRFTVBU
Uyk7CgkJZmluYWwgU3RyaW5nIHByaW50QnVzaW5lc3NPYmplY3RTdHIgPSBleGNlcHRpb25Ob2Rl
LmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9QUklOVF9CVVNJTkVTU19PQkpFQ1RfSUQpOwoJCWZpbmFs
IGJvb2xlYW4gcHJpbnRCdXNpbmVzc09iamVjdCA9IHByaW50QnVzaW5lc3NPYmplY3RTdHIgPT0g
bnVsbCA/IGZhbHNlIDogQm9vbGVhbi5wYXJzZUJvb2xlYW4ocHJpbnRCdXNpbmVzc09iamVjdFN0
cik7CgkJcmV0dXJuIG5ldyBFeGNlcHRpb25IYW5kbGluZ0luZm8oZXJyb3JUb0JlVGhyb3duLCB0
eXBlLCBlcnJvckhhbmRsaW5nSWQsIGV4Y2VwdGlvblR5cGUsIG1heFJldHJ5QXR0ZW1wdHMsIHBy
aW50QnVzaW5lc3NPYmplY3QpOwoJfQoJCgoJcHJpdmF0ZSBzdGF0aWMgSURhdGEgYnVpbGRDb21w
YWN0RXJyb3JJbmZvKFN0cmluZyBwRXJyb3JMb2NhdGlvbiwgU3RyaW5nIGZsb3dTdGVwKSB7CgkJ
SURhdGEgY29tcGFjdEVycm9ySW5mbyA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsKCQlJRGF0YUN1
cnNvciBjb21wYWN0RXJyb3JJbmZvQ3Vyc29yID0gY29tcGFjdEVycm9ySW5mby5nZXRDdXJzb3Io
KTsKCgkJSURhdGFVdGlsLnB1dChjb21wYWN0RXJyb3JJbmZvQ3Vyc29yLCBDT01QQUNUX0VSUk9S
X0xPQ0FUSU9OX0lELCBwRXJyb3JMb2NhdGlvbik7CgkJSURhdGFVdGlsLnB1dChjb21wYWN0RXJy
b3JJbmZvQ3Vyc29yLCBDT01QQUNUX0VSUk9SX0ZMT1dfU1RFUCwgZmxvd1N0ZXApOwoKCQljb21w
YWN0RXJyb3JJbmZvQ3Vyc29yLmRlc3Ryb3koKTsKCgkJcmV0dXJuIGNvbXBhY3RFcnJvckluZm87
Cgl9CgkJCglAU3VwcHJlc3NXYXJuaW5ncygicmF3dHlwZXMiKQoJcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgTlNTZXJ2aWNlIGdldEN1cnJlbnRUb3BMZXZlbFNlcnZpY2UoKSB7CgkJTlNTZXJ2aWNlIHRv
cExldmVsU2VydmljZU5hbWUgPSBudWxsOwoJCUludm9rZVN0YXRlIHN0YXRlID0gSW52b2tlU3Rh
dGUuZ2V0Q3VycmVudFN0YXRlKCk7CgkJaWYgKHN0YXRlICE9IG51bGwpIHsKCQkJU3RhY2sgY2Fs
bFN0YWNrID0gc3RhdGUuZ2V0Q2FsbFN0YWNrKCk7CgkJCWlmIChjYWxsU3RhY2sgIT0gbnVsbCAm
JiBjYWxsU3RhY2suc2l6ZSgpID4gMCkgewoJCQkJdG9wTGV2ZWxTZXJ2aWNlTmFtZSA9IChOU1Nl
cnZpY2UpIGNhbGxTdGFjay5lbGVtZW50QXQoMCk7CgkJCX0KCQl9CgkJcmV0dXJuIHRvcExldmVs
U2VydmljZU5hbWU7Cgl9CgkKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBnZXRNZXNzYWdl
VUlEKElEYXRhIG1ldGFEYXRhKSB7CgkJaWYobWV0YURhdGEgIT0gbnVsbCkgewoJCQlJRGF0YU1h
cCBtZXRhRGF0YU1hcCA9IG5ldyBJRGF0YU1hcChtZXRhRGF0YSk7CgkJCXJldHVybiBtZXRhRGF0
YU1hcC5nZXRBc1N0cmluZyhVSURfSUQpOwoJCX0KCQlyZXR1cm4gbnVsbDsKCX0KCglwdWJsaWMg
c3RhdGljIHZvaWQgaW5pdEhhbmRsaW5ncyhVUkwgcFVybCwgU0FYQnVpbGRlciBwQnVpbGRlcikg
ewoJCWZpbmFsIFNBWEJ1aWxkZXIgYnVpbGRlcjsKCQlpZiAocEJ1aWxkZXIgPT0gbnVsbCkgewoJ
CQlidWlsZGVyID0gbmV3IFNBWEJ1aWxkZXIoKTsKCQl9IGVsc2UgewoJCQlidWlsZGVyID0gcEJ1
aWxkZXI7CgkJfQoJCWZpbmFsIERvY3VtZW50IGRvYyA9IGxvYWRIYW5kbGluZ3MocFVybCwgYnVp
bGRlcik7CgkJc3luY2hyb25pemVkKGVycm9ySGFuZGxpbmdMb2NrKSB7CgkJCV9lcnJvckhhbmRs
aW5nID0gZG9jOwoJCX0KCX0KCQoJcHJpdmF0ZSBzdGF0aWMgRG9jdW1lbnQgbG9hZEhhbmRsaW5n
cyhVUkwgcEZpbGUsIFNBWEJ1aWxkZXIgcEJ1aWxkZXIpIHsKCQkvLyBMb2FkIGV4Y2VwdGlvbiBo
YW5kbGluZyBkZWZpbml0aW9uIGZpbGUKCQkKCQl0cnkgewoJCQlmaW5hbCBEb2N1bWVudCBlaGQg
PSBwQnVpbGRlci5idWlsZChwRmlsZSk7CgkJCgkJCUxvZy5sb2dJbmZvKCJTdWNjZXNzZnVsbHkg
aW5pdGlhbGl6ZWQgZXJyb3IgaGFuZGxpbmciKTsKCQkJcmV0dXJuIGVoZDsKCQl9IAoJCWNhdGNo
IChKRE9NRXhjZXB0aW9uIGUpIHsKCQkJTG9nLmxvZ0Vycm9yKCJKRE9NIEVycm9yIGR1cmluZyBp
bml0aWFsaXphdGlvbiBvZiBlcnJvciBoYW5kbGluZzogIiArIGUuZ2V0TWVzc2FnZSgpKTsKCQkJ
dGhyb3cgbmV3IFVuZGVjbGFyZWRUaHJvd2FibGVFeGNlcHRpb24oZSk7CgkJfSAKCQljYXRjaCAo
SU9FeGNlcHRpb24gZSkgewoJCQlMb2cubG9nRXJyb3IoIklPIEVycm9yIGR1cmluZyBpbml0aWFs
aXphdGlvbiBvZiBlcnJvciBoYW5kbGluZzogIiArIGUuZ2V0TWVzc2FnZSgpKTsKCQkJdGhyb3cg
bmV3IFVuZGVjbGFyZWRUaHJvd2FibGVFeGNlcHRpb24oZSk7CgkJfQoJfQoKCglwcml2YXRlIHN0
YXRpYyBTdHJpbmcgYXNTdHJpbmcoU3RyaW5nW10gdGVtcFBhcnRzKSB7CgkJU3RyaW5nQnVpbGRl
ciBidWlsZGVyID0gbmV3IFN0cmluZ0J1aWxkZXIoKTsKCQlmb3IgKFN0cmluZyBzdHJpbmcgOiB0
ZW1wUGFydHMpIHsKCQkJYnVpbGRlci5hcHBlbmQoc3RyaW5nKS5hcHBlbmQoIiwiKTsKCQl9CgkJ
cmV0dXJuIGJ1aWxkZXIudG9TdHJpbmcoKTsKCX0KCgkKCS8vICoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKCS8vIC0tLS0t
LS0tLS0tLS0tLS0tLS0tLVhNTCBOT0RFIE5BTUUgREVGSU5JVElPTlMtLS0tLS0tLS0tLS0tLS0t
LS0tLS0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfTk9E
RV9ET0NfUk9PVF9JRCA9ICJlcnJvckhhbmRsaW5nIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0
cmluZyBFSERfTk9ERV9HTE9CQUxfRVJST1JfVFlQRV9JRCA9ICJnbG9iYWxFeGNlcHRpb24iOwoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9OT0RFX0VSUk9SX0xPQ0FUSU9OX0lEID0g
ImxvY2F0aW9uIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfTk9ERV9FUlJPUl9U
WVBFX0lEID0gImV4Y2VwdGlvbiI7CgoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJLy8gLS0tLS0tLS0tLS0tLS0t
LS0tLVhNTCBOT0RFIEFUVFJJQlVURSBERUZJTklUSU9OUy0tLS0tLS0tLS0tLS0tLS0tLQoJLy8g
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKgoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfRVJS
T1JfVFlQRV9JRCA9ICJ0eXBlIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRU
UklCVVRFX0VSUk9SX0NBTExFUl9UWVBFX0lEID0gImNhbGxlclR5cGUiOwkJCglwcml2YXRlIHN0
YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9FUlJPUl9NRVNTQUdFX0NPTlRBSU5TID0g
ImVycm9yTWVzc2FnZUNvbnRhaW5zIjsJCQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVI
RF9BVFRSSUJVVEVfRVJST1JfTUVTU0FHRV9SRUdFWF9JRCA9ICJlcnJvck1lc3NhZ2VSZWdleCI7
CQkKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0xPQ0FUSU9OX05B
TUVfSUQgPSAibmFtZSI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVU
RV9SRVRVUk5fVkFMVUVfSUQgPSAiZXJyb3JUb0JlVGhyb3duIjsKCXByaXZhdGUgc3RhdGljIGZp
bmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0VSUk9SX0hBTkRMSU5HX0lEX0lEID0gImVycm9ySGFu
ZGxpbmdJZCI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9IQU5E
TElORz0gImhhbmRsaW5nIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklC
VVRFX01BWF9SRVRSWV9BVFRFTVBUUyA9ICJtYXhSZXRyeUF0dGVtcHRzIjsKCXByaXZhdGUgc3Rh
dGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX1JFVFJZX0NPVU5UID0gInJldHJ5Q291bnQi
OwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9QUklOVF9CVVNJTkVTU19PQkpFQ1Rf
SUQgPSAicHJpbnRCdXNpbmVzc09iamVjdCI7CgoJLy8gKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJLy8gLS0tLS0tLS0t
LS0tLS0tLS0tLS0tWE1MIE5PREUgVkFMVUUgREVGSU5JVElPTlMtLS0tLS0tLS0tLS0tLS0tLS0t
LQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKgoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9WQUxVRV9H
RU5FUklDX0VSUk9SX1RZUEVfSUQgPSAiYWxsIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmlu
ZyBFSERfVkFMVUVfR0xPQkFMX0VSUk9SX0hBTkRMSU5HX0lEID0gImdsb2JhbCI7CgoJLy8gKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKgoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tSU5QVVQgRVJST1IgRklFTEQgSUQgREVGSU5J
VElPTlMtLS0tLS0tLS0tLS0tLS0tLQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgU3RyaW5nIEVSUk9SX0lORk9fSUQgPSAiZXhjZXB0aW9uSW5mbyI7Cglwcml2YXRlIHN0YXRp
YyBmaW5hbCBTdHJpbmcgRVhDTFVERV9TRVJWSUNFID0gIkBXeFJlc2lsaWVuY2UuZXJyb3JIYW5k
bGluZy5leGNsdWRlU2VydmljZUZyb21FcnJvckhhbmRsaW5nQCI7CgkKCXByaXZhdGUgc3RhdGlj
IGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0VSUk9SID0gImVycm9yIjsKCXByaXZhdGUgc3RhdGlj
IGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0VSUk9SX1RZUEUgPSAiZXJyb3JUeXBlIjsKCXByaXZh
dGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0NBTExfU1RBQ0tfU0VSVklDRSA9ICJz
ZXJ2aWNlIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0NBTExfU1RB
Q0tfRkxPV19TVEVQID0gImZsb3dTdGVwIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBF
UlJPUl9JTkZPX0NBTExfU1RBQ0sgPSAiY2FsbFN0YWNrIjsKCXByaXZhdGUgc3RhdGljIGZpbmFs
IFN0cmluZyBFUlJPUl9JTkZPX0VSUk9SX0RVTVAgPSAiZXJyb3JEdW1wIjsKCXByaXZhdGUgc3Rh
dGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX1RJTUUgPSAidGltZSI7Cglwcml2YXRlIHN0YXRp
YyBmaW5hbCBTdHJpbmcgRVJST1JfSU5GT19ORVNURURfRVJST1JfSUQgPSAibmVzdGVkRXJyb3JJ
bmZvIjsKCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgR0VORVJJQ19WQUxVRV9NQVBfSUQg
PSAiZ2VuZXJpY1ZhbHVlTWFwIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBHRU5FUklD
X0VSUk9SX01FU1NBR0VfSUQgPSAiZ2VuZXJpY0Vycm9yTWVzc2FnZSI7CgoJLy8gKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgoJLy8gLS0tLS0tLS0tLS0tLS1PVVRQVVQgSEFORExFRCBFUlJPUiBGSUVMRCBJRCBERUZJTklU
SU9OUy0tLS0tLS0tLS0tLQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3Ry
aW5nIEhBTkRMRURfRVJST1JfSU5GT19JRCA9ICJoYW5kbGVkRXJyb3JJbmZvIjsKCQoJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19ST09UX0lEID0gInRvcFNl
cnZpY2VFcnJvciI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9J
TkZPX0hBTkRMRURfSUQgPSAiaGFuZGxlZFNlcnZpY2VFcnJvciI7Cglwcml2YXRlIHN0YXRpYyBm
aW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0FQUExJQ0FUSU9OX1NFUlZJQ0VfSUQgPSAi
YXBwbGljYXRpb25TZXJ2aWNlRXJyb3IiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhB
TkRMRURfRVJST1JfSU5GT19PUklHSU5fSUQgPSAicm9vdFNlcnZpY2VFcnJvciI7CgoJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19IQU5ETElOR19MT0NBVElP
Tl9JRCA9ICJoYW5kbGluZ0xvY2F0aW9uIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBI
QU5ETEVEX0VSUk9SX0lORk9fSEFORExJTkdfVFlQRV9JRCA9ICJoYW5kbGluZ1R5cGUiOwoJcHJp
dmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19ERVBUSF9JRCA9ICJl
cnJvckRlcHRoIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lO
Rk9fRVJST1JfQ09ERSA9ICJlcnJvckNvZGUiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5n
IEhBTkRMRURfRVJST1JfSU5GT19DQUxMX1NUQUNLID0gImNhbGxTdGFjayI7Cglwcml2YXRlIHN0
YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0VSUk9SX0RVTVAgPSAiZXJyb3JE
dW1wIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fVElN
RSA9ICJ0aW1lIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lO
Rk9fUElQRUxJTkUgPSAicGlwZWxpbmUiOwoKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBF
UlJPUl9NU0dfSUQgPSAiZXJyb3JNZXNzYWdlIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmlu
ZyBDT01QQUNUX0VSUk9SX0xPQ0FUSU9OX0lEID0gImVycm9yTG9jYXRpb24iOwoJcHJpdmF0ZSBz
dGF0aWMgZmluYWwgU3RyaW5nIENPTVBBQ1RfRVJST1JfRkxPV19TVEVQID0gImVycm9yRmxvd1N0
ZXAiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX1RZUEVfSUQgPSAiZXJyb3JU
eXBlIjsKCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqCgkvLyAtLS0tLS0tLS0tLS0tLS0tLS0tR0VORVJJQyBET0Mg
RklFTEQgSUQgREVGSU5JVElPTlMtLS0tLS0tLS0tLS0tLS0tCgkvLyAqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCglwcml2
YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgQlVTSU5FU1NfRE9DX0lEID0gImJ1c2luZXNzT2JqZWN0
IjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBQUklOVF9CVVNJTkVTU19PQkpFQ1RfSUQg
PSAicHJpbnRCdXNpbmVzc09iamVjdCI7CgoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJLy8gLS0tLS0tLS0tLS0t
LS0tLS0tLS1FWENFUFRJT04gSEFORExJTkcgREVGSU5JVElPTi0tLS0tLS0tLS0tLS0tLS0tLQoJ
Ly8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKgoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIE1FVEFEQVRBX0lEID0g
Im1ldGFEYXRhIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBVSURfSUQgPSAidXVpZCI7
CgoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKgoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1FWENFUFRJT04gSEFORExJ
TkcgREVGSU5JVElPTi0tLS0tLS0tLS0tLS0tLS0tLQoJLy8gKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJcHJpdmF0ZSBz
dGF0aWMgRG9jdW1lbnQgX2Vycm9ySGFuZGxpbmc7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBPYmpl
Y3QgZXJyb3JIYW5kbGluZ0xvY2sgPSBuZXcgT2JqZWN0KCk7Cglwcml2YXRlIHN0YXRpYyBFcnJv
ckhhbmRsaW5nTGlzdGVuZXIgX2Vycm9ySGFuZGxpbmdMaXN0ZW5lcjsKCXByaXZhdGUgc3RhdGlj
IENhbGxlclR5cGVTdXBwbGllciBERUZBVUxUX0NBTExFUl9UWVBFX1NVUFBMSUVSID0gbmV3IENh
bGxlclR5cGVTdXBwbGllcigpIHsKCQlAT3ZlcnJpZGUKCQlwdWJsaWMgU3RyaW5nIGdldCgpIHsK
CQkJcmV0dXJuIGdldENhbGxlclR5cGVCeUNhbGxpbmdTZXJ2aWNlKCk7CgkJfQoJfTsKCXByaXZh
dGUgc3RhdGljIENhbGxlclR5cGVTdXBwbGllciBjYWxsZXJUeXBlU3VwcGxpZXIgPSBudWxsOwoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgT2JqZWN0IGNhbGxlclR5cGVTdXBwbGllckxvY2sgPSBuZXcg
T2JqZWN0KCk7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBPYmplY3QgZXJyb3JIYW5kbGluZ0xpc3Rl
bmVyTG9jayA9IG5ldyBPYmplY3QoKTsKCXByaXZhdGUgc3RhdGljIGZpbmFsIE9iamVjdCBjcmVh
dGVTdW1tYXJpemVkRXJyb3JIYW5kbGluZ0xvY2sgPSBuZXcgT2JqZWN0KCk7CgkvLyAqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqCgkvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLUlOUFVUIEdFVCBWQUxVRSBERUZJTklUSU9OLS0t
LS0tLS0tLS0tLS0tLS0tLS0tCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCglwcml2YXRlIHN0YXRpYyBmaW5hbCBT
dHJpbmcgTUFYX1JFVFJZX0FUVEVNUFRTX0RFRkFVTFQgPSAibWF4UmV0cnlBdHRlbXB0c0RlZmF1
bHQiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIE1BWF9SRVRSWV9BVFRFTVBUU19CRUZP
UkVfQ0FOQ0VMX1JFVFJZID0gIm1heFJldHJ5QXR0ZW1wdHNCZWZvcmVDYW5jZWxSZXRyeSI7Cglw
cml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgUEFDS0FHRV9MQ0xfRVJST1IgPSAiV3hSZXNpbGll
bmNlIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBCUkVBS19SRVRSWV9MT09QID0gImJy
ZWFrLnJldHJ5Lmxvb3AuZm9yLiI7CgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCgkvLyAtLS0tLS0tLS0tLS0tLS0t
LS0tLUVSUk9SIFZBTFVFIERFRklOSVRJT04tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCS8vICoqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBSRVRSWSA9ICJUUkFOU0lFTlQiOwoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEFCT1JUID0gIkZBVEFMIjsKCXByaXZhdGUgc3Rh
dGljIGZpbmFsIFN0cmluZyBDT05USU5VRSA9ICJOT05FIjsJCgkKCXByaXZhdGUgc3RhdGljIGZp
bmFsIFN0cmluZyBTVU1NQVJJWkVEX0VSUk9SX0hBTkRMSU5HX0ZJTEUgPSAiRXJyb3JIYW5kbGlu
Z1N1bW1hcml6ZWQueG1sIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFWENFUFRJT05f
SEFORExJTkdfWFNEX0ZJTEUgPSAiRXJyb3JIYW5kbGluZy54c2QiOwoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3RyaW5nIFdYX1JFU0lMSUVOQ0UgPSAiV3hSZXNpbGllbmNlIjsKCXByaXZhdGUgc3Rh
dGljIGZpbmFsIFN0cmluZyBFUlJPUl9IQU5ETElOR19YTUxfRklMRSA9ICJFcnJvckhhbmRsaW5n
LnhtbCI7CgoKCQoJCgkKCQoJ</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>com.softwareag.util.IDataMap</value>
    <value>com.wm.app.audit.IAuditRuntime</value>
    <value>wx.resilience.impl.ErrorInfo</value>
    <value>wx.resilience.impl.SummarizedErrorHandlingHandler</value>
    <value>wx.resilience.impl.SummarizedErrorHandlingHandler.Creator</value>
    <value>wx.resilience.impl.Exceptions</value>
    <value>wx.resilience.impl.Paths</value>
    <value>com.wm.lang.ns.NSName</value>
    <value>java.io.File</value>
    <value>java.io.IOException</value>
    <value>java.util.*</value>
    <value>javax.xml.transform.Source</value>
    <value>javax.xml.transform.stream.StreamSource</value>
    <value>javax.xml.validation.Schema</value>
    <value>javax.xml.validation.SchemaFactory</value>
    <value>javax.xml.validation.Validator</value>
    <value>org.jdom.Document</value>
    <value>org.jdom.Element</value>
    <value>org.jdom.JDOMException</value>
    <value>org.jdom.input.SAXBuilder</value>
    <value>org.jdom.xpath.XPath</value>
    <value>org.xml.sax.SAXException</value>
    <value>com.wm.app.b2b.server.*</value>
    <value>java.io.*</value>
    <value>java.lang.reflect.UndeclaredThrowableException</value>
    <value>java.net.URL</value>
    <value>java.nio.file.Files</value>
    <value>java.nio.file.Path</value>
    <value>java.nio.file.StandardCopyOption</value>
    <value>com.wm.lang.ns.NSService</value>
    <value>java.util.function.Supplier</value>
  </array>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
</Values>
