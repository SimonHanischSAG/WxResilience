<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">QEZ1bmN0aW9uYWxJbnRlcmZhY2UNCnB1YmxpYyBzdGF0aWMgaW50ZXJmYWNlIEV4Y2VwdGlvbkhh
bmRsaW5nTGlzdGVuZXIgew0KCXB1YmxpYyB2b2lkIGFjY2VwdChTdHJpbmcgcFNlcnZpY2VOYW1l
LCBJRGF0YSBwUGlwZWxpbmUpOw0KfQ0KDQpARnVuY3Rpb25hbEludGVyZmFjZQ0KcHVibGljIHN0
YXRpYyBpbnRlcmZhY2UgQ2FsbGVyVHlwZVN1cHBsaWVyIHsNCglwdWJsaWMgU3RyaW5nIGdldCgp
Ow0KfQ0KDQpwcml2YXRlIHN0YXRpYyBQYXRoIGNyZWF0ZVN1bW1hcml6ZWRFeGNlcHRpb25IYW5k
bGluZygpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsNCglzeW5jaHJvbml6ZWQoY3JlYXRlU3Vt
bWFyaXplZEV4Y2VwdGlvbkhhbmRsaW5nTG9jaykgew0KCQlyZXR1cm4gY3JlYXRlU3VtbWFyaXpl
ZEV4Y2VwdGlvbkhhbmRsaW5nKFNVTU1BUklaRURfRVhDRVBUSU9OX0hBTkRMSU5HX0ZJTEUpOw0K
CX0NCn0NCnByaXZhdGUgc3RhdGljIFBhdGggY3JlYXRlU3VtbWFyaXplZEV4Y2VwdGlvbkhhbmRs
aW5nKFN0cmluZyBwRmlsZU5hbWUpDQoJCXRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsNCglGaWxl
IElTRGlyID0gU2VydmVyQVBJLmdldFNlcnZlckNvbmZpZ0RpcigpLmdldFBhcmVudEZpbGUoKTsN
CglGaWxlIElTUGFja2FnZXMgPSBuZXcgamF2YS5pby5GaWxlKElTRGlyLCAicGFja2FnZXMiKTsN
CglmaW5hbCBQYXRoIGNvbmZpZ0RpciA9IFNlcnZlckFQSS5nZXRQYWNrYWdlQ29uZmlnRGlyKFdY
X1JFU0lMSUVOQ0UpLnRvUGF0aCgpOw0KCWZpbmFsIFBhdGggb3V0cHV0RmlsZSA9IGNvbmZpZ0Rp
ci5yZXNvbHZlKHBGaWxlTmFtZSk7DQoJUGF0aHMuYXNzZXJ0UGFyZW50RGlyRXhpc3RzKG91dHB1
dEZpbGUpOw0KDQoJdHJ5IHsNCgkJdHJ5IChDcmVhdG9yIGNyZWF0b3IgPSBTdW1tYXJpemVkRXhj
ZXB0aW9uSGFuZGxpbmdIYW5kbGVyLm5ld0NyZWF0b3Iob3V0cHV0RmlsZSkpIHsNCgkJCWZvciAo
RmlsZSBwYWNrYWdlRGlyIDogSVNQYWNrYWdlcy5saXN0RmlsZXMoKSkgew0KCQkJCWlmIChwYWNr
YWdlRGlyLmlzRGlyZWN0b3J5KCkpIHsNCgkJCQkJZmluYWwgU3RyaW5nIHBhY2thZ2VOYW1lID0g
cGFja2FnZURpci5nZXROYW1lKCk7DQoJCQkJCWlmIChwYWNrYWdlTmFtZS5zdGFydHNXaXRoKCJX
bSIpKSB7DQoJCQkJCQljb250aW51ZTsNCgkJCQkJfQ0KCQkJCQlmaW5hbCBGaWxlIHBhY2thZ2VD
ZmdEaXIgPSBuZXcgRmlsZShwYWNrYWdlRGlyLCAiY29uZmlnIik7DQoJCQkJCWlmIChwYWNrYWdl
Q2ZnRGlyLmlzRGlyZWN0b3J5KCkpIHsNCgkJCQkJCWZpbmFsIEZpbGUgcGFja2FnZUVoZEZpbGUg
PSBuZXcgRmlsZShwYWNrYWdlQ2ZnRGlyLCBFUlJPUl9IQU5ETElOR19YTUxfRklMRSk7DQoJCQkJ
CQlpZiAocGFja2FnZUVoZEZpbGUuaXNGaWxlKCkpIHsNCgkJCQkJCQljcmVhdG9yLnBhcnNlKHBh
Y2thZ2VFaGRGaWxlLCBwYWNrYWdlTmFtZSk7DQoJCQkJCQl9DQoJCQkJCX0NCgkJCQl9DQoJCQl9
DQoJCX0NCgkJdmFsaWRhdGVYTUwoKTsNCgl9IGNhdGNoIChFeGNlcHRpb24gZSkgew0KCQlMb2cu
bG9nRXJyb3IoIkVycm9yIGR1cmluZyBwYXJzaW5nIG9mIHN1bW1hcml6ZWRFeGNlcHRpb25IYW5k
bGluZ0RlZmluaXRpb246ICIgKyBlLmdldE1lc3NhZ2UoKSk7DQoJCXRocm93IEV4Y2VwdGlvbnMu
c2hvdyhlLCBTZXJ2aWNlRXhjZXB0aW9uLmNsYXNzKTsNCgl9DQoJcmV0dXJuIG91dHB1dEZpbGU7
DQp9DQoNCnByaXZhdGUgc3RhdGljIGZpbmFsIEV4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXIgREVG
QVVMVF9FUlJPUl9IQU5ETEVSID0gbmV3IEV4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXIoKSB7DQoJ
cHVibGljIHZvaWQgYWNjZXB0KFN0cmluZyBzLCBJRGF0YSBkKSB7DQoJCUxvZy5sb2dEZWJ1Zygi
RGVmYXVsdEVycm9ySGFuZGxlcjogLS0+ICIgKyBzKTsNCgkJdHJ5IHsNCgkJCVNlcnZpY2UuZG9J
bnZva2UoTlNOYW1lLmNyZWF0ZShzKSwgZCk7DQoJCX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7DQoJ
CQlMb2cubG9nRGVidWcoIkRlZmF1bHRFcnJvckhhbmRsZXI6ICIgKyBlLmdldENsYXNzKCkuZ2V0
TmFtZSgpICsgIiwgIiArIGUuZ2V0TWVzc2FnZSgpKTsNCgkJCXRocm93IG5ldyBVbmRlY2xhcmVk
VGhyb3dhYmxlRXhjZXB0aW9uKGUpOw0KCQl9DQoJCUxvZy5sb2dEZWJ1ZygiRGVmYXVsdEVycm9y
SGFuZGxlcjogPC0tIik7DQoJfQ0KfTsNCnByaXZhdGUgc3RhdGljIEV4Y2VwdGlvbkhhbmRsaW5n
TGlzdGVuZXIgZ2V0RXJyb3JIYW5kbGVyKCkgew0KCXN5bmNocm9uaXplZCAoZXhjZXB0aW9uSGFu
ZGxpbmdMaXN0ZW5lckxvY2spIHsNCgkJaWYgKF9leGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyID09
IG51bGwpIHsNCgkJCXJldHVybiBERUZBVUxUX0VSUk9SX0hBTkRMRVI7DQoJCX0gZWxzZSB7DQoJ
CQlyZXR1cm4gX2V4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXI7DQoJCX0NCgl9DQp9DQpwdWJsaWMg
c3RhdGljIHZvaWQgc2V0RXJyb3JIYW5kbGVyKEV4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXIgcEVy
cm9ySGFuZGxpbmdMaXN0ZW5lcikgew0KCXN5bmNocm9uaXplZCAoZXhjZXB0aW9uSGFuZGxpbmdM
aXN0ZW5lckxvY2spIHsNCgkJX2V4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXIgPSBwRXJyb3JIYW5k
bGluZ0xpc3RlbmVyOw0KCX0NCn0NCnByaXZhdGUgc3RhdGljIHZvaWQgaW52b2tlRXJyb3JIYW5k
bGVyKElEYXRhIHBIYW5kbGluZ1NlcnZpY2VJbnB1dCwNCgkJZmluYWwgU3RyaW5nIHBTZXJ2aWNl
TmFtZSkgdGhyb3dzIEV4Y2VwdGlvbiB7DQoJTG9nLmxvZ0RlYnVnKCJpbnZva2VFcnJvckhhbmRs
ZXI6IC0tPiAiKTsNCglmaW5hbCBFeGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyIGVobCA9IGdldEVy
cm9ySGFuZGxlcigpOw0KCUxvZy5sb2dEZWJ1ZygiaW52b2tlRXJyb3JIYW5kbGVyOiBlaD0iICsg
ZWhsKTsNCgllaGwuYWNjZXB0KHBTZXJ2aWNlTmFtZSwgcEhhbmRsaW5nU2VydmljZUlucHV0KTsN
CglMb2cubG9nRGVidWcoImludm9rZUVycm9ySGFuZGxlcjogPC0tIik7DQoNCgkvLyAtLS0gPDxJ
Uy1FTkQ+PiAtLS0NCn0NCg0KcHJpdmF0ZSBzdGF0aWMgRG9jdW1lbnQgZ2V0ZXJyb3JIYW5kbGlu
Z3MoKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7DQoJc3luY2hyb25pemVkKGV4Y2VwdGlvbkhh
bmRsaW5nTG9jaykgew0KCQlpZiAoX2V4Y2VwdGlvbkhhbmRsaW5nICE9IG51bGwpIHsNCgkJCXJl
dHVybiBfZXhjZXB0aW9uSGFuZGxpbmc7DQoJCX0NCgl9DQoJaW5pdGlhbGl6ZUV4Y2VwdGlvbkhh
bmRsaW5ncyhudWxsKTsNCglzeW5jaHJvbml6ZWQgKGV4Y2VwdGlvbkhhbmRsaW5nTG9jaykgew0K
CQlpZiAoX2V4Y2VwdGlvbkhhbmRsaW5nID09IG51bGwpIHsNCgkJCXRocm93IG5ldyBJbGxlZ2Fs
U3RhdGVFeGNlcHRpb24oIlVuYWJsZSB0byBpbml0aWFsaXplIGVycm9ySGFuZGxpbmcuIERpZCB5
b3UgYXNzZW1ibGUgaXQ/Iik7DQoJCX0gZWxzZSB7DQoJCQlyZXR1cm4gX2V4Y2VwdGlvbkhhbmRs
aW5nOw0KCQl9DQoJfQ0KfQ0KDQpwcml2YXRlIHN0YXRpYyBTdHJpbmcgZ2V0Q2FsbGVyVHlwZSgp
IHsNCglDYWxsZXJUeXBlU3VwcGxpZXIgY3RzOyANCglzeW5jaHJvbml6ZWQgKGNhbGxlclR5cGVT
dXBwbGllckxvY2spIHsNCgkJY3RzID0gY2FsbGVyVHlwZVN1cHBsaWVyOw0KCX0NCglpZiAoY3Rz
ID09IG51bGwpIHsNCgkJY3RzID0gREVGQVVMVF9DQUxMRVJfVFlQRV9TVVBQTElFUjsNCgl9DQoJ
cmV0dXJuIGN0cy5nZXQoKTsNCn0NCg0KcHVibGljIHN0YXRpYyB2b2lkIHNldENhbGxlclR5cGVT
dXBwbGllcihDYWxsZXJUeXBlU3VwcGxpZXIgcFN1cHBsaWVyKSB7DQoJc3luY2hyb25pemVkIChj
YWxsZXJUeXBlU3VwcGxpZXJMb2NrKSB7DQoJCWNhbGxlclR5cGVTdXBwbGllciA9IHBTdXBwbGll
cjsNCgl9DQp9DQoNCnByaXZhdGUgc3RhdGljIFN0cmluZyBnZXRDYWxsZXJUeXBlQnlDYWxsaW5n
U2VydmljZSgpIHsNCglJRGF0YSBpbnB1dCA9IG51bGw7DQoJU3RyaW5nIHR5cGUgPSAiIjsNCgkv
LyBvdXRwdXQNCglJRGF0YSBvdXRwdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJdHJ5IHsN
CgkJb3V0cHV0ID0gU2VydmljZS5kb0ludm9rZSggInd4LnJlc2lsaWVuY2UuaW1wbC5jYWxsZXIi
LCAiZ2V0Q2FsbGVyIiwgaW5wdXQgKTsNCgkJSURhdGFNYXAgb3V0cHV0TWFwID0gbmV3IElEYXRh
TWFwKG91dHB1dCk7DQoJCUlEYXRhTWFwIGNhbGxlck1hcCA9IG5ldyBJRGF0YU1hcChvdXRwdXRN
YXAuZ2V0QXNJRGF0YSgiY2FsbGVyIikpOw0KCQlyZXR1cm4gY2FsbGVyTWFwLmdldEFzU3RyaW5n
KCJ0eXBlIik7DQoJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsNCgkJcmV0dXJuIHR5cGU7DQoJfQkN
Cn0NCg0KDQoJcHJpdmF0ZSBzdGF0aWMgU3RyaW5nIGdldENhbGxTdGFja0FzSlNPTlN0cmluZyhB
cnJheUxpc3Q8SURhdGFDdXJzb3I+IGVycm9ySW5mb0hpZXJhY2h5KSB7DQoNCgkJSURhdGFbXSBj
YWxsU3RhY2sgPSBJRGF0YVV0aWwuZ2V0SURhdGFBcnJheShlcnJvckluZm9IaWVyYWNoeS5nZXQo
MCksIEVSUk9SX0lORk9fQ0FMTF9TVEFDSyk7DQoJCQ0KCQlTdHJpbmcganNvblN0cmluZyA9ICIi
Ow0KCQkNCgkJaWYgKGNhbGxTdGFjayAhPSBudWxsKSB7DQoJCQkvLyBpbnB1dA0KCQkJSURhdGEg
aW5wdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJCQlJRGF0YUN1cnNvciBpbnB1dEN1cnNv
ciA9IGlucHV0LmdldEN1cnNvcigpOw0KDQoJCQkvLyBkb2N1bWVudA0KCQkJSURhdGEgZG9jdW1l
bnQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJCQlJRGF0YUN1cnNvciBkb2N1bWVudEN1cnNv
ciA9IGRvY3VtZW50LmdldEN1cnNvcigpOw0KCQkJSURhdGFVdGlsLnB1dChkb2N1bWVudEN1cnNv
ciwgImNhbGxTdGFjayIsIGNhbGxTdGFjayk7DQoJCQlJRGF0YVV0aWwucHV0KGlucHV0Q3Vyc29y
LCAiZG9jdW1lbnQiLCBkb2N1bWVudCk7DQoJCQlJRGF0YVV0aWwucHV0KGlucHV0Q3Vyc29yLCAi
cHJldHR5UHJpbnQiLCAiZmFsc2UiKTsNCgkJCWlucHV0Q3Vyc29yLmRlc3Ryb3koKTsNCg0KCQkJ
Ly8gb3V0cHV0DQoJCQlJRGF0YSBvdXRwdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJCQl0
cnkgew0KCQkJCW91dHB1dCA9IFNlcnZpY2UuZG9JbnZva2UoInB1Yi5qc29uIiwgImRvY3VtZW50
VG9KU09OU3RyaW5nIiwgaW5wdXQpOw0KCQkJCUlEYXRhQ3Vyc29yIG91dHB1dEN1cnNvciA9IG91
dHB1dC5nZXRDdXJzb3IoKTsNCgkJCQlqc29uU3RyaW5nID0gSURhdGFVdGlsLmdldFN0cmluZyhv
dXRwdXRDdXJzb3IsICJqc29uU3RyaW5nIik7DQoJCQkJb3V0cHV0Q3Vyc29yLmRlc3Ryb3koKTsN
CgkJCX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7DQoJCQkJLy8gSXQgaXMgcG9zc2libGUsIHRoYXQg
dGhpcyBzZXJ2aWNlIGRvZXMgbm90IGV4aXN0cyAoV004LjIgZW52aXJvbm1lbnRzL3N0b3Jlcyku
DQoJCQkJLy8gVHJ5IGFnYWluIHdpdGggU2VydmljZSBmcm9tIFdtSlNPTiBwYWNrYWdlOg0KCQkJ
CS8vIFRoaXMgYmxvY2sgY2FuIGJlIGRlbGV0ZWQsIGlmIGV2ZXJ5IGVudmlyb25tZW50IGlzIG9u
IFdNOS4wIQ0KCQkJCXRyeSB7DQoJCQkJCW91dHB1dCA9IFNlcnZpY2UuZG9JbnZva2UoInB1Yi5q
c29uIiwgImRvY3VtZW50VG9KU09OIiwgaW5wdXQpOw0KCQkJCQlJRGF0YUN1cnNvciBvdXRwdXRD
dXJzb3IgPSBvdXRwdXQuZ2V0Q3Vyc29yKCk7DQoJCQkJCWpzb25TdHJpbmcgPSBJRGF0YVV0aWwu
Z2V0U3RyaW5nKG91dHB1dEN1cnNvciwgImpzb24iKTsNCgkJCQkJb3V0cHV0Q3Vyc29yLmRlc3Ry
b3koKTsNCgkJCQl9IGNhdGNoIChFeGNlcHRpb24gaW5uZXJFeCkgew0KCQkJCX0NCgkJCX0NCgkJ
fQ0KCQkNCgkJcmV0dXJuIGpzb25TdHJpbmc7DQoJfQ0KCQ0KCXByaXZhdGUgc3RhdGljIEhhc2hN
YXA8U3RyaW5nLCBTdHJpbmc+IGNyZWF0ZUdlbmVyaWNWYWx1ZU1hcChFeGNlcHRpb25IYW5kbGlu
Z0luZm8gaGFuZGxpbmcsIGJvb2xlYW4gYnJlYWtSZXRyeUxvb3ApIHsNCgkJSGFzaE1hcDxTdHJp
bmcsIFN0cmluZz4gZ2VuZXJpY1ZhbHVlTWFwID0gbmV3IEhhc2hNYXA8U3RyaW5nLCBTdHJpbmc+
KCk7DQoNCgkJLy8gZXZhbHVhdGUgZXJyb3JUb0JlVGhyb3duOg0KCQlTdHJpbmcgZXJyb3JUb0Jl
VGhyb3duID0gaGFuZGxpbmcuZ2V0RXJyb3JUb0JlVGhyb3duKCk7DQoJCQ0KCQlpbnQgcmV0cnlD
b3VudCA9IGdldFJldHJ5Q291bnQoKTsNCgkJZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklC
VVRFX1JFVFJZX0NPVU5ULCBTdHJpbmcudmFsdWVPZihyZXRyeUNvdW50KSk7DQoNCgkJU3RyaW5n
IG1heFJldHJ5QXR0ZW1wdHNTdHJpbmcgPSBoYW5kbGluZy5nZXRNYXhSZXRyeUF0dGVtcHRzKCk7
DQoJCUludGVnZXIgbWF4UmV0cnlBdHRlbXB0cyA9IG51bGw7DQoJCXRyeSB7DQoJCQltYXhSZXRy
eUF0dGVtcHRzID0gSW50ZWdlci52YWx1ZU9mKG1heFJldHJ5QXR0ZW1wdHNTdHJpbmcpOw0KCQl9
IGNhdGNoIChOdW1iZXJGb3JtYXRFeGNlcHRpb24gbmZlKSB7DQoJCX0JCQkJCQkNCgkJDQoJCWlu
dCBtYXhSZXRyeUF0dGVtcHRzRGVmYXVsdCA9IDA7DQoJCVN0cmluZyBtYXhSZXRyeUF0dGVtcHRz
RGVmYXVsdFN0cmluZyA9IGdldFZhbHVlQ29uZigNCgkJCQlNQVhfUkVUUllfQVRURU1QVFNfREVG
QVVMVCwgUEFDS0FHRV9MQ0xfRVJST1IsICJ0cnVlIiwNCgkJCQkiIiwgIiIsICIiLCAiIik7CQkN
CgkJdHJ5IHsNCgkJCW1heFJldHJ5QXR0ZW1wdHNEZWZhdWx0ID0gSW50ZWdlci52YWx1ZU9mKG1h
eFJldHJ5QXR0ZW1wdHNEZWZhdWx0U3RyaW5nKTsNCgkJfSBjYXRjaCAoTnVtYmVyRm9ybWF0RXhj
ZXB0aW9uIG5mZSkge30NCg0KCQlpbnQgbWF4UmV0cnlBdHRlbXB0c0JlZm9yZUFib3J0ID0gMDsN
CgkJU3RyaW5nIG1heFJldHJ5QXR0ZW1wdHNCZWZvcmVDYW5jZWxSZXRyeVN0cmluZyA9IGdldFZh
bHVlQ29uZigNCgkJCQlNQVhfUkVUUllfQVRURU1QVFNfQkVGT1JFX0NBTkNFTF9SRVRSWSwgUEFD
S0FHRV9MQ0xfRVJST1IsICJ0cnVlIiwNCgkJCQkiIiwgIiIsICIiLCAiIik7CQkNCgkJdHJ5IHsN
CgkJCW1heFJldHJ5QXR0ZW1wdHNCZWZvcmVBYm9ydCA9IEludGVnZXIudmFsdWVPZihtYXhSZXRy
eUF0dGVtcHRzQmVmb3JlQ2FuY2VsUmV0cnlTdHJpbmcpOw0KCQl9IGNhdGNoIChOdW1iZXJGb3Jt
YXRFeGNlcHRpb24gbmZlKSB7fQ0KDQoJCS8vIERldGVybWluZSBlcnJvclRvQmVUaHJvd24gYW5k
IG1heFJldHJ5QXR0ZW1wdHMgYWNjb3JkaW5nIHRvIHJldHJ5IGNvbmZpZ3VyYXRpb246DQoJCWlm
IChicmVha1JldHJ5TG9vcCkgew0KCQkJZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRF
X1JFVFVSTl9WQUxVRV9JRCwgQ09OVElOVUUuZXF1YWxzKGVycm9yVG9CZVRocm93bik/Q09OVElO
VUU6QUJPUlQpOw0KCQkJZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX01BWF9SRVRS
WV9BVFRFTVBUUywgU3RyaW5nLnZhbHVlT2YocmV0cnlDb3VudCkpOw0KCQl9IGVsc2UgaWYgKG1h
eFJldHJ5QXR0ZW1wdHMgIT0gbnVsbCAmJiBtYXhSZXRyeUF0dGVtcHRzID09IC0xICYmIHJldHJ5
Q291bnQgPCBtYXhSZXRyeUF0dGVtcHRzQmVmb3JlQWJvcnQpIHsNCgkJCWdlbmVyaWNWYWx1ZU1h
cC5wdXQoRUhEX0FUVFJJQlVURV9SRVRVUk5fVkFMVUVfSUQsIFJFVFJZKTsNCgkJCWdlbmVyaWNW
YWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9NQVhfUkVUUllfQVRURU1QVFMsIG1heFJldHJ5QXR0
ZW1wdHNCZWZvcmVDYW5jZWxSZXRyeVN0cmluZyk7DQoJCX0gZWxzZSB7DQoJCQlpZiAobWF4UmV0
cnlBdHRlbXB0cyAhPSBudWxsICYmIHJldHJ5Q291bnQgPCBtYXhSZXRyeUF0dGVtcHRzKSB7DQoJ
CQkJZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX1JFVFVSTl9WQUxVRV9JRCwgUkVU
UlkpOw0KCQkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9NQVhfUkVUUllfQVRU
RU1QVFMsIG1heFJldHJ5QXR0ZW1wdHNTdHJpbmcpOw0KCQkJfSBlbHNlIHsNCgkJCQkgaWYgKFJF
VFJZLmVxdWFscyhlcnJvclRvQmVUaHJvd24pICYmIG1heFJldHJ5QXR0ZW1wdHMgPT0gbnVsbCAm
JiByZXRyeUNvdW50IDwgbWF4UmV0cnlBdHRlbXB0c0RlZmF1bHQpIHsNCgkJCQkJIGdlbmVyaWNW
YWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9SRVRVUk5fVkFMVUVfSUQsIFJFVFJZKTsNCgkJCQkJ
IGdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9NQVhfUkVUUllfQVRURU1QVFMsIG1h
eFJldHJ5QXR0ZW1wdHNEZWZhdWx0U3RyaW5nKTsNCgkJCQkgfSBlbHNlIHsNCgkJCQkJIGlmIChD
T05USU5VRS5lcXVhbHMoZXJyb3JUb0JlVGhyb3duKSkgew0KCQkJCQkJIGdlbmVyaWNWYWx1ZU1h
cC5wdXQoRUhEX0FUVFJJQlVURV9SRVRVUk5fVkFMVUVfSUQsIENPTlRJTlVFKTsNCgkJCQkJIH0g
ZWxzZSB7DQoJCQkJCQkgLy8gRmluYWwgYmVoYXZpb3IgZm9yIGFib3J0IGFuZCByZXRyeTogYWJv
cnQNCgkJCQkJCSBnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVfUkVUVVJOX1ZBTFVF
X0lELCBBQk9SVCk7DQoJCQkJCSB9DQoJCQkJCSAvLyBtYXhSZXRyeUF0dGVtcHRzIGlzIHJlYWNo
ZWQgb3Igd2FzIG5vdCBkZWZpbmVkICgtPiAwKQ0KCQkJCQkgU3RyaW5nIG1heFJldHJ5QXR0ZW1w
dHNSZXN1bHQgPSBtYXhSZXRyeUF0dGVtcHRzICE9IG51bGwgPyBtYXhSZXRyeUF0dGVtcHRzU3Ry
aW5nIDogIjAiOw0KCQkJCQkgZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX01BWF9S
RVRSWV9BVFRFTVBUUywgbWF4UmV0cnlBdHRlbXB0c1Jlc3VsdCk7DQoJCQkJIH0NCgkJCX0NCgkJ
fQ0KCQlyZXR1cm4gZ2VuZXJpY1ZhbHVlTWFwOw0KCX0NCgkNCgkvKioNCgkgKiBGaWx0ZXJzIHRo
ZSBlcnJvciBoaWVyYXJjaHkgZm9yIHRoZSBkZWVwZXN0IHNlcnZpY2UgLS0+IHNob3dzDQoJICog
aW4gd2hpY2ggc2VydmljZSBvZiBvdXIgY29kZSB0aGUgZXJyb3Igb2NjdXJlZA0KCSAqIA0KCSAq
IEBwYXJhbSBoaWVyYWNoaWNhbEVycm9ySW5mbw0KCSAqIEByZXR1cm4gdGhlIGxldmVsIG9mIHRo
ZSBkZWVwZXN0IHNlcnZpY2UgbmFtZQ0KCSAqLw0KCXByaXZhdGUgc3RhdGljIGludCBnZXREZWVw
ZXN0QXBwbGljYXRpb25TZXJ2aWNlTGV2ZWwoQXJyYXlMaXN0PEVycm9ySW5mbz4gaGllcmFjaGlj
YWxFcnJvckluZm8pIHsNCgkJU3RyaW5nIHNlcnZpY2UgPSBudWxsOw0KCQlmb3IgKGludCBsZXZl
bCA9IGhpZXJhY2hpY2FsRXJyb3JJbmZvLnNpemUoKSAtIDE7IGxldmVsID4gMDsgbGV2ZWwtLSkg
ew0KCQkJc2VydmljZSA9IGhpZXJhY2hpY2FsRXJyb3JJbmZvLmdldChsZXZlbCkuZ2V0U2Vydmlj
ZSgpOw0KCQkJLy8gY3JlYXRlIG9mIExpc3Qgb2YgRmxvd25hbWVzIHRvIGlnbm9yZQ0KCQkJTGlz
dDxTdHJpbmc+IGlnbm9yZUZsb3dzID0gQXJyYXlzLmFzTGlzdCgid3gucmVzaWxpZW5jZS5wdWIu
cmVzaWxpZW5jZTp0aHJvd0Vycm9yIiwNCgkJCQkJIAkJCQkJCQkJInd4LnJlc2lsaWVuY2UucHVi
LnJlc2lsaWVuY2U6dGhyb3dFcnJvcklmTmVjZXNzYXJ5IiwgDQoJCQkJCQkJCQkJCQkJICJ3eC5y
ZXNpbGllbmNlLnB1Yi5yZXNpbGllbmNlOnBvc3RQcm9jZXNzRm9yVG9wTGV2ZWxTZXJ2aWNlIik7
DQoJCQkNCgkJCQ0KCQkJDQoJCQkNCgkJCQ0KCQkJaWYgKHNlcnZpY2UgIT0gbnVsbCAmJiANCgkJ
CQkhc2VydmljZS5zdGFydHNXaXRoKCJwdWIuIikgJiYNCgkJCQkhc2VydmljZS5zdGFydHNXaXRo
KCJ3bS4iKSAmJiANCgkJCQkhaWdub3JlRmxvd3MuY29udGFpbnMoc2VydmljZSkNCgkJCSkgew0K
CQkJCXJldHVybiBsZXZlbDsNCgkJCX0NCgkJfQ0KDQoJCXJldHVybiAwOw0KCX0NCg0KCQ0KCS8q
Kg0KCSAqIExvZ3MgbWVzc2FnZSBmcm9tIGEgY2F0YWxvZy4NCgkgKiANCgkgKiBAcGFyYW0gYUZh
Y2lsaXR5S2V5DQoJICogICAgICAgICAgICBkZWZpbmVzIHRoZSBmYWNpbGl0eSBpbiB0aGUgY2F0
YWxvZw0KCSAqIEBwYXJhbSBhTWVzc2FnZUtleQ0KCSAqICAgICAgICAgICAgY29ycmVzcG9uZHMg
d2l0aCB0aGUgbWVzc2FnZSBrZXkgaW4gdGhlIGNhdGFsb2cNCgkgKiBAcGFyYW0gYU1lc3NhZ2VQ
YXJhbXMNCgkgKiAgICAgICAgICAgIGlmIG1lc3NhZ2UgaW4gdGhlIGNhdGFsb2cgaGFzIHBhcmFt
ZXRlcnMNCgkgKiBAdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24NCgkgKiAgICAgICAgICAgICB0aHJv
d24gaWYgdGhlIGxvZ2dpbmcgZmFpbGVkDQoJICovDQoJLypwcml2YXRlIHN0YXRpYyB2b2lkIGxv
Z01lc3NhZ2VGcm9tQ2F0YWxvZyhTdHJpbmcgYUZhY2lsaXR5S2V5LCBTdHJpbmcgYU1lc3NhZ2VL
ZXksIFN0cmluZ1tdIGFNZXNzYWdlUGFyYW1zKSB7DQoJCS8vIGlucHV0DQoJCUlEYXRhIHRJbnB1
dCA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsNCgkJSURhdGFDdXJzb3IgaW5wdXRDdXJzb3IgPSB0
SW5wdXQuZ2V0Q3Vyc29yKCk7DQoJCUlEYXRhVXRpbC5wdXQoaW5wdXRDdXJzb3IsICJmYWNpbGl0
eUtleSIsIGFGYWNpbGl0eUtleSk7DQoJCUlEYXRhVXRpbC5wdXQoaW5wdXRDdXJzb3IsICJtZXNz
YWdlS2V5IiwgYU1lc3NhZ2VLZXkpOw0KCQ0KCQkvLyBUaGVyZSBhcmUgc29tZSBtZXNzYWdlIHBh
cmFtcyBwcm92aWRlZA0KCQlpZiAoYU1lc3NhZ2VQYXJhbXMubGVuZ3RoID4gMCkgew0KCQkJSURh
dGFVdGlsLnB1dChpbnB1dEN1cnNvciwgIm1lc3NhZ2VQYXJhbXMiLCBhTWVzc2FnZVBhcmFtcyk7
DQoJCX0NCgkJaW5wdXRDdXJzb3IuZGVzdHJveSgpOw0KCQ0KCQl0cnkgew0KCQkJU2VydmljZS5k
b0ludm9rZSgid3gucmVzaWxpZW5jZS5pbXBsOiIsICJsb2dNZXNzYWdlRnJvbUNhdGFsb2ciLCB0
SW5wdXQpOw0KCQl9IA0KCQljYXRjaCAoRXhjZXB0aW9uIGUpIHsNCgkJfQ0KCX0qLw0KDQoJDQoJ
cHJpdmF0ZSBzdGF0aWMgdm9pZCB2YWxpZGF0ZVhNTCgpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9u
IHsNCgkJTG9nLmxvZ0luZm8oIlZhbGlkYXRpbmcgdGhlIHN1bW1hcml6ZWQgZXJyb3IgaGFuZGxp
bmciKTsNCgkJRmlsZSB4bWxGaWxlID0gbmV3IEZpbGUoU2VydmVyQVBJLmdldFBhY2thZ2VDb25m
aWdEaXIoV1hfUkVTSUxJRU5DRSkgKyAiLyIgKyBTVU1NQVJJWkVEX0VYQ0VQVElPTl9IQU5ETElO
R19GSUxFKTsNCgkJRmlsZSBzY2hlbWFGaWxlID0gbmV3IEZpbGUoU2VydmVyQVBJLmdldFBhY2th
Z2VDb25maWdEaXIoV1hfUkVTSUxJRU5DRSkgKyAiLyIgKyBFWENFUFRJT05fSEFORExJTkdfWFNE
X0ZJTEUpOw0KCQkNCgkJdHJ5IHsNCgkJCS8vIDEuIExvb2t1cCBhIGZhY3RvcnkgZm9yIHRoZSBX
M0MgWE1MIFNjaGVtYSBsYW5ndWFnZQ0KCQkJU2NoZW1hRmFjdG9yeSBmYWN0b3J5ID0gU2NoZW1h
RmFjdG9yeS5uZXdJbnN0YW5jZSgiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiKTsN
CgkJCS8vIDIuIENvbXBpbGUgdGhlIHNjaGVtYS4NCgkJCS8vIEhlcmUgdGhlIHNjaGVtYSBpcyBs
b2FkZWQgZnJvbSBhIGphdmEuaW8uRmlsZSwgYnV0IHlvdSBjb3VsZCB1c2UNCgkJCS8vIGEgamF2
YS5uZXQuVVJMIG9yIGEgamF2YXgueG1sLnRyYW5zZm9ybS5Tb3VyY2UgaW5zdGVhZC4NCgkJCVNj
aGVtYSBzY2hlbWEgPSBmYWN0b3J5Lm5ld1NjaGVtYShzY2hlbWFGaWxlKTsJDQoJCQkvLyAzLiBH
ZXQgYSB2YWxpZGF0b3IgZnJvbSB0aGUgc2NoZW1hLg0KCQkJVmFsaWRhdG9yIHZhbGlkYXRvciA9
IHNjaGVtYS5uZXdWYWxpZGF0b3IoKTsJDQoJCQkvLyA0LiBQYXJzZSB0aGUgZG9jdW1lbnQgeW91
IHdhbnQgdG8gY2hlY2suDQoJCQlTb3VyY2Ugc291cmNlID0gbmV3IFN0cmVhbVNvdXJjZSh4bWxG
aWxlKTsJDQoJCQkvLyA1LiBDaGVjayB0aGUgZG9jdW1lbnQNCgkJCXZhbGlkYXRvci52YWxpZGF0
ZShzb3VyY2UpOw0KCQkJTG9nLmxvZ0luZm8oeG1sRmlsZS5nZXROYW1lKCkgKyAiIGlzIHZhbGlk
Iik7DQoJCX0gDQoJCWNhdGNoIChTQVhFeGNlcHRpb258SU9FeGNlcHRpb24gZXgpIHsNCgkJCVN0
cmluZyBtZXNzYWdlID0geG1sRmlsZS5nZXROYW1lKCkgKyAiIGlzIG5vdCB2YWxpZCBiZWNhdXNl
IFxuIiArIGV4LmdldE1lc3NhZ2UoKTsNCgkJCWZpbmFsIFNlcnZpY2VFeGNlcHRpb24gc2UgPSBu
ZXcgU2VydmljZUV4Y2VwdGlvbihtZXNzYWdlKTsNCgkJCXNlLmluaXRDYXVzZShleCk7DQoJCQl0
aHJvdyBzZTsNCgkJfQkNCgl9DQoNCglwcml2YXRlIHN0YXRpYyBTdHJpbmcgZ2V0VmFsdWVDb25m
KFN0cmluZyBrZXksIFN0cmluZyB3eENvbmZpZ1BrZ05hbWUsDQoJCQlTdHJpbmcgbm9TZXJ2aWNl
RXhjZXB0aW9uLCBTdHJpbmcgc3Vic3RpdHV0ZVZhcmlhYmxlcywNCgkJCVN0cmluZyBpZ25vcmVH
bG9iYWxWYWx1ZXMsIFN0cmluZyBzY2FuQWxsQ29uZmlndXJhdGlvbnMsDQoJCQlTdHJpbmcgbm9W
YXJpYWJsZUludGVycG9sYXRpb24pIHsNCgkJU3RyaW5nIHByb3BlcnR5VmFsdWUgPSAiICI7DQoJ
CS8vIGlucHV0DQoJCUlEYXRhIGNvbmZpZ1BhcmFtID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOw0K
CQlJRGF0YUN1cnNvciBjb25maWdQYXJhbUN1cnNvciA9IGNvbmZpZ1BhcmFtLmdldEN1cnNvcigp
Ow0KCQlJRGF0YVV0aWwucHV0KGNvbmZpZ1BhcmFtQ3Vyc29yLCAia2V5Iiwga2V5KTsNCgkJSURh
dGFVdGlsLnB1dChjb25maWdQYXJhbUN1cnNvciwgInd4Q29uZmlnUGtnTmFtZSIsIHd4Q29uZmln
UGtnTmFtZSk7DQoJCUlEYXRhVXRpbC5wdXQoY29uZmlnUGFyYW1DdXJzb3IsICJub1NlcnZpY2VF
eGNlcHRpb24iLA0KCQkJCW5vU2VydmljZUV4Y2VwdGlvbik7DQoJCWNvbmZpZ1BhcmFtQ3Vyc29y
LmRlc3Ryb3koKTsNCgkNCgkJLy8gb3V0cHV0DQoJCUlEYXRhIGNvbmZpZ091dHB1dCA9IElEYXRh
RmFjdG9yeS5jcmVhdGUoKTsNCgkJdHJ5IHsNCgkJCWNvbmZpZ091dHB1dCA9IFNlcnZpY2UuZG9J
bnZva2UoInd4LmNvbmZpZy5wdWIiLCAiZ2V0VmFsdWUiLA0KCQkJCQljb25maWdQYXJhbSk7DQoJ
CX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7DQoJCQlyZXR1cm4gcHJvcGVydHlWYWx1ZTsNCgkJfQ0K
CQlJRGF0YUN1cnNvciBjb25maWdPdXRwdXRDdXJzb3IgPSBjb25maWdPdXRwdXQuZ2V0Q3Vyc29y
KCk7DQoJCXByb3BlcnR5VmFsdWUgPSBJRGF0YVV0aWwNCgkJCQkuZ2V0U3RyaW5nKGNvbmZpZ091
dHB1dEN1cnNvciwgInByb3BlcnR5VmFsdWUiKTsNCgkJY29uZmlnT3V0cHV0Q3Vyc29yLmRlc3Ry
b3koKTsNCgkJTG9nLmxvZ0RlYnVnKCJnZXRWYWx1ZUNvbmYgZm9yICIgKyBrZXkgKyAiIHJldHVy
bnM6ICIgKyBwcm9wZXJ0eVZhbHVlKTsNCgkJcmV0dXJuIHByb3BlcnR5VmFsdWU7DQoJfQ0KCQ0K
CXByaXZhdGUgc3RhdGljIGludCBnZXRSZXRyeUNvdW50KCkgew0KCQlJRGF0YSBpbnB1dCA9IG51
bGw7DQoJCS8vIG91dHB1dA0KCQlJRGF0YSBvdXRwdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7
DQoJCXRyeSB7DQoJCQlvdXRwdXQgPSBTZXJ2aWNlLmRvSW52b2tlKCJwdWIuZmxvdyIsICJnZXRS
ZXRyeUNvdW50IiwgaW5wdXQpOw0KCQkJSURhdGFDdXJzb3Igb3V0cHV0Q3Vyc29yID0gb3V0cHV0
LmdldEN1cnNvcigpOw0KCQkJcmV0dXJuIEludGVnZXIucGFyc2VJbnQoSURhdGFVdGlsLmdldFN0
cmluZyhvdXRwdXRDdXJzb3IsICJyZXRyeUNvdW50IikpOw0KCQl9IGNhdGNoIChFeGNlcHRpb24g
ZSkgew0KCQkJcmV0dXJuIDA7DQoJCX0NCgl9DQoJDQoJLyoqDQoJICogRXh0cmFjdHMgYW4gZXJy
b3IgaGllcmFyY2h5IGZvciBhIGdpdmVuIGVycm9yIGhpZXJhcmNoeSAobm9ybWFsbHkgb25seQ0K
CSAqIGZpbGxlZCBieSBvbmUgKHJvb3QpIGVycm9yKS4gVXNlcyB0aGUgY2FsbFN0YWNrIGFuZCB0
aGUgZGVlcGVzdCBlcnJvckluZm8gdG8gYnVpbGQgaGllYXJjaHkuDQoJICogDQoJICogQHBhcmFt
IHBFcnJvckhpZXJhcmNoeQ0KCSAqICAgICAgICAgICAgLSBhcnJheSBsaXN0IG9mIElEYXRhQ3Vy
c29ycyBvbiBwdWIuZXZlbnQ6ZXhjZXB0aW9uSW5mbw0KCSAqIEByZXR1cm4gZnVsbCBhcnJheSBs
aXN0IGFycmF5IGxpc3Qgb2YgRXJyb3JJbmZvIG9uDQoJICogICAgICAgICBwdWIuZXZlbnQ6ZXhj
ZXB0aW9uSW5mbywgY29udGFpbmluZyBhbGwgZXJyb3JzIGZyb20gcm9vdCgwKSB0bw0KCSAqICAg
ICAgICAgb3JpZ2luIChzaXplIG9mIGFycmF5IGxpc3QpDQoJICovDQoJcHJpdmF0ZSBzdGF0aWMg
QXJyYXlMaXN0PEVycm9ySW5mbz4gZXh0cmFjdEVycm9ySGllcmFyY2h5KEFycmF5TGlzdDxJRGF0
YUN1cnNvcj4gcEVycm9ySGllcmFyY2h5KSB7CQ0KCQlpZiAocEVycm9ySGllcmFyY2h5ID09IG51
bGwpIHsNCgkJCXJldHVybiBudWxsOw0KCQl9DQoJCQ0KCQlJRGF0YUN1cnNvciBkZWVwZXN0TmVz
dGVkRXJyb3IgPSBnZXREZWVwZXN0TmVzdGVkRXJyb3IocEVycm9ySGllcmFyY2h5KTsNCgkJDQoJ
CS8vIGdldCBjYWxsU3RhY2sgb2YgZXJyb3I6DQoJCUlEYXRhW10gY2FsbFN0YWNrID0gSURhdGFV
dGlsLmdldElEYXRhQXJyYXkocEVycm9ySGllcmFyY2h5LmdldCgwKSwgImNhbGxTdGFjayIpOw0K
CQlBcnJheUxpc3Q8RXJyb3JJbmZvPiBlcnJvckluZm9MaXN0ID0gbnVsbDsNCgkJDQoJCWlmIChj
YWxsU3RhY2sgIT0gbnVsbCkgew0KCQkJZXJyb3JJbmZvTGlzdCA9IG5ldyBBcnJheUxpc3Q8RXJy
b3JJbmZvPihjYWxsU3RhY2subGVuZ3RoKTsNCgkJCQ0KCQkJLy8gdXNlIHRoZSBlcnJvciBhbmQg
ZXJyb3JUeXBlIG9mIHRoZSBkZWVwZXN0IGVycm9ySW5mbyB0byBkZXRlcm1pbmUgdGhlIGVycm9y
IGFuZCBlcnJvclR5cGUgb2YgZWFjaCBsZXZlbDoNCgkJCVN0cmluZyBuZXN0ZWRFcnJvclR5cGUg
PSBJRGF0YVV0aWwuZ2V0U3RyaW5nKGRlZXBlc3ROZXN0ZWRFcnJvciwgRVJST1JfSU5GT19FUlJP
Ul9UWVBFKTsNCgkJCVN0cmluZyBuZXN0ZWRFcnJvciA9IElEYXRhVXRpbC5nZXRTdHJpbmcoZGVl
cGVzdE5lc3RlZEVycm9yLCBFUlJPUl9JTkZPX0VSUk9SKTsNCg0KCQkJLy8gdGhlIGNhbGxzdGFj
ayBpcyBvcmRlcmVkIGludmVyc2UhDQoJCQlmb3IgKGludCBpID0gY2FsbFN0YWNrLmxlbmd0aCAt
IDEgOyBpID49IDA7IGktLSkgew0KCQkJCS8vIHVzZSB0aGUgc2VydmljZSBuYW1lcyBvZiB0aGUg
Y2FsbHN0YWNrOg0KCQkJCUlEYXRhQ3Vyc29yIGNhbGxTdGFja0N1cnNvciA9IGNhbGxTdGFja1tp
XS5nZXRDdXJzb3IoKTsNCgkJCQlTdHJpbmcgc2VydmljZSA9IElEYXRhVXRpbC5nZXRTdHJpbmco
Y2FsbFN0YWNrQ3Vyc29yLCBFUlJPUl9JTkZPX0NBTExfU1RBQ0tfU0VSVklDRSk7DQoJCQkJU3Ry
aW5nIGZsb3dTdGVwID0gSURhdGFVdGlsLmdldFN0cmluZyhjYWxsU3RhY2tDdXJzb3IsIEVSUk9S
X0lORk9fQ0FMTF9TVEFDS19GTE9XX1NURVApOw0KCQkJCWlmIChmbG93U3RlcCA9PSBudWxsIHx8
IGZsb3dTdGVwLmVxdWFscygiIikpIHsNCgkJCQkJZmxvd1N0ZXAgPSAibi5hLiI7DQoJCQkJfQ0K
CQkJCQ0KCQkJCWVycm9ySW5mb0xpc3QuYWRkKG5ldyBFcnJvckluZm8obmVzdGVkRXJyb3IsIG5l
c3RlZEVycm9yVHlwZSwgc2VydmljZSwgZmxvd1N0ZXApKTsNCgkJCX0NCgkJfQ0KCQlyZXR1cm4g
ZXJyb3JJbmZvTGlzdDsNCgl9DQoJDQoJLyoqDQoJICogR2V0cyB0aGUgZGVlcGVzdCBlcnJvciBp
biB0aGUgZXJyb3IgaGllcmFyY2h5DQoJICogDQoJICogQHBhcmFtIHBFcnJvckhpZXJhcmNoeQ0K
CSAqICAgICAgICAgICAgLSBhcnJheSBsaXN0IG9mIElEYXRhQ3Vyc29ycyBvbiBwdWIuZXZlbnQ6
ZXhjZXB0aW9uSW5mbw0KCSAqIEByZXR1cm4gY3Vyc29yIG9mIHRoZSBkZWVwZXN0IGVycm9yDQoJ
ICovDQoJcHJpdmF0ZSBzdGF0aWMgSURhdGFDdXJzb3IgZ2V0RGVlcGVzdE5lc3RlZEVycm9yKEFy
cmF5TGlzdDxJRGF0YUN1cnNvcj4gcEVycm9ySGllcmFyY2h5KSB7CQkNCgkJDQoJCUlEYXRhQ3Vy
c29yIG5lc3RlZEVycm9yID0gcEVycm9ySGllcmFyY2h5LmdldCgwKTsNCgkJSURhdGFDdXJzb3Ig
Y3VycmVudEVycm9yID0gbnVsbDsNCgkJSURhdGEgbmVzdGVkRXJyb3JJRGF0YSA9IG51bGw7DQoJ
CWRvIHsNCgkJCWN1cnJlbnRFcnJvciA9IG5lc3RlZEVycm9yOw0KCQkJbmVzdGVkRXJyb3JJRGF0
YSA9IElEYXRhVXRpbC5nZXRJRGF0YShjdXJyZW50RXJyb3IsIEVSUk9SX0lORk9fTkVTVEVEX0VS
Uk9SX0lEKTsNCgkJCWlmIChuZXN0ZWRFcnJvcklEYXRhICE9IG51bGwpIHsNCgkJCQluZXN0ZWRF
cnJvciA9IG5lc3RlZEVycm9ySURhdGEuZ2V0Q3Vyc29yKCk7DQoJCQl9IGVsc2Ugew0KCQkJCW5l
c3RlZEVycm9yID0gbnVsbDsNCgkJCX0NCgkJfSB3aGlsZSAobmVzdGVkRXJyb3IgIT0gbnVsbCk7
DQoNCgkJcmV0dXJuIGN1cnJlbnRFcnJvcjsNCg0KCX0JDQoNCgkvKnB1YmxpYyBzdGF0aWMgY2xh
c3MgTG9nIHsNCgkJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTG9nIElOU1RBTkNFID0gbmV3IExvZygp
Ow0KCQlwcml2YXRlIHN0YXRpYyBmaW5hbCBib29sZWFuIGxvZ2dpbmcgPSBmYWxzZTsNCg0KCQlw
dWJsaWMgc3RhdGljIHZvaWQgaW5pdCgpIHsNCgkJCWlmIChsb2dnaW5nKSB7DQoJCQkJSU5TVEFO
Q0UuaW5pdFdyaXRlcigpOw0KCQkJfQ0KCQl9DQoJCXB1YmxpYyBzdGF0aWMgdm9pZCB3cml0ZShT
dHJpbmcgcE1lc3NhZ2UpIHsNCgkJCWlmIChsb2dnaW5nKSB7DQoJCQkJSU5TVEFOQ0UubG9nKHBN
ZXNzYWdlKTsNCgkJCX0NCgkJfQ0KCQlwdWJsaWMgc3RhdGljIHZvaWQgY2xvc2UoKSB7DQoJCQlp
ZiAobG9nZ2luZykgew0KCQkJCUlOU1RBTkNFLmNsb3NlV3JpdGVyKCk7DQoJCQl9DQoJCX0NCgkJ
cHVibGljIHN0YXRpYyBib29sZWFuIGlzTG9nZ2luZygpIHsNCgkJCXJldHVybiBsb2dnaW5nOw0K
CQl9DQoNCgkJcHJpdmF0ZSBib29sZWFuIGluaXRpYWxpemVkOw0KCQlwcml2YXRlIHZvaWQgaW5p
dFdyaXRlcigpIHsNCgkJCWluaXRpYWxpemVkID0gdHJ1ZTsNCgkJfQ0KCQlwcml2YXRlIHZvaWQg
Y2xvc2VXcml0ZXIoKSB7DQoJCQlpbml0aWFsaXplZCA9IGZhbHNlOw0KCQl9DQoJCXByaXZhdGUg
dm9pZCBsb2coU3RyaW5nIHBNZXNzYWdlKSB7DQoJCQlpZiAoaW5pdGlhbGl6ZWQpIHsNCgkJCQkv
LyBUT0RPOg0KCQkJCS8vTG9nLmxvZ1RyYWNlTWVzc2FnZSgiRUhGIiwgcE1lc3NhZ2UpOw0KCQkJ
fQ0KCQl9DQoJfSovDQoJcHVibGljIHN0YXRpYyBjbGFzcyBFcnJvckhhbmRsaW5nRXhjZXB0aW9u
IGV4dGVuZHMgUnVudGltZUV4Y2VwdGlvbiB7DQoJCXByaXZhdGUgc3RhdGljIGZpbmFsIGxvbmcg
c2VyaWFsVmVyc2lvblVJRCA9IC0zOTUwMTAwNzQxNjM2NDc5NjgxTDsNCg0KCQlwdWJsaWMgRXJy
b3JIYW5kbGluZ0V4Y2VwdGlvbihTdHJpbmcgcE1zZywgVGhyb3dhYmxlIHBDYXVzZSkgew0KCQkJ
c3VwZXIocE1zZywgcENhdXNlKTsNCgkJfQ0KDQoJCXB1YmxpYyBFcnJvckhhbmRsaW5nRXhjZXB0
aW9uKFN0cmluZyBwTXNnKSB7DQoJCQlzdXBlcihwTXNnKTsNCgkJfQ0KDQoJCXB1YmxpYyBFcnJv
ckhhbmRsaW5nRXhjZXB0aW9uKFRocm93YWJsZSBwQ2F1c2UpIHsNCgkJCXN1cGVyKHBDYXVzZSk7
DQoJCX0NCgl9DQoNCglwdWJsaWMgc3RhdGljIGNsYXNzIEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyB7
DQoJCS8vIE9sZCByZXByZXNlbnRhdGlvbiBvZiBFeGNlcHRpb25IYW5kbGluZ0luZm8gKGRlcHJl
Y2F0ZWQpDQoJCXByaXZhdGUgZmluYWwgTGlzdDxTdHJpbmc+IHNlcnZpY2VOYW1lcyA9IG5ldyBB
cnJheUxpc3Q8PigpOw0KCQlwcml2YXRlIGZpbmFsIFN0cmluZyAgZXJyb3JUb0JlVGhyb3duLCB0
eXBlLCBlcnJvckNvZGUsIGV4Y2VwdGlvblR5cGUsIG1heFJldHJ5QXR0ZW1wdHM7DQoJCXByaXZh
dGUgZmluYWwgYm9vbGVhbiBwcmludEJ1c2luZXNzT2JqZWN0Ow0KCQlwdWJsaWMgRXhjZXB0aW9u
SGFuZGxpbmdJbmZvKFN0cmluZyBwRXJyb3JUb0JlVGhyb3duLCBTdHJpbmcgcFR5cGUsIFN0cmlu
ZyBwRXJyb3JDb2RlLA0KCQkJCSAJCQkJCSBTdHJpbmcgcEV4Y2VwdGlvblR5cGUsIFN0cmluZyBw
TWF4UmV0cnlBdHRlbXB0cywNCgkJCQkgCQkJCQkgYm9vbGVhbiBwUHJpbnRCdXNpbmVzc09iamVj
dCkgew0KCQkJZXJyb3JUb0JlVGhyb3duID0gcEVycm9yVG9CZVRocm93bjsNCgkJCXR5cGUgPSBw
VHlwZTsNCgkJCWVycm9yQ29kZSA9IHBFcnJvckNvZGU7DQoJCQlleGNlcHRpb25UeXBlID0gcEV4
Y2VwdGlvblR5cGU7DQoJCQltYXhSZXRyeUF0dGVtcHRzID0gcE1heFJldHJ5QXR0ZW1wdHM7DQoJ
CQlwcmludEJ1c2luZXNzT2JqZWN0ID0gcFByaW50QnVzaW5lc3NPYmplY3Q7DQoJCX0NCg0KCQlw
dWJsaWMgTGlzdDxTdHJpbmc+IGdldEhhbmRsaW5nU2VydmljZXMoKSB7DQoJCQlyZXR1cm4gc2Vy
dmljZU5hbWVzOw0KCQl9DQoNCgkJcHVibGljIHZvaWQgYWRkU2VydmljZU5hbWUoU3RyaW5nIHBT
ZXJ2aWNlTmFtZSkgew0KCQkJc2VydmljZU5hbWVzLmFkZChwU2VydmljZU5hbWUpOw0KCQl9DQoN
CgkJcHVibGljIFN0cmluZyBnZXRFcnJvclRvQmVUaHJvd24oKSB7DQoJCQlyZXR1cm4gZXJyb3JU
b0JlVGhyb3duOw0KCQl9DQoNCgkJcHVibGljIFN0cmluZyBnZXRUeXBlKCkgew0KCQkJcmV0dXJu
IHR5cGU7DQoJCX0NCg0KCQlwdWJsaWMgU3RyaW5nIGdldEVycm9yQ29kZSgpIHsNCgkJCXJldHVy
biBlcnJvckNvZGU7DQoJCX0NCg0KCQlwdWJsaWMgU3RyaW5nIGdldEV4Y2VwdGlvblR5cGUoKSB7
DQoJCQlyZXR1cm4gZXhjZXB0aW9uVHlwZTsNCgkJfQ0KDQoJCXB1YmxpYyBTdHJpbmcgZ2V0TWF4
UmV0cnlBdHRlbXB0cygpIHsNCgkJCXJldHVybiBtYXhSZXRyeUF0dGVtcHRzOw0KCQl9DQoNCgkJ
cHVibGljIGJvb2xlYW4gaXNQcmludEJ1c2luZXNzT2JqZWN0KCkgew0KCQkJcmV0dXJuIHByaW50
QnVzaW5lc3NPYmplY3Q7DQoJCX0NCg0KCQlAT3ZlcnJpZGUNCgkJcHVibGljIFN0cmluZyB0b1N0
cmluZygpIHsNCgkJCWZpbmFsIFN0cmluZ0J1aWxkZXIgc2IgPSBuZXcgU3RyaW5nQnVpbGRlcigp
Ow0KCQkJc2IuYXBwZW5kKHN1cGVyLnRvU3RyaW5nKCkpOw0KCQkJc2IuYXBwZW5kKCI6IGVycm9y
VG9CZVRocm93bj0gIik7DQoJCQlzYi5hcHBlbmQoZXJyb3JUb0JlVGhyb3duKTsNCgkJCXNiLmFw
cGVuZCgiLCB0eXBlPSIpOw0KCQkJc2IuYXBwZW5kKHR5cGUpOw0KCQkJc2IuYXBwZW5kKCJlcnJv
ckNvZGU9Iik7DQoJCQlzYi5hcHBlbmQoZXJyb3JDb2RlKTsNCgkJCXNiLmFwcGVuZCgiLCBwcm9q
ZWN0PSIpOw0KCQkJc2IuYXBwZW5kKCIsIGV4Y2VwdGlvblR5cGU9Iik7DQoJCQlzYi5hcHBlbmQo
ZXhjZXB0aW9uVHlwZSk7DQoJCQlzYi5hcHBlbmQoIiwgbWF4UmV0cnlBdHRlbXB0cz0iKTsNCgkJ
CXNiLmFwcGVuZChtYXhSZXRyeUF0dGVtcHRzKTsNCgkJCXNiLmFwcGVuZCgiLCBwcmludEJ1c2lu
ZXNzT2JqZWN0PSIpOw0KCQkJc2IuYXBwZW5kKHByaW50QnVzaW5lc3NPYmplY3QpOw0KCQkJc2Iu
YXBwZW5kKCIsIHNlcnZpY2VOYW1lcz0iKTsNCgkJCS8vIFRPRE86DQoJCQkvL3NiLmFwcGVuZChT
dHJpbmdzLmFzU3RyaW5nKHNlcnZpY2VOYW1lcykpOw0KCQkJcmV0dXJuIHNiLnRvU3RyaW5nKCk7
DQoJCX0NCgkJDQoJfQ0KCQ0KCS8qKg0KCSAqIEV4dHJhY3QgaGFuZGxpbmdzIGZvciBhbiBlcnJv
ciBhdCBhIGxvY2F0aW9uIGZyb20gYSBnaXZlbiBleGNlcHRpb24NCgkgKiBoYW5kbGluZyBkZWZp
bml0aW9uDQoJICogDQoJICogQHBhcmFtIHBFcnJvckhhbmRsaW5nDQoJICogICAgICAgICAgICBk
ZWZpbml0aW9uIGFzIERPTSBkb2N1bWVudCB0byB1c2UgZm9yIGV4dHJhY3Rpb24NCgkgKiBAcGFy
YW0gcExvY2F0aW9uWFBhdGgNCgkgKiAgICAgICAgICAgIGVycm9yIGxvY2F0aW9uIGFzIFhQQVRI
DQoJICogQHBhcmFtIHBFeGNlcHRpb25UeXBlDQoJICogICAgICAgICAgICBlcnJvciB0eXBlIGFz
IFN0cmluZw0KCSAqIEBwYXJhbSBjdXJyZW50Q2FsbGVyVHlwZQ0KCSAqICAgICAgICAgICAgY2Fs
bGVyIHR5cGUgYXMgU3RyaW5nCQ0KCSAqIEBwYXJhbSBjdXJyZW50RXJyb3JNZXNzYWdlDQoJICog
ICAgICAgICAgICBvcmlnaW5hbCBlcnJvciBhcyBTdHJpbmcgDQoJICogQHJldHVybiBhbGwgZm91
bmQgaGFuZGxpbmdzIGZvciB0aGUgZ2l2ZW4gZXJyb3IgYXMgYW4gYXJyYXkgbGlzdCwgZW1wdHkN
CgkgKiAgICAgICAgIGxpc3QgaW4gY2FzZSBvZiBubyBmb3VuZCBlcnJvcg0KCSAqIEB0aHJvd3Mg
U2VydmljZUV4Y2VwdGlvbg0KCSAqLw0KCUBTdXBwcmVzc1dhcm5pbmdzKCJ1bmNoZWNrZWQiKQ0K
CXByaXZhdGUgc3RhdGljIEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyBnZXRIYW5kbGluZ3NGb3JMb2Nh
dGlvbigNCgkJCURvY3VtZW50IHBFcnJvckhhbmRsaW5nLCBTdHJpbmcgcExvY2F0aW9uWFBhdGgs
DQoJCQlTdHJpbmcgcEV4Y2VwdGlvblR5cGUsIFN0cmluZyBjdXJyZW50Q2FsbGVyVHlwZSwgU3Ry
aW5nIGN1cnJlbnRFcnJvck1lc3NhZ2UpDQoJCQl0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7DQoJ
CUxvZy5sb2dEZWJ1ZygiZ2V0SGFuZGxpbmdzRm9yTG9jYXRpb246IC0tPiAiICsgcExvY2F0aW9u
WFBhdGggKyAiLCAiICsgcEV4Y2VwdGlvblR5cGUgKyAiLCAiICsgY3VycmVudENhbGxlclR5cGUg
KyAiLCAiICsgY3VycmVudEVycm9yTWVzc2FnZSk7DQoNCgkJLy8gZ2V0IGV4Y2VwdGlvbiBsaXN0
IGZvciBsb2NhdGlvbg0KCQlMaXN0PEVsZW1lbnQ+IGV4Y2VwdGlvbk5vZGVzID0gbnVsbDsNCgkJ
dHJ5IHsNCgkJCWV4Y2VwdGlvbk5vZGVzID0gKExpc3Q8RWxlbWVudD4pIFhQYXRoLnNlbGVjdE5v
ZGVzKHBFcnJvckhhbmRsaW5nLCBwTG9jYXRpb25YUGF0aCk7DQoJCX0gDQoJCWNhdGNoIChKRE9N
RXhjZXB0aW9uIGUpIHsNCgkJCUxvZy5sb2dFcnJvcigiSkRPTSBFcnJvciBkdXJpbmcgZXh0cmFj
dGlvbiBvZiBlcnJvciB0eXBlcyBmcm9tIGV4Y2VwdGlvbiBoYW5kbGluZyBkZWZpbml0aW9uOiAi
ICsgZS5nZXRNZXNzYWdlKCkpOw0KCQkJTG9nLmxvZ0RlYnVnKCJnZXRIYW5kbGluZ3NGb3JMb2Nh
dGlvbjogPC0tIG51bGwgKEpET01FeGNlcHRpb246ICIgKyBlLmdldE1lc3NhZ2UoKSArICIpIik7
DQoJCQlyZXR1cm4gbnVsbDsNCgkJfQ0KICAgICAgICAvLyBjaGVjayBleGNlcHRpb24gbm9kZXMg
c2FuaXR5DQoJCWlmIChleGNlcHRpb25Ob2RlcyA9PSBudWxsIHx8IGV4Y2VwdGlvbk5vZGVzLmlz
RW1wdHkoKSkgew0KCQkJTG9nLmxvZ0RlYnVnKCJnZXRIYW5kbGluZ3NGb3JMb2NhdGlvbjogPC0t
IG51bGwgKE5vIGV4Y2VwdGlvbk5vZGVzKSIpOw0KCQkJcmV0dXJuIG51bGw7DQoJCX0JCQkNCgkJ
DQoJCS8vIGV4dHJhY3QgZXhjZXB0aW9ucyBmcm9tIGxpc3QsIGlmIGxvY2F0aW9uIGV4aXN0cyBh
bmQgZXhjZXB0aW9uDQoJCS8vIGRlZmluaXRpb25zIGFyZSBjb250YWluZWQNCgkJLy8gaXRlcmF0
aW9uIG92ZXIgYWxsIGRlZmluZWQgZXhjZXB0aW9ucyBpbiBsb2NhdGlvbg0KCQlFeGNlcHRpb25I
YW5kbGluZ0luZm8gZXhjZXB0aW9uSGFuZGxpbmdJbmZvID0gbnVsbDsNCgkJRWxlbWVudCBleGNl
cHRpb25IYW5kbGluZ0VsZW1lbnQgPSBudWxsOw0KCQlmb3IgKEVsZW1lbnQgZXhjZXB0aW9uTm9k
ZSA6IGV4Y2VwdGlvbk5vZGVzKSB7DQoJCQlib29sZWFuIGlzRXJyb3JNZXNzYWdlQ29udGFpbnND
aGVja1RydWUgPSBmYWxzZTsNCgkJCWZpbmFsIFN0cmluZyBlcnJvck1lc3NhZ2VDb250YWluc0Zy
b21EZWZpbml0aW9uID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklC
VVRFX0VSUk9SX01FU1NBR0VfQ09OVEFJTlMpOw0KCQkJaWYgKGVycm9yTWVzc2FnZUNvbnRhaW5z
RnJvbURlZmluaXRpb24gPT0gbnVsbCB8fA0KCQkJCShjdXJyZW50RXJyb3JNZXNzYWdlICE9IG51
bGwgJiYNCgkJCQllcnJvck1lc3NhZ2VDb250YWluc0Zyb21EZWZpbml0aW9uICE9IG51bGwgJiYN
CgkJCQljdXJyZW50RXJyb3JNZXNzYWdlLmNvbnRhaW5zKGVycm9yTWVzc2FnZUNvbnRhaW5zRnJv
bURlZmluaXRpb24pKSkgDQoJCQl7DQoJCQkJaXNFcnJvck1lc3NhZ2VDb250YWluc0NoZWNrVHJ1
ZSA9IHRydWU7DQoJCQl9DQoNCgkJCS8vIENoZWNrIGZvciBvcHRpb25hbCBhdHRyaWJ1dCBlcnJv
ck1lc3NhZ2VSZWdleDoNCgkJCWJvb2xlYW4gaXNFcnJvck1lc3NhZ2VSZWdleENoZWNrVHJ1ZSA9
IGZhbHNlOw0KCQkJZmluYWwgU3RyaW5nIGVycm9yTWVzc2FnZVJlZ2V4RnJvbURlZmluaXRpb24g
PSBleGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9BVFRSSUJVVEVfRVJST1JfTUVT
U0FHRV9SRUdFWF9JRCk7DQoJCQlpZiAoZXJyb3JNZXNzYWdlUmVnZXhGcm9tRGVmaW5pdGlvbiA9
PSBudWxsIHx8DQoJCQkJKGN1cnJlbnRFcnJvck1lc3NhZ2UgIT0gbnVsbCAmJg0KCQkJCWVycm9y
TWVzc2FnZVJlZ2V4RnJvbURlZmluaXRpb24gIT0gbnVsbCAmJg0KCQkJCWN1cnJlbnRFcnJvck1l
c3NhZ2UubWF0Y2hlcyhlcnJvck1lc3NhZ2VSZWdleEZyb21EZWZpbml0aW9uKSkpIA0KCQkJew0K
CQkJCWlzRXJyb3JNZXNzYWdlUmVnZXhDaGVja1RydWUgPSB0cnVlOw0KCQkJfQ0KCQkJDQoJCQkv
LyBDaGVjayBmb3Igb3B0aW9uYWwgYXR0cmlidXQgY2FsbGVyVHlwZToNCgkJCWJvb2xlYW4gaXND
YWxsZXJUeXBlQ2hlY2tUcnVlID0gZmFsc2U7DQoJCQlmaW5hbCBTdHJpbmcgY2FsbGVyVHlwZUZy
b21EZWZpbml0aW9uID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklC
VVRFX0VSUk9SX0NBTExFUl9UWVBFX0lEKTsNCgkJCWlmIChjYWxsZXJUeXBlRnJvbURlZmluaXRp
b24gPT0gbnVsbCB8fA0KCQkJCShjdXJyZW50Q2FsbGVyVHlwZSAhPSBudWxsICYmDQoJCQkJY2Fs
bGVyVHlwZUZyb21EZWZpbml0aW9uICE9IG51bGwgJiYNCgkJCQljdXJyZW50Q2FsbGVyVHlwZS5l
cXVhbHMoY2FsbGVyVHlwZUZyb21EZWZpbml0aW9uKSkpIA0KCQkJew0KCQkJCWlzQ2FsbGVyVHlw
ZUNoZWNrVHJ1ZSA9IHRydWU7DQoJCQl9DQoJCQkNCgkJCS8vIGlmIGRlZmluZWQgZXhjZXB0aW9u
IHR5cGUgZXF1YWxzIGV4Y2VwdGlvbiwgc2V0IGhhbmRsaW5nIGFuZA0KCQkJLy8gZXhpdCBsb29w
DQoJCQlmaW5hbCBTdHJpbmcgZXhjZXB0aW9uVHlwZUZyb21EZWZpbml0aW9uID0gZXhjZXB0aW9u
Tm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX0VSUk9SX1RZUEVfSUQpOw0KCQkJ
aWYgKGV4Y2VwdGlvblR5cGVGcm9tRGVmaW5pdGlvbi5lcXVhbHMocEV4Y2VwdGlvblR5cGUpICYm
IGlzRXJyb3JNZXNzYWdlQ29udGFpbnNDaGVja1RydWUgJiYgaXNFcnJvck1lc3NhZ2VSZWdleENo
ZWNrVHJ1ZSAmJiBpc0NhbGxlclR5cGVDaGVja1RydWUpIHsNCgkJCQlleGNlcHRpb25IYW5kbGlu
Z0luZm8gPSBnZXRSZXRWYWwoZXhjZXB0aW9uTm9kZSwgcEV4Y2VwdGlvblR5cGUpOw0KCQkJCWV4
Y2VwdGlvbkhhbmRsaW5nRWxlbWVudCA9IGV4Y2VwdGlvbk5vZGU7DQoJCQkJYnJlYWs7DQoJCQl9
CQ0KCQkJICANCgkJCS8vIGlmIGdlbmVyaWMgaGFuZGxpbmcgaXMgYWxsb3dlZCBhbmQgZGVmaW5l
ZCAodHlwZT0iYWxsIiksIHNldCAoY2FjaGUpDQoJCQkvLyBnZW5lcmljIGhhbmRsaW5nDQoJCQll
bHNlIGlmIChleGNlcHRpb25UeXBlRnJvbURlZmluaXRpb24uZXF1YWxzKEVIRF9WQUxVRV9HRU5F
UklDX0VSUk9SX1RZUEVfSUQpICYmIGlzRXJyb3JNZXNzYWdlQ29udGFpbnNDaGVja1RydWUgJiYg
aXNFcnJvck1lc3NhZ2VSZWdleENoZWNrVHJ1ZSAmJiBpc0NhbGxlclR5cGVDaGVja1RydWUpIHsN
CgkJCQlleGNlcHRpb25IYW5kbGluZ0luZm8gPSBnZXRSZXRWYWwoZXhjZXB0aW9uTm9kZSwgcEV4
Y2VwdGlvblR5cGUpOw0KCQkJCWV4Y2VwdGlvbkhhbmRsaW5nRWxlbWVudCA9IGV4Y2VwdGlvbk5v
ZGU7DQoJCQkJYnJlYWs7DQoJCQl9DQoJCX0NCg0KCQlpZiAoZXhjZXB0aW9uSGFuZGxpbmdFbGVt
ZW50ID09IG51bGwpIHsNCgkJCXJldHVybiBudWxsOw0KCQl9IGVsc2Ugew0KCQkJLy8gY2hlY2sg
aGFuZGxpbmcgbm9kZXMgc2FuaXR5DQoJCQlmb3IgKE9iamVjdCBuIDogZXhjZXB0aW9uSGFuZGxp
bmdFbGVtZW50LmdldENoaWxkcmVuKEVIRF9BVFRSSUJVVEVfSEFORExJTkcpKSB7DQoJCQkJCWV4
Y2VwdGlvbkhhbmRsaW5nSW5mby5hZGRTZXJ2aWNlTmFtZSgoKEVsZW1lbnQpIG4pLmdldFRleHQo
KSk7DQoJCQl9DQoNCgkJCUxvZy5sb2dEZWJ1ZygiZ2V0SGFuZGxpbmdzRm9yTG9jYXRpb246IDwt
LSAiICsgZXhjZXB0aW9uSGFuZGxpbmdJbmZvKTsNCgkJCXJldHVybiBleGNlcHRpb25IYW5kbGlu
Z0luZm87DQoJCX0NCgkJDQoJfQ0KCQ0KCXByaXZhdGUgc3RhdGljIEV4Y2VwdGlvbkhhbmRsaW5n
SW5mbyBnZXRSZXRWYWwoRWxlbWVudCBleGNlcHRpb25Ob2RlLCBTdHJpbmcgZXhjZXB0aW9uVHlw
ZSkgewkNCgkJZmluYWwgU3RyaW5nIGVycm9yVG9CZVRocm93biA9IGV4Y2VwdGlvbk5vZGUuZ2V0
QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVURV9SRVRVUk5fVkFMVUVfSUQpOw0KCQlmaW5hbCBT
dHJpbmcgdHlwZSA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVU
RV9FUlJPUl9UWVBFX0lEKTsNCgkJZmluYWwgU3RyaW5nIGV4Y2VwdGlvbkhhbmRsaW5nSWQgPSBl
eGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9BVFRSSUJVVEVfRVJST1JfSEFORExJ
TkdfSURfSUQpOw0KCQlmaW5hbCBTdHJpbmcgbWF4UmV0cnlBdHRlbXB0cyA9IGV4Y2VwdGlvbk5v
ZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVURV9NQVhfUkVUUllfQVRURU1QVFMpOw0K
CQlmaW5hbCBTdHJpbmcgcHJpbnRCdXNpbmVzc09iamVjdFN0ciA9IGV4Y2VwdGlvbk5vZGUuZ2V0
QXR0cmlidXRlVmFsdWUoRUhEX1BSSU5UX0JVU0lORVNTX09CSkVDVF9JRCk7DQoJCWZpbmFsIGJv
b2xlYW4gcHJpbnRCdXNpbmVzc09iamVjdCA9IHByaW50QnVzaW5lc3NPYmplY3RTdHIgPT0gbnVs
bCA/IGZhbHNlIDogQm9vbGVhbi5wYXJzZUJvb2xlYW4ocHJpbnRCdXNpbmVzc09iamVjdFN0cik7
DQoJCXJldHVybiBuZXcgRXhjZXB0aW9uSGFuZGxpbmdJbmZvKGVycm9yVG9CZVRocm93biwgdHlw
ZSwgZXhjZXB0aW9uSGFuZGxpbmdJZCwgZXhjZXB0aW9uVHlwZSwgbWF4UmV0cnlBdHRlbXB0cywg
cHJpbnRCdXNpbmVzc09iamVjdCk7DQoJfQ0KCQ0KDQoJcHJpdmF0ZSBzdGF0aWMgSURhdGEgYnVp
bGRDb21wYWN0RXJyb3JJbmZvKFN0cmluZyBwRXJyb3JMb2NhdGlvbiwgU3RyaW5nIGZsb3dTdGVw
KSB7DQoJCUlEYXRhIGNvbXBhY3RFcnJvckluZm8gPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJ
CUlEYXRhQ3Vyc29yIGNvbXBhY3RFcnJvckluZm9DdXJzb3IgPSBjb21wYWN0RXJyb3JJbmZvLmdl
dEN1cnNvcigpOw0KDQoJCUlEYXRhVXRpbC5wdXQoY29tcGFjdEVycm9ySW5mb0N1cnNvciwgQ09N
UEFDVF9FUlJPUl9MT0NBVElPTl9JRCwgcEVycm9yTG9jYXRpb24pOw0KCQlJRGF0YVV0aWwucHV0
KGNvbXBhY3RFcnJvckluZm9DdXJzb3IsIENPTVBBQ1RfRVJST1JfRkxPV19TVEVQLCBmbG93U3Rl
cCk7DQoNCgkJY29tcGFjdEVycm9ySW5mb0N1cnNvci5kZXN0cm95KCk7DQoNCgkJcmV0dXJuIGNv
bXBhY3RFcnJvckluZm87DQoJfQ0KCQkNCglAU3VwcHJlc3NXYXJuaW5ncygicmF3dHlwZXMiKQ0K
CXByaXZhdGUgc3RhdGljIGZpbmFsIE5TU2VydmljZSBnZXRDdXJyZW50VG9wTGV2ZWxTZXJ2aWNl
KCkgew0KCQlOU1NlcnZpY2UgdG9wTGV2ZWxTZXJ2aWNlTmFtZSA9IG51bGw7DQoJCUludm9rZVN0
YXRlIHN0YXRlID0gSW52b2tlU3RhdGUuZ2V0Q3VycmVudFN0YXRlKCk7DQoJCWlmIChzdGF0ZSAh
PSBudWxsKSB7DQoJCQlTdGFjayBjYWxsU3RhY2sgPSBzdGF0ZS5nZXRDYWxsU3RhY2soKTsNCgkJ
CWlmIChjYWxsU3RhY2sgIT0gbnVsbCAmJiBjYWxsU3RhY2suc2l6ZSgpID4gMCkgew0KCQkJCXRv
cExldmVsU2VydmljZU5hbWUgPSAoTlNTZXJ2aWNlKSBjYWxsU3RhY2suZWxlbWVudEF0KDApOw0K
CQkJfQ0KCQl9DQoJCXJldHVybiB0b3BMZXZlbFNlcnZpY2VOYW1lOw0KCX0NCgkNCglwcml2YXRl
IHN0YXRpYyBmaW5hbCBTdHJpbmcgZ2V0TWVzc2FnZVVJRChJRGF0YSBtZXRhRGF0YSkgew0KCQlp
ZihtZXRhRGF0YSAhPSBudWxsKSB7DQoJCQlJRGF0YU1hcCBtZXRhRGF0YU1hcCA9IG5ldyBJRGF0
YU1hcChtZXRhRGF0YSk7DQoJCQlyZXR1cm4gbWV0YURhdGFNYXAuZ2V0QXNTdHJpbmcoVUlEX0lE
KTsNCgkJfQ0KCQlyZXR1cm4gbnVsbDsNCgl9DQoNCglwdWJsaWMgc3RhdGljIHZvaWQgaW5pdEhh
bmRsaW5ncyhVUkwgcFVybCwgU0FYQnVpbGRlciBwQnVpbGRlcikgew0KCQlmaW5hbCBTQVhCdWls
ZGVyIGJ1aWxkZXI7DQoJCWlmIChwQnVpbGRlciA9PSBudWxsKSB7DQoJCQlidWlsZGVyID0gbmV3
IFNBWEJ1aWxkZXIoKTsNCgkJfSBlbHNlIHsNCgkJCWJ1aWxkZXIgPSBwQnVpbGRlcjsNCgkJfQ0K
CQlmaW5hbCBEb2N1bWVudCBkb2MgPSBsb2FkSGFuZGxpbmdzKHBVcmwsIGJ1aWxkZXIpOw0KCQlz
eW5jaHJvbml6ZWQoZXhjZXB0aW9uSGFuZGxpbmdMb2NrKSB7DQoJCQlfZXhjZXB0aW9uSGFuZGxp
bmcgPSBkb2M7DQoJCX0NCgl9DQoJDQoJcHJpdmF0ZSBzdGF0aWMgRG9jdW1lbnQgbG9hZEhhbmRs
aW5ncyhVUkwgcEZpbGUsIFNBWEJ1aWxkZXIgcEJ1aWxkZXIpIHsNCgkJLy8gTG9hZCBleGNlcHRp
b24gaGFuZGxpbmcgZGVmaW5pdGlvbiBmaWxlDQoJCQ0KCQl0cnkgew0KCQkJZmluYWwgRG9jdW1l
bnQgZWhkID0gcEJ1aWxkZXIuYnVpbGQocEZpbGUpOw0KCQkNCgkJCUxvZy5sb2dJbmZvKCJTdWNj
ZXNzZnVsbHkgaW5pdGlhbGl6ZWQgZXJyb3IgaGFuZGxpbmciKTsNCgkJCXJldHVybiBlaGQ7DQoJ
CX0gDQoJCWNhdGNoIChKRE9NRXhjZXB0aW9uIGUpIHsNCgkJCUxvZy5sb2dFcnJvcigiSkRPTSBF
cnJvciBkdXJpbmcgaW5pdGlhbGl6YXRpb24gb2YgZXJyb3IgaGFuZGxpbmc6ICIgKyBlLmdldE1l
c3NhZ2UoKSk7DQoJCQl0aHJvdyBuZXcgVW5kZWNsYXJlZFRocm93YWJsZUV4Y2VwdGlvbihlKTsN
CgkJfSANCgkJY2F0Y2ggKElPRXhjZXB0aW9uIGUpIHsNCgkJCUxvZy5sb2dFcnJvcigiSU8gRXJy
b3IgZHVyaW5nIGluaXRpYWxpemF0aW9uIG9mIGVycm9yIGhhbmRsaW5nOiAiICsgZS5nZXRNZXNz
YWdlKCkpOw0KCQkJdGhyb3cgbmV3IFVuZGVjbGFyZWRUaHJvd2FibGVFeGNlcHRpb24oZSk7DQoJ
CX0NCgl9DQoNCg0KCXByaXZhdGUgc3RhdGljIFN0cmluZyBhc1N0cmluZyhTdHJpbmdbXSB0ZW1w
UGFydHMpIHsNCgkJU3RyaW5nQnVpbGRlciBidWlsZGVyID0gbmV3IFN0cmluZ0J1aWxkZXIoKTsN
CgkJZm9yIChTdHJpbmcgc3RyaW5nIDogdGVtcFBhcnRzKSB7DQoJCQlidWlsZGVyLmFwcGVuZChz
dHJpbmcpLmFwcGVuZCgiLCIpOw0KCQl9DQoJCXJldHVybiBidWlsZGVyLnRvU3RyaW5nKCk7DQoJ
fQ0KDQoJDQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKg0KCS8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLVhNTCBOT0RF
IE5BTUUgREVGSU5JVElPTlMtLS0tLS0tLS0tLS0tLS0tLS0tLS0NCgkvLyAqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9OT0RFX0RPQ19ST09UX0lEID0gImV4Y2Vw
dGlvbkhhbmRsaW5nIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX05PREVfR0xP
QkFMX0VSUk9SX1RZUEVfSUQgPSAiZ2xvYmFsRXhjZXB0aW9uIjsNCglwcml2YXRlIHN0YXRpYyBm
aW5hbCBTdHJpbmcgRUhEX05PREVfRVJST1JfTE9DQVRJT05fSUQgPSAibG9jYXRpb24iOw0KCXBy
aXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfTk9ERV9FUlJPUl9UWVBFX0lEID0gImV4Y2Vw
dGlvbiI7DQoNCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLVhNTCBOT0RF
IEFUVFJJQlVURSBERUZJTklUSU9OUy0tLS0tLS0tLS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioN
Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9FUlJPUl9UWVBFX0lE
ID0gInR5cGUiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0VS
Uk9SX0NBTExFUl9UWVBFX0lEID0gImNhbGxlclR5cGUiOwkJDQoJcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfRVJST1JfTUVTU0FHRV9DT05UQUlOUyA9ICJlcnJvck1l
c3NhZ2VDb250YWlucyI7CQkNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJ
QlVURV9FUlJPUl9NRVNTQUdFX1JFR0VYX0lEID0gImVycm9yTWVzc2FnZVJlZ2V4IjsJCQ0KCXBy
aXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0xPQ0FUSU9OX05BTUVfSUQg
PSAibmFtZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfUkVU
VVJOX1ZBTFVFX0lEID0gImVycm9yVG9CZVRocm93biI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwg
U3RyaW5nIEVIRF9BVFRSSUJVVEVfRVJST1JfSEFORExJTkdfSURfSUQgPSAiZXhjZXB0aW9uSGFu
ZGxpbmdJZCI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfSEFO
RExJTkc9ICJoYW5kbGluZyI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRS
SUJVVEVfTUFYX1JFVFJZX0FUVEVNUFRTID0gIm1heFJldHJ5QXR0ZW1wdHMiOw0KCXByaXZhdGUg
c3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX1JFVFJZX0NPVU5UID0gInJldHJ5Q291
bnQiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfUFJJTlRfQlVTSU5FU1NfT0JK
RUNUX0lEID0gInByaW50QnVzaW5lc3NPYmplY3QiOw0KDQoJLy8gKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCS8vIC0t
LS0tLS0tLS0tLS0tLS0tLS0tLVhNTCBOT0RFIFZBTFVFIERFRklOSVRJT05TLS0tLS0tLS0tLS0t
LS0tLS0tLS0NCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVI
RF9WQUxVRV9HRU5FUklDX0VSUk9SX1RZUEVfSUQgPSAiYWxsIjsNCglwcml2YXRlIHN0YXRpYyBm
aW5hbCBTdHJpbmcgRUhEX1ZBTFVFX0dMT0JBTF9FUlJPUl9IQU5ETElOR19JRCA9ICJnbG9iYWwi
Ow0KDQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKg0KCS8vIC0tLS0tLS0tLS0tLS0tLS0tLUlOUFVUIEVSUk9SIEZJ
RUxEIElEIERFRklOSVRJT05TLS0tLS0tLS0tLS0tLS0tLS0NCgkvLyAqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJcHJp
dmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fSUQgPSAiZXhjZXB0aW9uSW5mbyI7
DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVYQ0xVREVfU0VSVklDRSA9ICJAV3hSZXNp
bGllbmNlLmVycm9ySGFuZGxpbmcuZXhjbHVkZVNlcnZpY2VGcm9tRXJyb3JIYW5kbGluZ0AiOw0K
CQ0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0VSUk9SID0gImVycm9y
IjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfSU5GT19FUlJPUl9UWVBFID0g
ImVycm9yVHlwZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fQ0FM
TF9TVEFDS19TRVJWSUNFID0gInNlcnZpY2UiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmlu
ZyBFUlJPUl9JTkZPX0NBTExfU1RBQ0tfRkxPV19TVEVQID0gImZsb3dTdGVwIjsNCglwcml2YXRl
IHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfSU5GT19DQUxMX1NUQUNLID0gImNhbGxTdGFjayI7
DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fRVJST1JfRFVNUCA9ICJl
cnJvckR1bXAiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX1RJTUUg
PSAidGltZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fTkVTVEVE
X0VSUk9SX0lEID0gIm5lc3RlZEVycm9ySW5mbyI7DQoNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBT
dHJpbmcgR0VORVJJQ19WQUxVRV9NQVBfSUQgPSAiZ2VuZXJpY1ZhbHVlTWFwIjsNCglwcml2YXRl
IHN0YXRpYyBmaW5hbCBTdHJpbmcgR0VORVJJQ19FUlJPUl9NRVNTQUdFX0lEID0gImdlbmVyaWNF
cnJvck1lc3NhZ2UiOw0KDQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCS8vIC0tLS0tLS0tLS0tLS0tT1VUUFVU
IEhBTkRMRUQgRVJST1IgRklFTEQgSUQgREVGSU5JVElPTlMtLS0tLS0tLS0tLS0NCgkvLyAqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19J
RCA9ICJoYW5kbGVkRXJyb3JJbmZvIjsNCgkNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcg
SEFORExFRF9FUlJPUl9JTkZPX1JPT1RfSUQgPSAidG9wU2VydmljZUVycm9yIjsNCglwcml2YXRl
IHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0hBTkRMRURfSUQgPSAiaGFu
ZGxlZFNlcnZpY2VFcnJvciI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURf
RVJST1JfSU5GT19BUFBMSUNBVElPTl9TRVJWSUNFX0lEID0gImFwcGxpY2F0aW9uU2VydmljZUVy
cm9yIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX09S
SUdJTl9JRCA9ICJyb290U2VydmljZUVycm9yIjsNCg0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0
cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fSEFORExJTkdfTE9DQVRJT05fSUQgPSAiaGFuZGxpbmdM
b2NhdGlvbiI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5G
T19IQU5ETElOR19UWVBFX0lEID0gImhhbmRsaW5nVHlwZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19ERVBUSF9JRCA9ICJlcnJvckRlcHRoIjsNCglw
cml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0VSUk9SX0NPREUg
PSAiZXJyb3JDb2RlIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJP
Ul9JTkZPX0NBTExfU1RBQ0sgPSAiY2FsbFN0YWNrIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBT
dHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0VSUk9SX0RVTVAgPSAiZXJyb3JEdW1wIjsNCglwcml2
YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX1RJTUUgPSAidGltZSI7
DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19QSVBFTElO
RSA9ICJwaXBlbGluZSI7DQoNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfTVNH
X0lEID0gImVycm9yTWVzc2FnZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIENPTVBB
Q1RfRVJST1JfTE9DQVRJT05fSUQgPSAiZXJyb3JMb2NhdGlvbiI7DQoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3RyaW5nIENPTVBBQ1RfRVJST1JfRkxPV19TVEVQID0gImVycm9yRmxvd1N0ZXAiOw0K
CXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9UWVBFX0lEID0gImVycm9yVHlwZSI7
DQoNCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLUdFTkVSSUMgRE9DIEZJ
RUxEIElEIERFRklOSVRJT05TLS0tLS0tLS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCglwcml2
YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgQlVTSU5FU1NfRE9DX0lEID0gImJ1c2luZXNzT2JqZWN0
IjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgUFJJTlRfQlVTSU5FU1NfT0JKRUNUX0lE
ID0gInByaW50QnVzaW5lc3NPYmplY3QiOw0KDQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCS8vIC0tLS0tLS0t
LS0tLS0tLS0tLS0tRVhDRVBUSU9OIEhBTkRMSU5HIERFRklOSVRJT04tLS0tLS0tLS0tLS0tLS0t
LS0NCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIE1FVEFEQVRB
X0lEID0gIm1ldGFEYXRhIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgVUlEX0lEID0g
InV1aWQiOw0KDQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKg0KCS8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tRVhDRVBU
SU9OIEhBTkRMSU5HIERFRklOSVRJT04tLS0tLS0tLS0tLS0tLS0tLS0NCgkvLyAqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
DQoJcHJpdmF0ZSBzdGF0aWMgRG9jdW1lbnQgX2V4Y2VwdGlvbkhhbmRsaW5nOw0KCXByaXZhdGUg
c3RhdGljIGZpbmFsIE9iamVjdCBleGNlcHRpb25IYW5kbGluZ0xvY2sgPSBuZXcgT2JqZWN0KCk7
DQoJcHJpdmF0ZSBzdGF0aWMgRXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lciBfZXhjZXB0aW9uSGFu
ZGxpbmdMaXN0ZW5lcjsNCglwcml2YXRlIHN0YXRpYyBDYWxsZXJUeXBlU3VwcGxpZXIgREVGQVVM
VF9DQUxMRVJfVFlQRV9TVVBQTElFUiA9IG5ldyBDYWxsZXJUeXBlU3VwcGxpZXIoKSB7DQoJCUBP
dmVycmlkZQ0KCQlwdWJsaWMgU3RyaW5nIGdldCgpIHsNCgkJCXJldHVybiBnZXRDYWxsZXJUeXBl
QnlDYWxsaW5nU2VydmljZSgpOw0KCQl9DQoJfTsNCglwcml2YXRlIHN0YXRpYyBDYWxsZXJUeXBl
U3VwcGxpZXIgY2FsbGVyVHlwZVN1cHBsaWVyID0gbnVsbDsNCglwcml2YXRlIHN0YXRpYyBmaW5h
bCBPYmplY3QgY2FsbGVyVHlwZVN1cHBsaWVyTG9jayA9IG5ldyBPYmplY3QoKTsNCglwcml2YXRl
IHN0YXRpYyBmaW5hbCBPYmplY3QgZXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lckxvY2sgPSBuZXcg
T2JqZWN0KCk7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgT2JqZWN0IGNyZWF0ZVN1bW1hcml6ZWRF
eGNlcHRpb25IYW5kbGluZ0xvY2sgPSBuZXcgT2JqZWN0KCk7DQoJLy8gKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCS8v
IC0tLS0tLS0tLS0tLS0tLS0tLS0tSU5QVVQgR0VUIFZBTFVFIERFRklOSVRJT04tLS0tLS0tLS0t
LS0tLS0tLS0tLS0NCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5n
IE1BWF9SRVRSWV9BVFRFTVBUU19ERUZBVUxUID0gIm1heFJldHJ5QXR0ZW1wdHNEZWZhdWx0IjsN
Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgTUFYX1JFVFJZX0FUVEVNUFRTX0JFRk9SRV9D
QU5DRUxfUkVUUlkgPSAibWF4UmV0cnlBdHRlbXB0c0JlZm9yZUNhbmNlbFJldHJ5IjsNCglwcml2
YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgUEFDS0FHRV9MQ0xfRVJST1IgPSAiV3hSZXNpbGllbmNl
IjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgQlJFQUtfUkVUUllfTE9PUCA9ICJicmVh
ay5yZXRyeS5sb29wLmZvci4iOw0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCgkvLyAtLS0tLS0tLS0tLS0tLS0t
LS0tLUVSUk9SIFZBTFVFIERFRklOSVRJT04tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCgkvLyAqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIFJFVFJZID0gIlRSQU5TSUVOVCI7
DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEFCT1JUID0gIkZBVEFMIjsNCglwcml2YXRl
IHN0YXRpYyBmaW5hbCBTdHJpbmcgQ09OVElOVUUgPSAiTk9ORSI7CQ0KCQ0KCXByaXZhdGUgc3Rh
dGljIGZpbmFsIFN0cmluZyBTVU1NQVJJWkVEX0VYQ0VQVElPTl9IQU5ETElOR19GSUxFID0gIkV4
Y2VwdGlvbkhhbmRsaW5nU3VtbWFyaXplZC54bWwiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0
cmluZyBFWENFUFRJT05fSEFORExJTkdfWFNEX0ZJTEUgPSAiRXhjZXB0aW9uSGFuZGxpbmcueHNk
IjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgV1hfUkVTSUxJRU5DRSA9ICJXeFJlc2ls
aWVuY2UiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9IQU5ETElOR19YTUxf
RklMRSA9ICJFeGNlcHRpb25IYW5kbGluZy54bWwiOw0KDQoNCgkNCgkNCgkNCgkNCgkNCg==</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>com.softwareag.util.IDataMap</value>
    <value>com.wm.app.audit.IAuditRuntime</value>
    <value>wx.resilience.impl.ErrorInfo</value>
    <value>wx.resilience.impl.SummarizedExceptionHandlingHandler</value>
    <value>wx.resilience.impl.SummarizedExceptionHandlingHandler.Creator</value>
    <value>wx.resilience.impl.Exceptions</value>
    <value>wx.resilience.impl.Paths</value>
    <value>com.wm.lang.ns.NSName</value>
    <value>java.io.File</value>
    <value>java.io.IOException</value>
    <value>java.util.*</value>
    <value>javax.xml.transform.Source</value>
    <value>javax.xml.transform.stream.StreamSource</value>
    <value>javax.xml.validation.Schema</value>
    <value>javax.xml.validation.SchemaFactory</value>
    <value>javax.xml.validation.Validator</value>
    <value>org.jdom.Document</value>
    <value>org.jdom.Element</value>
    <value>org.jdom.JDOMException</value>
    <value>org.jdom.input.SAXBuilder</value>
    <value>org.jdom.xpath.XPath</value>
    <value>org.xml.sax.SAXException</value>
    <value>com.wm.app.b2b.server.*</value>
    <value>java.io.*</value>
    <value>java.lang.reflect.UndeclaredThrowableException</value>
    <value>java.net.URL</value>
    <value>java.nio.file.Files</value>
    <value>java.nio.file.Path</value>
    <value>java.nio.file.StandardCopyOption</value>
    <value>com.wm.lang.ns.NSService</value>
    <value>java.util.function.Supplier</value>
  </array>
</Values>
