<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">QEZ1bmN0aW9uYWxJbnRlcmZhY2UKcHVibGljIHN0YXRpYyBpbnRlcmZhY2UgRXhjZXB0aW9uSGFu
ZGxpbmdMaXN0ZW5lciB7CglwdWJsaWMgdm9pZCBhY2NlcHQoU3RyaW5nIHBTZXJ2aWNlTmFtZSwg
SURhdGEgcFBpcGVsaW5lKSB0aHJvd3MgVW5rbm93blNlcnZpY2VFeGNlcHRpb247Cn0KCkBGdW5j
dGlvbmFsSW50ZXJmYWNlCnB1YmxpYyBzdGF0aWMgaW50ZXJmYWNlIENhbGxlclR5cGVTdXBwbGll
ciB7CglwdWJsaWMgU3RyaW5nIGdldCgpOwp9Cgpwcml2YXRlIHN0YXRpYyBQYXRoIGNyZWF0ZVN1
bW1hcml6ZWRFeGNlcHRpb25IYW5kbGluZygpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKCXN5
bmNocm9uaXplZChjcmVhdGVTdW1tYXJpemVkRXhjZXB0aW9uSGFuZGxpbmdMb2NrKSB7CgkJcmV0
dXJuIGNyZWF0ZVN1bW1hcml6ZWRFeGNlcHRpb25IYW5kbGluZyhTVU1NQVJJWkVEX0VYQ0VQVElP
Tl9IQU5ETElOR19GSUxFKTsKCX0KfQpwcml2YXRlIHN0YXRpYyBQYXRoIGNyZWF0ZVN1bW1hcml6
ZWRFeGNlcHRpb25IYW5kbGluZyhTdHJpbmcgcEZpbGVOYW1lKQoJCXRocm93cyBTZXJ2aWNlRXhj
ZXB0aW9uIHsKCUZpbGUgSVNEaXIgPSBTZXJ2ZXJBUEkuZ2V0U2VydmVyQ29uZmlnRGlyKCkuZ2V0
UGFyZW50RmlsZSgpOwoJRmlsZSBJU1BhY2thZ2VzID0gbmV3IGphdmEuaW8uRmlsZShJU0Rpciwg
InBhY2thZ2VzIik7CglmaW5hbCBQYXRoIGNvbmZpZ0RpciA9IFNlcnZlckFQSS5nZXRQYWNrYWdl
Q29uZmlnRGlyKFdYX1JFU0lMSUVOQ0UpLnRvUGF0aCgpOwoJZmluYWwgUGF0aCBvdXRwdXRGaWxl
ID0gY29uZmlnRGlyLnJlc29sdmUocEZpbGVOYW1lKTsKCVBhdGhzLmFzc2VydFBhcmVudERpckV4
aXN0cyhvdXRwdXRGaWxlKTsKCgl0cnkgewoJCXRyeSAoQ3JlYXRvciBjcmVhdG9yID0gU3VtbWFy
aXplZEV4Y2VwdGlvbkhhbmRsaW5nSGFuZGxlci5uZXdDcmVhdG9yKG91dHB1dEZpbGUpKSB7CgkJ
CWZvciAoRmlsZSBwYWNrYWdlRGlyIDogSVNQYWNrYWdlcy5saXN0RmlsZXMoKSkgewoJCQkJaWYg
KHBhY2thZ2VEaXIuaXNEaXJlY3RvcnkoKSkgewoJCQkJCWZpbmFsIFN0cmluZyBwYWNrYWdlTmFt
ZSA9IHBhY2thZ2VEaXIuZ2V0TmFtZSgpOwoJCQkJCWlmIChwYWNrYWdlTmFtZS5zdGFydHNXaXRo
KCJXbSIpKSB7CgkJCQkJCWNvbnRpbnVlOwoJCQkJCX0KCQkJCQlmaW5hbCBGaWxlIHBhY2thZ2VD
ZmdEaXIgPSBuZXcgRmlsZShwYWNrYWdlRGlyLCAiY29uZmlnIik7CgkJCQkJaWYgKHBhY2thZ2VD
ZmdEaXIuaXNEaXJlY3RvcnkoKSkgewoJCQkJCQlmaW5hbCBGaWxlIHBhY2thZ2VFaGRGaWxlID0g
bmV3IEZpbGUocGFja2FnZUNmZ0RpciwgRVJST1JfSEFORExJTkdfWE1MX0ZJTEUpOwoJCQkJCQlp
ZiAocGFja2FnZUVoZEZpbGUuaXNGaWxlKCkpIHsKCQkJCQkJCWNyZWF0b3IucGFyc2UocGFja2Fn
ZUVoZEZpbGUsIHBhY2thZ2VOYW1lKTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCQl2
YWxpZGF0ZVhNTCgpOwoJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsKCQlsb2dFcnJvcigiRXJyb3Ig
ZHVyaW5nIHBhcnNpbmcgb2Ygc3VtbWFyaXplZEV4Y2VwdGlvbkhhbmRsaW5nRGVmaW5pdGlvbjog
IiArIGUuZ2V0TWVzc2FnZSgpKTsKCQl0aHJvdyBFeGNlcHRpb25zLnNob3coZSwgU2VydmljZUV4
Y2VwdGlvbi5jbGFzcyk7Cgl9CglyZXR1cm4gb3V0cHV0RmlsZTsKfQoKcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgRXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lciBERUZBVUxUX0VSUk9SX0hBTkRMRVIgPSBu
ZXcgRXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lcigpIHsKCXB1YmxpYyB2b2lkIGFjY2VwdChTdHJp
bmcgcywgSURhdGEgZCkgdGhyb3dzIFVua25vd25TZXJ2aWNlRXhjZXB0aW9uIHsKCQlsb2dEZWJ1
ZygiRGVmYXVsdEVycm9ySGFuZGxlcjogLS0+ICIgKyBzKTsKCQl0cnkgewoJCQlTZXJ2aWNlLmRv
SW52b2tlKE5TTmFtZS5jcmVhdGUocyksIGQpOwoJCX0gY2F0Y2ggKFVua25vd25TZXJ2aWNlRXhj
ZXB0aW9uIHVzZSkgewoJCQlsb2dEZWJ1ZygiRGVmYXVsdEVycm9ySGFuZGxlcjogIiArIHVzZS5n
ZXRDbGFzcygpLmdldE5hbWUoKSArICIsICIgKyB1c2UuZ2V0TWVzc2FnZSgpKTsKCQkJdGhyb3cg
dXNlOwoJCX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7CgkJCWxvZ0RlYnVnKCJEZWZhdWx0RXJyb3JI
YW5kbGVyOiAiICsgZS5nZXRDbGFzcygpLmdldE5hbWUoKSArICIsICIgKyBlLmdldE1lc3NhZ2Uo
KSk7CgkJCXRocm93IG5ldyBVbmRlY2xhcmVkVGhyb3dhYmxlRXhjZXB0aW9uKGUpOwoJCX0KCQls
b2dEZWJ1ZygiRGVmYXVsdEVycm9ySGFuZGxlcjogPC0tIik7Cgl9Cn07CnByaXZhdGUgc3RhdGlj
IEV4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXIgZ2V0RXJyb3JIYW5kbGVyKCkgewoJc3luY2hyb25p
emVkIChleGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyTG9jaykgewoJCWlmIChfZXhjZXB0aW9uSGFu
ZGxpbmdMaXN0ZW5lciA9PSBudWxsKSB7CgkJCXJldHVybiBERUZBVUxUX0VSUk9SX0hBTkRMRVI7
CgkJfSBlbHNlIHsKCQkJcmV0dXJuIF9leGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyOwoJCX0KCX0K
fQpwdWJsaWMgc3RhdGljIHZvaWQgc2V0RXJyb3JIYW5kbGVyKEV4Y2VwdGlvbkhhbmRsaW5nTGlz
dGVuZXIgcEVycm9ySGFuZGxpbmdMaXN0ZW5lcikgewoJc3luY2hyb25pemVkIChleGNlcHRpb25I
YW5kbGluZ0xpc3RlbmVyTG9jaykgewoJCV9leGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyID0gcEVy
cm9ySGFuZGxpbmdMaXN0ZW5lcjsKCX0KfQpwcml2YXRlIHN0YXRpYyB2b2lkIGludm9rZUVycm9y
SGFuZGxlcihJRGF0YSBwSGFuZGxpbmdTZXJ2aWNlSW5wdXQsCgkJZmluYWwgU3RyaW5nIHBTZXJ2
aWNlTmFtZSkgdGhyb3dzIEV4Y2VwdGlvbiB7Cglsb2dEZWJ1ZygiaW52b2tlRXJyb3JIYW5kbGVy
OiAtLT4gIik7CglmaW5hbCBFeGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyIGVobCA9IGdldEVycm9y
SGFuZGxlcigpOwoJbG9nRGVidWcoImludm9rZUVycm9ySGFuZGxlcjogZWg9IiArIGVobCk7Cgll
aGwuYWNjZXB0KHBTZXJ2aWNlTmFtZSwgcEhhbmRsaW5nU2VydmljZUlucHV0KTsKCWxvZ0RlYnVn
KCJpbnZva2VFcnJvckhhbmRsZXI6IDwtLSIpOwoKCS8vIC0tLSA8PElTLUVORD4+IC0tLQp9Cgpw
cml2YXRlIHN0YXRpYyBEb2N1bWVudCBnZXRlcnJvckhhbmRsaW5ncygpIHRocm93cyBTZXJ2aWNl
RXhjZXB0aW9uIHsKCXN5bmNocm9uaXplZChleGNlcHRpb25IYW5kbGluZ0xvY2spIHsKCQlpZiAo
X2V4Y2VwdGlvbkhhbmRsaW5nICE9IG51bGwpIHsKCQkJcmV0dXJuIF9leGNlcHRpb25IYW5kbGlu
ZzsKCQl9Cgl9Cglpbml0aWFsaXplRXhjZXB0aW9uSGFuZGxpbmdzKG51bGwpOwoJc3luY2hyb25p
emVkIChleGNlcHRpb25IYW5kbGluZ0xvY2spIHsKCQlpZiAoX2V4Y2VwdGlvbkhhbmRsaW5nID09
IG51bGwpIHsKCQkJdGhyb3cgbmV3IElsbGVnYWxTdGF0ZUV4Y2VwdGlvbigiVW5hYmxlIHRvIGlu
aXRpYWxpemUgZXJyb3JIYW5kbGluZy4gRGlkIHlvdSBhc3NlbWJsZSBpdD8iKTsKCQl9IGVsc2Ug
ewoJCQlyZXR1cm4gX2V4Y2VwdGlvbkhhbmRsaW5nOwoJCX0KCX0KfQoKcHJpdmF0ZSBzdGF0aWMg
U3RyaW5nIGdldENhbGxlclR5cGUoKSB7CglDYWxsZXJUeXBlU3VwcGxpZXIgY3RzOyAKCXN5bmNo
cm9uaXplZCAoY2FsbGVyVHlwZVN1cHBsaWVyTG9jaykgewoJCWN0cyA9IGNhbGxlclR5cGVTdXBw
bGllcjsKCX0KCWlmIChjdHMgPT0gbnVsbCkgewoJCWN0cyA9IERFRkFVTFRfQ0FMTEVSX1RZUEVf
U1VQUExJRVI7Cgl9CglyZXR1cm4gY3RzLmdldCgpOwp9CgpwdWJsaWMgc3RhdGljIHZvaWQgc2V0
Q2FsbGVyVHlwZVN1cHBsaWVyKENhbGxlclR5cGVTdXBwbGllciBwU3VwcGxpZXIpIHsKCXN5bmNo
cm9uaXplZCAoY2FsbGVyVHlwZVN1cHBsaWVyTG9jaykgewoJCWNhbGxlclR5cGVTdXBwbGllciA9
IHBTdXBwbGllcjsKCX0KfQoKcHJpdmF0ZSBzdGF0aWMgU3RyaW5nIGdldENhbGxlclR5cGVCeUNh
bGxpbmdTZXJ2aWNlKCkgewoJSURhdGEgaW5wdXQgPSBudWxsOwoJU3RyaW5nIHR5cGUgPSAiIjsK
CS8vIG91dHB1dAoJSURhdGEgb3V0cHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoJdHJ5IHsK
CQlvdXRwdXQgPSBTZXJ2aWNlLmRvSW52b2tlKCAid3gucmVzaWxpZW5jZS5pbXBsLmNhbGxlciIs
ICJnZXRDYWxsZXIiLCBpbnB1dCApOwoJCUlEYXRhTWFwIG91dHB1dE1hcCA9IG5ldyBJRGF0YU1h
cChvdXRwdXQpOwoJCUlEYXRhTWFwIGNhbGxlck1hcCA9IG5ldyBJRGF0YU1hcChvdXRwdXRNYXAu
Z2V0QXNJRGF0YSgiY2FsbGVyIikpOwoJCXJldHVybiBjYWxsZXJNYXAuZ2V0QXNTdHJpbmcoInR5
cGUiKTsKCX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7CgkJcmV0dXJuIHR5cGU7Cgl9CQp9CgoKCXBy
aXZhdGUgc3RhdGljIFN0cmluZyBnZXRDYWxsU3RhY2tBc0pTT05TdHJpbmcoQXJyYXlMaXN0PElE
YXRhQ3Vyc29yPiBlcnJvckluZm9IaWVyYWNoeSkgewoKCQlJRGF0YVtdIGNhbGxTdGFjayA9IElE
YXRhVXRpbC5nZXRJRGF0YUFycmF5KGVycm9ySW5mb0hpZXJhY2h5LmdldCgwKSwgRVJST1JfSU5G
T19DQUxMX1NUQUNLKTsKCQkKCQlTdHJpbmcganNvblN0cmluZyA9ICIiOwoJCQoJCWlmIChjYWxs
U3RhY2sgIT0gbnVsbCkgewoJCQkvLyBpbnB1dAoJCQlJRGF0YSBpbnB1dCA9IElEYXRhRmFjdG9y
eS5jcmVhdGUoKTsKCQkJSURhdGFDdXJzb3IgaW5wdXRDdXJzb3IgPSBpbnB1dC5nZXRDdXJzb3Io
KTsKCgkJCS8vIGRvY3VtZW50CgkJCUlEYXRhIGRvY3VtZW50ID0gSURhdGFGYWN0b3J5LmNyZWF0
ZSgpOwoJCQlJRGF0YUN1cnNvciBkb2N1bWVudEN1cnNvciA9IGRvY3VtZW50LmdldEN1cnNvcigp
OwoJCQlJRGF0YVV0aWwucHV0KGRvY3VtZW50Q3Vyc29yLCAiY2FsbFN0YWNrIiwgY2FsbFN0YWNr
KTsKCQkJSURhdGFVdGlsLnB1dChpbnB1dEN1cnNvciwgImRvY3VtZW50IiwgZG9jdW1lbnQpOwoJ
CQlJRGF0YVV0aWwucHV0KGlucHV0Q3Vyc29yLCAicHJldHR5UHJpbnQiLCAiZmFsc2UiKTsKCQkJ
aW5wdXRDdXJzb3IuZGVzdHJveSgpOwoKCQkJLy8gb3V0cHV0CgkJCUlEYXRhIG91dHB1dCA9IElE
YXRhRmFjdG9yeS5jcmVhdGUoKTsKCQkJdHJ5IHsKCQkJCW91dHB1dCA9IFNlcnZpY2UuZG9JbnZv
a2UoInB1Yi5qc29uIiwgImRvY3VtZW50VG9KU09OU3RyaW5nIiwgaW5wdXQpOwoJCQkJSURhdGFD
dXJzb3Igb3V0cHV0Q3Vyc29yID0gb3V0cHV0LmdldEN1cnNvcigpOwoJCQkJanNvblN0cmluZyA9
IElEYXRhVXRpbC5nZXRTdHJpbmcob3V0cHV0Q3Vyc29yLCAianNvblN0cmluZyIpOwoJCQkJb3V0
cHV0Q3Vyc29yLmRlc3Ryb3koKTsKCQkJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsKCQkJCS8vIEl0
IGlzIHBvc3NpYmxlLCB0aGF0IHRoaXMgc2VydmljZSBkb2VzIG5vdCBleGlzdHMgKFdNOC4yIGVu
dmlyb25tZW50cy9zdG9yZXMpLgoJCQkJLy8gVHJ5IGFnYWluIHdpdGggU2VydmljZSBmcm9tIFdt
SlNPTiBwYWNrYWdlOgoJCQkJLy8gVGhpcyBibG9jayBjYW4gYmUgZGVsZXRlZCwgaWYgZXZlcnkg
ZW52aXJvbm1lbnQgaXMgb24gV005LjAhCgkJCQl0cnkgewoJCQkJCW91dHB1dCA9IFNlcnZpY2Uu
ZG9JbnZva2UoInB1Yi5qc29uIiwgImRvY3VtZW50VG9KU09OIiwgaW5wdXQpOwoJCQkJCUlEYXRh
Q3Vyc29yIG91dHB1dEN1cnNvciA9IG91dHB1dC5nZXRDdXJzb3IoKTsKCQkJCQlqc29uU3RyaW5n
ID0gSURhdGFVdGlsLmdldFN0cmluZyhvdXRwdXRDdXJzb3IsICJqc29uIik7CgkJCQkJb3V0cHV0
Q3Vyc29yLmRlc3Ryb3koKTsKCQkJCX0gY2F0Y2ggKEV4Y2VwdGlvbiBpbm5lckV4KSB7CgkJCQl9
CgkJCX0KCQl9CgkJCgkJcmV0dXJuIGpzb25TdHJpbmc7Cgl9CgkKCXByaXZhdGUgc3RhdGljIEhh
c2hNYXA8U3RyaW5nLCBTdHJpbmc+IGNyZWF0ZUdlbmVyaWNWYWx1ZU1hcChFeGNlcHRpb25IYW5k
bGluZ0luZm8gaGFuZGxpbmcsIGJvb2xlYW4gYnJlYWtSZXRyeUxvb3ApIHsKCQlIYXNoTWFwPFN0
cmluZywgU3RyaW5nPiBnZW5lcmljVmFsdWVNYXAgPSBuZXcgSGFzaE1hcDxTdHJpbmcsIFN0cmlu
Zz4oKTsKCQkvLyBldmFsdWF0ZSBlcnJvclRvQmVUaHJvd246CgkJU3RyaW5nIGVycm9yVG9CZVRo
cm93biA9IGhhbmRsaW5nLmdldEVycm9yVG9CZVRocm93bigpOwoJCQoJCWludCByZXRyeUNvdW50
ID0gZ2V0UmV0cnlDb3VudCgpOwoJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9S
RVRSWV9DT1VOVCwgU3RyaW5nLnZhbHVlT2YocmV0cnlDb3VudCkpOwoKCQlTdHJpbmcgbWF4UmV0
cnlBdHRlbXB0c1N0cmluZyA9IGhhbmRsaW5nLmdldE1heFJldHJ5QXR0ZW1wdHMoKTsKCQlJbnRl
Z2VyIG1heFJldHJ5QXR0ZW1wdHMgPSBudWxsOwoJCXRyeSB7CgkJCW1heFJldHJ5QXR0ZW1wdHMg
PSBJbnRlZ2VyLnZhbHVlT2YobWF4UmV0cnlBdHRlbXB0c1N0cmluZyk7CgkJfSBjYXRjaCAoTnVt
YmVyRm9ybWF0RXhjZXB0aW9uIG5mZSkgewoJCX0JCQkJCQkKCQkKCQlpbnQgbWF4UmV0cnlBdHRl
bXB0c0JlZm9yZUFib3J0ID0gMDsKCQlTdHJpbmcgbWF4UmV0cnlBdHRlbXB0c0JlZm9yZUNhbmNl
bFJldHJ5U3RyaW5nID0gZ2V0VmFsdWVDb25mKAoJCQkJTUFYX1JFVFJZX0FUVEVNUFRTX0JFRk9S
RV9DQU5DRUxfUkVUUlksIFdYX1JFU0lMSUVOQ0UsICJ0cnVlIiwKCQkJCSIiLCAiIiwgIiIsICIi
KTsJCQoJCXRyeSB7CgkJCW1heFJldHJ5QXR0ZW1wdHNCZWZvcmVBYm9ydCA9IEludGVnZXIudmFs
dWVPZihtYXhSZXRyeUF0dGVtcHRzQmVmb3JlQ2FuY2VsUmV0cnlTdHJpbmcpOwoJCX0gY2F0Y2gg
KE51bWJlckZvcm1hdEV4Y2VwdGlvbiBuZmUpIHt9CgoJCS8vIERldGVybWluZSBlcnJvclRvQmVU
aHJvd24gYW5kIG1heFJldHJ5QXR0ZW1wdHMgYWNjb3JkaW5nIHRvIHJldHJ5IGNvbmZpZ3VyYXRp
b246CgkJaWYgKGJyZWFrUmV0cnlMb29wKSB7CgkJCS8vIGJyZWFrIGVuZGxlc3MgbG9vcCAtLT4g
b3ZlcndyaXRlIHdpdGggTk9ORSBvciBGQVRBTAoJCQlnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9B
VFRSSUJVVEVfRVJST1JfVE9fQkVfVEhST1dOX0lELCBFUlJPUl9OT05FLmVxdWFscyhlcnJvclRv
QmVUaHJvd24pP0VSUk9SX05PTkU6RVJST1JfRkFUQUwpOwoJCQlnZW5lcmljVmFsdWVNYXAucHV0
KEVIRF9BVFRSSUJVVEVfTUFYX1JFVFJZX0FUVEVNUFRTLCBTdHJpbmcudmFsdWVPZihyZXRyeUNv
dW50KSk7CgkJfSBlbHNlIGlmIChtYXhSZXRyeUF0dGVtcHRzICE9IG51bGwgJiYgbWF4UmV0cnlB
dHRlbXB0cyA9PSAtMSAmJiByZXRyeUNvdW50IDwgbWF4UmV0cnlBdHRlbXB0c0JlZm9yZUFib3J0
KSB7CgkJCS8vIGVuZGxlc3MgbG9vcCAtLT4gVFJBTlNJRU5UCgkJCWdlbmVyaWNWYWx1ZU1hcC5w
dXQoRUhEX0FUVFJJQlVURV9FUlJPUl9UT19CRV9USFJPV05fSUQsIEVSUk9SX1RSQU5TSUVOVCk7
CgkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9NQVhfUkVUUllfQVRURU1QVFMs
IG1heFJldHJ5QXR0ZW1wdHNCZWZvcmVDYW5jZWxSZXRyeVN0cmluZyk7CgkJfSBlbHNlIHsKCQkJ
Ly8gbGVzcyB0aGFuIG1heFJldHJ5QXR0ZW1wdHMgLS0+IFRSQU5TSUVOVAoJCQlpZiAobWF4UmV0
cnlBdHRlbXB0cyAhPSBudWxsICYmIHJldHJ5Q291bnQgPCBtYXhSZXRyeUF0dGVtcHRzKSB7CgkJ
CQlnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVfRVJST1JfVE9fQkVfVEhST1dOX0lE
LCBFUlJPUl9UUkFOU0lFTlQpOwoJCQkJZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRF
X01BWF9SRVRSWV9BVFRFTVBUUywgbWF4UmV0cnlBdHRlbXB0c1N0cmluZyk7CgkJCX0gZWxzZSB7
CQkJCQkKCQkJCSBpZiAoRVJST1JfTk9ORS5lcXVhbHMoZXJyb3JUb0JlVGhyb3duKSkgewoJCQkJ
CSBnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVfRVJST1JfVE9fQkVfVEhST1dOX0lE
LCBFUlJPUl9OT05FKTsKCQkJCSB9IGVsc2UgewoJCQkJCSAvLyBGaW5hbCBiZWhhdmlvciBmb3Ig
YWJvcnQKCQkJCQkgZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX0VSUk9SX1RPX0JF
X1RIUk9XTl9JRCwgRVJST1JfRkFUQUwpOwoJCQkJIH0KCQkJCSAvLyBtYXhSZXRyeUF0dGVtcHRz
IGlzIHJlYWNoZWQgb3Igd2FzIG5vdCBkZWZpbmVkICgtPiAwKQoJCQkJIFN0cmluZyBtYXhSZXRy
eUF0dGVtcHRzUmVzdWx0ID0gbWF4UmV0cnlBdHRlbXB0cyAhPSBudWxsID8gbWF4UmV0cnlBdHRl
bXB0c1N0cmluZyA6ICIwIjsKCQkJCSBnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVf
TUFYX1JFVFJZX0FUVEVNUFRTLCBtYXhSZXRyeUF0dGVtcHRzUmVzdWx0KTsKCQkJfQoJCX0KCQly
ZXR1cm4gZ2VuZXJpY1ZhbHVlTWFwOwoJfQoJCgkvKioKCSAqIEZpbHRlcnMgdGhlIGVycm9yIGhp
ZXJhcmNoeSBmb3IgdGhlIGRlZXBlc3Qgc2VydmljZSAtLT4gc2hvd3MKCSAqIGluIHdoaWNoIHNl
cnZpY2Ugb2Ygb3VyIGNvZGUgdGhlIGVycm9yIG9jY3VyZWQKCSAqIAoJICogQHBhcmFtIGhpZXJh
Y2hpY2FsRXJyb3JJbmZvCgkgKiBAcmV0dXJuIHRoZSBsZXZlbCBvZiB0aGUgZGVlcGVzdCBzZXJ2
aWNlIG5hbWUKCSAqLwoJcHJpdmF0ZSBzdGF0aWMgaW50IGdldERlZXBlc3RBcHBsaWNhdGlvblNl
cnZpY2VMZXZlbChBcnJheUxpc3Q8RXJyb3JJbmZvPiBoaWVyYWNoaWNhbEVycm9ySW5mbykgewoJ
CVN0cmluZyBzZXJ2aWNlID0gbnVsbDsKCQlmb3IgKGludCBsZXZlbCA9IGhpZXJhY2hpY2FsRXJy
b3JJbmZvLnNpemUoKSAtIDE7IGxldmVsID4gMDsgbGV2ZWwtLSkgewoJCQlzZXJ2aWNlID0gaGll
cmFjaGljYWxFcnJvckluZm8uZ2V0KGxldmVsKS5nZXRTZXJ2aWNlKCk7CgkJCS8vIGNyZWF0ZSBv
ZiBMaXN0IG9mIEZsb3duYW1lcyB0byBpZ25vcmUKCQkJTGlzdDxTdHJpbmc+IGlnbm9yZUZsb3dz
ID0gQXJyYXlzLmFzTGlzdCgid3gucmVzaWxpZW5jZS5wdWIucmVzaWxpZW5jZTp0aHJvd0Vycm9y
IiwKCQkJCQkgCQkJCQkJCQkid3gucmVzaWxpZW5jZS5wdWIucmVzaWxpZW5jZTp0aHJvd0Vycm9y
SWZOZWNlc3NhcnkiLCAKCQkJCQkJCQkJCQkJCSAid3gucmVzaWxpZW5jZS5wdWIucmVzaWxpZW5j
ZTpwb3N0UHJvY2Vzc0ZvclRvcExldmVsU2VydmljZSIpOwoJCQkKCQkJCgkJCQoJCQkKCQkJCgkJ
CWlmIChzZXJ2aWNlICE9IG51bGwgJiYgCgkJCQkhc2VydmljZS5zdGFydHNXaXRoKCJwdWIuIikg
JiYKCQkJCSFzZXJ2aWNlLnN0YXJ0c1dpdGgoIndtLiIpICYmIAoJCQkJIWlnbm9yZUZsb3dzLmNv
bnRhaW5zKHNlcnZpY2UpCgkJCSkgewoJCQkJcmV0dXJuIGxldmVsOwoJCQl9CgkJfQoKCQlyZXR1
cm4gMDsKCX0KCgkKCS8qKgoJICogTG9ncyBtZXNzYWdlIGZyb20gYSBjYXRhbG9nLgoJICogCgkg
KiBAcGFyYW0gYUZhY2lsaXR5S2V5CgkgKiAgICAgICAgICAgIGRlZmluZXMgdGhlIGZhY2lsaXR5
IGluIHRoZSBjYXRhbG9nCgkgKiBAcGFyYW0gYU1lc3NhZ2VLZXkKCSAqICAgICAgICAgICAgY29y
cmVzcG9uZHMgd2l0aCB0aGUgbWVzc2FnZSBrZXkgaW4gdGhlIGNhdGFsb2cKCSAqIEBwYXJhbSBh
TWVzc2FnZVBhcmFtcwoJICogICAgICAgICAgICBpZiBtZXNzYWdlIGluIHRoZSBjYXRhbG9nIGhh
cyBwYXJhbWV0ZXJzCgkgKiBAdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24KCSAqICAgICAgICAgICAg
IHRocm93biBpZiB0aGUgbG9nZ2luZyBmYWlsZWQKCSAqLwoJLypwcml2YXRlIHN0YXRpYyB2b2lk
IGxvZ01lc3NhZ2VGcm9tQ2F0YWxvZyhTdHJpbmcgYUZhY2lsaXR5S2V5LCBTdHJpbmcgYU1lc3Nh
Z2VLZXksIFN0cmluZ1tdIGFNZXNzYWdlUGFyYW1zKSB7CgkJLy8gaW5wdXQKCQlJRGF0YSB0SW5w
dXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CgkJSURhdGFDdXJzb3IgaW5wdXRDdXJzb3IgPSB0
SW5wdXQuZ2V0Q3Vyc29yKCk7CgkJSURhdGFVdGlsLnB1dChpbnB1dEN1cnNvciwgImZhY2lsaXR5
S2V5IiwgYUZhY2lsaXR5S2V5KTsKCQlJRGF0YVV0aWwucHV0KGlucHV0Q3Vyc29yLCAibWVzc2Fn
ZUtleSIsIGFNZXNzYWdlS2V5KTsKCQoJCS8vIFRoZXJlIGFyZSBzb21lIG1lc3NhZ2UgcGFyYW1z
IHByb3ZpZGVkCgkJaWYgKGFNZXNzYWdlUGFyYW1zLmxlbmd0aCA+IDApIHsKCQkJSURhdGFVdGls
LnB1dChpbnB1dEN1cnNvciwgIm1lc3NhZ2VQYXJhbXMiLCBhTWVzc2FnZVBhcmFtcyk7CgkJfQoJ
CWlucHV0Q3Vyc29yLmRlc3Ryb3koKTsKCQoJCXRyeSB7CgkJCVNlcnZpY2UuZG9JbnZva2UoInd4
LnJlc2lsaWVuY2UuaW1wbDoiLCAibG9nTWVzc2FnZUZyb21DYXRhbG9nIiwgdElucHV0KTsKCQl9
IAoJCWNhdGNoIChFeGNlcHRpb24gZSkgewoJCX0KCX0qLwoKCQoJcHJpdmF0ZSBzdGF0aWMgdm9p
ZCB2YWxpZGF0ZVhNTCgpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsKCQlsb2dJbmZvKCJWYWxp
ZGF0aW5nIHRoZSBzdW1tYXJpemVkIGVycm9yIGhhbmRsaW5nIik7CgkJRmlsZSB4bWxGaWxlID0g
bmV3IEZpbGUoU2VydmVyQVBJLmdldFBhY2thZ2VDb25maWdEaXIoV1hfUkVTSUxJRU5DRSkgKyAi
LyIgKyBTVU1NQVJJWkVEX0VYQ0VQVElPTl9IQU5ETElOR19GSUxFKTsKCQlGaWxlIHNjaGVtYUZp
bGUgPSBuZXcgRmlsZShTZXJ2ZXJBUEkuZ2V0UGFja2FnZUNvbmZpZ0RpcihXWF9SRVNJTElFTkNF
KSArICIvIiArIEVYQ0VQVElPTl9IQU5ETElOR19YU0RfRklMRSk7CgkJCgkJdHJ5IHsKCQkJLy8g
MS4gTG9va3VwIGEgZmFjdG9yeSBmb3IgdGhlIFczQyBYTUwgU2NoZW1hIGxhbmd1YWdlCgkJCVNj
aGVtYUZhY3RvcnkgZmFjdG9yeSA9IFNjaGVtYUZhY3RvcnkubmV3SW5zdGFuY2UoImh0dHA6Ly93
d3cudzMub3JnLzIwMDEvWE1MU2NoZW1hIik7CgkJCS8vIDIuIENvbXBpbGUgdGhlIHNjaGVtYS4K
CQkJLy8gSGVyZSB0aGUgc2NoZW1hIGlzIGxvYWRlZCBmcm9tIGEgamF2YS5pby5GaWxlLCBidXQg
eW91IGNvdWxkIHVzZQoJCQkvLyBhIGphdmEubmV0LlVSTCBvciBhIGphdmF4LnhtbC50cmFuc2Zv
cm0uU291cmNlIGluc3RlYWQuCgkJCVNjaGVtYSBzY2hlbWEgPSBmYWN0b3J5Lm5ld1NjaGVtYShz
Y2hlbWFGaWxlKTsJCgkJCS8vIDMuIEdldCBhIHZhbGlkYXRvciBmcm9tIHRoZSBzY2hlbWEuCgkJ
CVZhbGlkYXRvciB2YWxpZGF0b3IgPSBzY2hlbWEubmV3VmFsaWRhdG9yKCk7CQoJCQkvLyA0LiBQ
YXJzZSB0aGUgZG9jdW1lbnQgeW91IHdhbnQgdG8gY2hlY2suCgkJCVNvdXJjZSBzb3VyY2UgPSBu
ZXcgU3RyZWFtU291cmNlKHhtbEZpbGUpOwkKCQkJLy8gNS4gQ2hlY2sgdGhlIGRvY3VtZW50CgkJ
CXZhbGlkYXRvci52YWxpZGF0ZShzb3VyY2UpOwoJCQlsb2dJbmZvKHhtbEZpbGUuZ2V0TmFtZSgp
ICsgIiBpcyB2YWxpZCIpOwoJCX0gCgkJY2F0Y2ggKFNBWEV4Y2VwdGlvbnxJT0V4Y2VwdGlvbiBl
eCkgewoJCQlTdHJpbmcgbWVzc2FnZSA9IHhtbEZpbGUuZ2V0TmFtZSgpICsgIiBpcyBub3QgdmFs
aWQgYmVjYXVzZSBcbiIgKyBleC5nZXRNZXNzYWdlKCk7CgkJCWZpbmFsIFNlcnZpY2VFeGNlcHRp
b24gc2UgPSBuZXcgU2VydmljZUV4Y2VwdGlvbihtZXNzYWdlKTsKCQkJc2UuaW5pdENhdXNlKGV4
KTsKCQkJdGhyb3cgc2U7CgkJfQkKCX0KCglwcml2YXRlIHN0YXRpYyBTdHJpbmcgZ2V0VmFsdWVD
b25mKFN0cmluZyBrZXksIFN0cmluZyB3eENvbmZpZ1BrZ05hbWUsCgkJCVN0cmluZyBub1NlcnZp
Y2VFeGNlcHRpb24sIFN0cmluZyBzdWJzdGl0dXRlVmFyaWFibGVzLAoJCQlTdHJpbmcgaWdub3Jl
R2xvYmFsVmFsdWVzLCBTdHJpbmcgc2NhbkFsbENvbmZpZ3VyYXRpb25zLAoJCQlTdHJpbmcgbm9W
YXJpYWJsZUludGVycG9sYXRpb24pIHsKCQlTdHJpbmcgcHJvcGVydHlWYWx1ZSA9ICIgIjsKCQkv
LyBpbnB1dAoJCUlEYXRhIGNvbmZpZ1BhcmFtID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoJCUlE
YXRhQ3Vyc29yIGNvbmZpZ1BhcmFtQ3Vyc29yID0gY29uZmlnUGFyYW0uZ2V0Q3Vyc29yKCk7CgkJ
SURhdGFVdGlsLnB1dChjb25maWdQYXJhbUN1cnNvciwgImtleSIsIGtleSk7CgkJSURhdGFVdGls
LnB1dChjb25maWdQYXJhbUN1cnNvciwgInd4Q29uZmlnUGtnTmFtZSIsIHd4Q29uZmlnUGtnTmFt
ZSk7CgkJSURhdGFVdGlsLnB1dChjb25maWdQYXJhbUN1cnNvciwgIm5vU2VydmljZUV4Y2VwdGlv
biIsCgkJCQlub1NlcnZpY2VFeGNlcHRpb24pOwoJCWNvbmZpZ1BhcmFtQ3Vyc29yLmRlc3Ryb3ko
KTsKCQoJCS8vIG91dHB1dAoJCUlEYXRhIGNvbmZpZ091dHB1dCA9IElEYXRhRmFjdG9yeS5jcmVh
dGUoKTsKCQl0cnkgewoJCQljb25maWdPdXRwdXQgPSBTZXJ2aWNlLmRvSW52b2tlKCJ3eC5jb25m
aWcucHViIiwgImdldFZhbHVlIiwKCQkJCQljb25maWdQYXJhbSk7CgkJfSBjYXRjaCAoRXhjZXB0
aW9uIGUpIHsKCQkJcmV0dXJuIHByb3BlcnR5VmFsdWU7CgkJfQoJCUlEYXRhQ3Vyc29yIGNvbmZp
Z091dHB1dEN1cnNvciA9IGNvbmZpZ091dHB1dC5nZXRDdXJzb3IoKTsKCQlwcm9wZXJ0eVZhbHVl
ID0gSURhdGFVdGlsCgkJCQkuZ2V0U3RyaW5nKGNvbmZpZ091dHB1dEN1cnNvciwgInByb3BlcnR5
VmFsdWUiKTsKCQljb25maWdPdXRwdXRDdXJzb3IuZGVzdHJveSgpOwoJCWxvZ0RlYnVnKCJnZXRW
YWx1ZUNvbmYgZm9yICIgKyBrZXkgKyAiIHJldHVybnM6ICIgKyBwcm9wZXJ0eVZhbHVlKTsKCQly
ZXR1cm4gcHJvcGVydHlWYWx1ZTsKCX0KCQoJcHJpdmF0ZSBzdGF0aWMgaW50IGdldFJldHJ5Q291
bnQoKSB7CgkJSURhdGEgaW5wdXQgPSBudWxsOwoJCS8vIG91dHB1dAoJCUlEYXRhIG91dHB1dCA9
IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsKCQl0cnkgewoJCQlvdXRwdXQgPSBTZXJ2aWNlLmRvSW52
b2tlKCJwdWIuZmxvdyIsICJnZXRSZXRyeUNvdW50IiwgaW5wdXQpOwoJCQlJRGF0YUN1cnNvciBv
dXRwdXRDdXJzb3IgPSBvdXRwdXQuZ2V0Q3Vyc29yKCk7CgkJCXJldHVybiBJbnRlZ2VyLnBhcnNl
SW50KElEYXRhVXRpbC5nZXRTdHJpbmcob3V0cHV0Q3Vyc29yLCAicmV0cnlDb3VudCIpKTsKCQl9
IGNhdGNoIChFeGNlcHRpb24gZSkgewoJCQlyZXR1cm4gMDsKCQl9Cgl9CgkKCS8qKgoJICogRXh0
cmFjdHMgYW4gZXJyb3IgaGllcmFyY2h5IGZvciBhIGdpdmVuIGVycm9yIGhpZXJhcmNoeSAobm9y
bWFsbHkgb25seQoJICogZmlsbGVkIGJ5IG9uZSAocm9vdCkgZXJyb3IpLiBVc2VzIHRoZSBjYWxs
U3RhY2sgYW5kIHRoZSBkZWVwZXN0IGVycm9ySW5mbyB0byBidWlsZCBoaWVhcmNoeS4KCSAqIAoJ
ICogQHBhcmFtIHBFcnJvckhpZXJhcmNoeQoJICogICAgICAgICAgICAtIGFycmF5IGxpc3Qgb2Yg
SURhdGFDdXJzb3JzIG9uIHB1Yi5ldmVudDpleGNlcHRpb25JbmZvCgkgKiBAcmV0dXJuIGZ1bGwg
YXJyYXkgbGlzdCBhcnJheSBsaXN0IG9mIEVycm9ySW5mbyBvbgoJICogICAgICAgICBwdWIuZXZl
bnQ6ZXhjZXB0aW9uSW5mbywgY29udGFpbmluZyBhbGwgZXJyb3JzIGZyb20gcm9vdCgwKSB0bwoJ
ICogICAgICAgICBvcmlnaW4gKHNpemUgb2YgYXJyYXkgbGlzdCkKCSAqLwoJcHJpdmF0ZSBzdGF0
aWMgQXJyYXlMaXN0PEVycm9ySW5mbz4gZXh0cmFjdEVycm9ySGllcmFyY2h5KEFycmF5TGlzdDxJ
RGF0YUN1cnNvcj4gcEVycm9ySGllcmFyY2h5KSB7CQoJCWlmIChwRXJyb3JIaWVyYXJjaHkgPT0g
bnVsbCkgewoJCQlyZXR1cm4gbnVsbDsKCQl9CgkJCgkJSURhdGFDdXJzb3IgZGVlcGVzdE5lc3Rl
ZEVycm9yID0gZ2V0RGVlcGVzdE5lc3RlZEVycm9yKHBFcnJvckhpZXJhcmNoeSk7CgkJCgkJLy8g
Z2V0IGNhbGxTdGFjayBvZiBlcnJvcjoKCQlJRGF0YVtdIGNhbGxTdGFjayA9IElEYXRhVXRpbC5n
ZXRJRGF0YUFycmF5KHBFcnJvckhpZXJhcmNoeS5nZXQoMCksICJjYWxsU3RhY2siKTsKCQlBcnJh
eUxpc3Q8RXJyb3JJbmZvPiBlcnJvckluZm9MaXN0ID0gbnVsbDsKCQkKCQlpZiAoY2FsbFN0YWNr
ICE9IG51bGwpIHsKCQkJZXJyb3JJbmZvTGlzdCA9IG5ldyBBcnJheUxpc3Q8RXJyb3JJbmZvPihj
YWxsU3RhY2subGVuZ3RoKTsKCQkJCgkJCS8vIHVzZSB0aGUgZXJyb3IgYW5kIGVycm9yVHlwZSBv
ZiB0aGUgZGVlcGVzdCBlcnJvckluZm8gdG8gZGV0ZXJtaW5lIHRoZSBlcnJvciBhbmQgZXJyb3JU
eXBlIG9mIGVhY2ggbGV2ZWw6CgkJCVN0cmluZyBuZXN0ZWRFcnJvclR5cGUgPSBJRGF0YVV0aWwu
Z2V0U3RyaW5nKGRlZXBlc3ROZXN0ZWRFcnJvciwgRVJST1JfSU5GT19FUlJPUl9UWVBFKTsKCQkJ
U3RyaW5nIG5lc3RlZEVycm9yID0gSURhdGFVdGlsLmdldFN0cmluZyhkZWVwZXN0TmVzdGVkRXJy
b3IsIEVSUk9SX0lORk9fRVJST1IpOwoKCQkJLy8gdGhlIGNhbGxzdGFjayBpcyBvcmRlcmVkIGlu
dmVyc2UhCgkJCWZvciAoaW50IGkgPSBjYWxsU3RhY2subGVuZ3RoIC0gMSA7IGkgPj0gMDsgaS0t
KSB7CgkJCQkvLyB1c2UgdGhlIHNlcnZpY2UgbmFtZXMgb2YgdGhlIGNhbGxzdGFjazoKCQkJCUlE
YXRhQ3Vyc29yIGNhbGxTdGFja0N1cnNvciA9IGNhbGxTdGFja1tpXS5nZXRDdXJzb3IoKTsKCQkJ
CVN0cmluZyBzZXJ2aWNlID0gSURhdGFVdGlsLmdldFN0cmluZyhjYWxsU3RhY2tDdXJzb3IsIEVS
Uk9SX0lORk9fQ0FMTF9TVEFDS19TRVJWSUNFKTsKCQkJCVN0cmluZyBmbG93U3RlcCA9IElEYXRh
VXRpbC5nZXRTdHJpbmcoY2FsbFN0YWNrQ3Vyc29yLCBFUlJPUl9JTkZPX0NBTExfU1RBQ0tfRkxP
V19TVEVQKTsKCQkJCWlmIChmbG93U3RlcCA9PSBudWxsIHx8IGZsb3dTdGVwLmVxdWFscygiIikp
IHsKCQkJCQlmbG93U3RlcCA9ICJuLmEuIjsKCQkJCX0KCQkJCQoJCQkJZXJyb3JJbmZvTGlzdC5h
ZGQobmV3IEVycm9ySW5mbyhuZXN0ZWRFcnJvciwgbmVzdGVkRXJyb3JUeXBlLCBzZXJ2aWNlLCBm
bG93U3RlcCkpOwoJCQl9CgkJfQoJCXJldHVybiBlcnJvckluZm9MaXN0OwoJfQoJCgkvKioKCSAq
IEdldHMgdGhlIGRlZXBlc3QgZXJyb3IgaW4gdGhlIGVycm9yIGhpZXJhcmNoeQoJICogCgkgKiBA
cGFyYW0gcEVycm9ySGllcmFyY2h5CgkgKiAgICAgICAgICAgIC0gYXJyYXkgbGlzdCBvZiBJRGF0
YUN1cnNvcnMgb24gcHViLmV2ZW50OmV4Y2VwdGlvbkluZm8KCSAqIEByZXR1cm4gY3Vyc29yIG9m
IHRoZSBkZWVwZXN0IGVycm9yCgkgKi8KCXByaXZhdGUgc3RhdGljIElEYXRhQ3Vyc29yIGdldERl
ZXBlc3ROZXN0ZWRFcnJvcihBcnJheUxpc3Q8SURhdGFDdXJzb3I+IHBFcnJvckhpZXJhcmNoeSkg
ewkJCgkJCgkJSURhdGFDdXJzb3IgbmVzdGVkRXJyb3IgPSBwRXJyb3JIaWVyYXJjaHkuZ2V0KDAp
OwoJCUlEYXRhQ3Vyc29yIGN1cnJlbnRFcnJvciA9IG51bGw7CgkJSURhdGEgbmVzdGVkRXJyb3JJ
RGF0YSA9IG51bGw7CgkJZG8gewoJCQljdXJyZW50RXJyb3IgPSBuZXN0ZWRFcnJvcjsKCQkJbmVz
dGVkRXJyb3JJRGF0YSA9IElEYXRhVXRpbC5nZXRJRGF0YShjdXJyZW50RXJyb3IsIEVSUk9SX0lO
Rk9fTkVTVEVEX0VSUk9SX0lEKTsKCQkJaWYgKG5lc3RlZEVycm9ySURhdGEgIT0gbnVsbCkgewoJ
CQkJbmVzdGVkRXJyb3IgPSBuZXN0ZWRFcnJvcklEYXRhLmdldEN1cnNvcigpOwoJCQl9IGVsc2Ug
ewoJCQkJbmVzdGVkRXJyb3IgPSBudWxsOwoJCQl9CgkJfSB3aGlsZSAobmVzdGVkRXJyb3IgIT0g
bnVsbCk7CgoJCXJldHVybiBjdXJyZW50RXJyb3I7CgoJfQkKCgkvKnB1YmxpYyBzdGF0aWMgY2xh
c3MgTG9nIHsKCQlwcml2YXRlIHN0YXRpYyBmaW5hbCBMb2cgSU5TVEFOQ0UgPSBuZXcgTG9nKCk7
CgkJcHJpdmF0ZSBzdGF0aWMgZmluYWwgYm9vbGVhbiBsb2dnaW5nID0gZmFsc2U7CgoJCXB1Ymxp
YyBzdGF0aWMgdm9pZCBpbml0KCkgewoJCQlpZiAobG9nZ2luZykgewoJCQkJSU5TVEFOQ0UuaW5p
dFdyaXRlcigpOwoJCQl9CgkJfQoJCXB1YmxpYyBzdGF0aWMgdm9pZCB3cml0ZShTdHJpbmcgcE1l
c3NhZ2UpIHsKCQkJaWYgKGxvZ2dpbmcpIHsKCQkJCUlOU1RBTkNFLmxvZyhwTWVzc2FnZSk7CgkJ
CX0KCQl9CgkJcHVibGljIHN0YXRpYyB2b2lkIGNsb3NlKCkgewoJCQlpZiAobG9nZ2luZykgewoJ
CQkJSU5TVEFOQ0UuY2xvc2VXcml0ZXIoKTsKCQkJfQoJCX0KCQlwdWJsaWMgc3RhdGljIGJvb2xl
YW4gaXNMb2dnaW5nKCkgewoJCQlyZXR1cm4gbG9nZ2luZzsKCQl9CgoJCXByaXZhdGUgYm9vbGVh
biBpbml0aWFsaXplZDsKCQlwcml2YXRlIHZvaWQgaW5pdFdyaXRlcigpIHsKCQkJaW5pdGlhbGl6
ZWQgPSB0cnVlOwoJCX0KCQlwcml2YXRlIHZvaWQgY2xvc2VXcml0ZXIoKSB7CgkJCWluaXRpYWxp
emVkID0gZmFsc2U7CgkJfQoJCXByaXZhdGUgdm9pZCBsb2coU3RyaW5nIHBNZXNzYWdlKSB7CgkJ
CWlmIChpbml0aWFsaXplZCkgewoJCQkJLy8gVE9ETzoKCQkJCS8vTG9nLmxvZ1RyYWNlTWVzc2Fn
ZSgiRUhGIiwgcE1lc3NhZ2UpOwoJCQl9CgkJfQoJfSovCglwdWJsaWMgc3RhdGljIGNsYXNzIEVy
cm9ySGFuZGxpbmdFeGNlcHRpb24gZXh0ZW5kcyBSdW50aW1lRXhjZXB0aW9uIHsKCQlwcml2YXRl
IHN0YXRpYyBmaW5hbCBsb25nIHNlcmlhbFZlcnNpb25VSUQgPSAtMzk1MDEwMDc0MTYzNjQ3OTY4
MUw7CgoJCXB1YmxpYyBFcnJvckhhbmRsaW5nRXhjZXB0aW9uKFN0cmluZyBwTXNnLCBUaHJvd2Fi
bGUgcENhdXNlKSB7CgkJCXN1cGVyKHBNc2csIHBDYXVzZSk7CgkJfQoKCQlwdWJsaWMgRXJyb3JI
YW5kbGluZ0V4Y2VwdGlvbihTdHJpbmcgcE1zZykgewoJCQlzdXBlcihwTXNnKTsKCQl9CgoJCXB1
YmxpYyBFcnJvckhhbmRsaW5nRXhjZXB0aW9uKFRocm93YWJsZSBwQ2F1c2UpIHsKCQkJc3VwZXIo
cENhdXNlKTsKCQl9Cgl9CgoJcHVibGljIHN0YXRpYyBjbGFzcyBFeGNlcHRpb25IYW5kbGluZ0lu
Zm8gewoJCS8vIE9sZCByZXByZXNlbnRhdGlvbiBvZiBFeGNlcHRpb25IYW5kbGluZ0luZm8gKGRl
cHJlY2F0ZWQpCgkJcHJpdmF0ZSBmaW5hbCBMaXN0PFN0cmluZz4gc2VydmljZU5hbWVzID0gbmV3
IEFycmF5TGlzdDw+KCk7CgkJcHJpdmF0ZSBmaW5hbCBTdHJpbmcgIGVycm9yVG9CZVRocm93biwg
dHlwZSwgZXJyb3JDb2RlLCBleGNlcHRpb25UeXBlLCBtYXhSZXRyeUF0dGVtcHRzOwoJCXByaXZh
dGUgZmluYWwgYm9vbGVhbiBwcmludEJ1c2luZXNzT2JqZWN0OwoJCXB1YmxpYyBFeGNlcHRpb25I
YW5kbGluZ0luZm8oU3RyaW5nIHBFcnJvclRvQmVUaHJvd24sIFN0cmluZyBwVHlwZSwgU3RyaW5n
IHBFcnJvckNvZGUsCgkJCQkgCQkJCQkgU3RyaW5nIHBFeGNlcHRpb25UeXBlLCBTdHJpbmcgcE1h
eFJldHJ5QXR0ZW1wdHMsCgkJCQkgCQkJCQkgYm9vbGVhbiBwUHJpbnRCdXNpbmVzc09iamVjdCkg
ewoJCQllcnJvclRvQmVUaHJvd24gPSBwRXJyb3JUb0JlVGhyb3duOwoJCQl0eXBlID0gcFR5cGU7
CgkJCWVycm9yQ29kZSA9IHBFcnJvckNvZGU7CgkJCWV4Y2VwdGlvblR5cGUgPSBwRXhjZXB0aW9u
VHlwZTsKCQkJbWF4UmV0cnlBdHRlbXB0cyA9IHBNYXhSZXRyeUF0dGVtcHRzOwoJCQlwcmludEJ1
c2luZXNzT2JqZWN0ID0gcFByaW50QnVzaW5lc3NPYmplY3Q7CgkJfQoKCQlwdWJsaWMgTGlzdDxT
dHJpbmc+IGdldEhhbmRsaW5nU2VydmljZXMoKSB7CgkJCXJldHVybiBzZXJ2aWNlTmFtZXM7CgkJ
fQoKCQlwdWJsaWMgdm9pZCBhZGRTZXJ2aWNlTmFtZShTdHJpbmcgcFNlcnZpY2VOYW1lKSB7CgkJ
CXNlcnZpY2VOYW1lcy5hZGQocFNlcnZpY2VOYW1lKTsKCQl9CgoJCXB1YmxpYyBTdHJpbmcgZ2V0
RXJyb3JUb0JlVGhyb3duKCkgewoJCQlyZXR1cm4gZXJyb3JUb0JlVGhyb3duOwoJCX0KCgkJcHVi
bGljIFN0cmluZyBnZXRUeXBlKCkgewoJCQlyZXR1cm4gdHlwZTsKCQl9CgoJCXB1YmxpYyBTdHJp
bmcgZ2V0RXJyb3JDb2RlKCkgewoJCQlyZXR1cm4gZXJyb3JDb2RlOwoJCX0KCgkJcHVibGljIFN0
cmluZyBnZXRFeGNlcHRpb25UeXBlKCkgewoJCQlyZXR1cm4gZXhjZXB0aW9uVHlwZTsKCQl9CgoJ
CXB1YmxpYyBTdHJpbmcgZ2V0TWF4UmV0cnlBdHRlbXB0cygpIHsKCQkJcmV0dXJuIG1heFJldHJ5
QXR0ZW1wdHM7CgkJfQoKCQlwdWJsaWMgYm9vbGVhbiBpc1ByaW50QnVzaW5lc3NPYmplY3QoKSB7
CgkJCXJldHVybiBwcmludEJ1c2luZXNzT2JqZWN0OwoJCX0KCgkJQE92ZXJyaWRlCgkJcHVibGlj
IFN0cmluZyB0b1N0cmluZygpIHsKCQkJZmluYWwgU3RyaW5nQnVpbGRlciBzYiA9IG5ldyBTdHJp
bmdCdWlsZGVyKCk7CgkJCXNiLmFwcGVuZChzdXBlci50b1N0cmluZygpKTsKCQkJc2IuYXBwZW5k
KCI6IGVycm9yVG9CZVRocm93bj0gIik7CgkJCXNiLmFwcGVuZChlcnJvclRvQmVUaHJvd24pOwoJ
CQlzYi5hcHBlbmQoIiwgdHlwZT0iKTsKCQkJc2IuYXBwZW5kKHR5cGUpOwoJCQlzYi5hcHBlbmQo
ImVycm9yQ29kZT0iKTsKCQkJc2IuYXBwZW5kKGVycm9yQ29kZSk7CgkJCXNiLmFwcGVuZCgiLCBl
eGNlcHRpb25UeXBlPSIpOwoJCQlzYi5hcHBlbmQoZXhjZXB0aW9uVHlwZSk7CgkJCXNiLmFwcGVu
ZCgiLCBtYXhSZXRyeUF0dGVtcHRzPSIpOwoJCQlzYi5hcHBlbmQobWF4UmV0cnlBdHRlbXB0cyk7
CgkJCXNiLmFwcGVuZCgiLCBwcmludEJ1c2luZXNzT2JqZWN0PSIpOwoJCQlzYi5hcHBlbmQocHJp
bnRCdXNpbmVzc09iamVjdCk7CgkJCXNiLmFwcGVuZCgiLCBzZXJ2aWNlTmFtZXM9Iik7CgkJCS8v
IFRPRE86CgkJCS8vc2IuYXBwZW5kKFN0cmluZ3MuYXNTdHJpbmcoc2VydmljZU5hbWVzKSk7CgkJ
CXJldHVybiBzYi50b1N0cmluZygpOwoJCX0KCQkKCX0KCQoJLyoqCgkgKiBFeHRyYWN0IGhhbmRs
aW5ncyBmb3IgYW4gZXJyb3IgYXQgYSBsb2NhdGlvbiBmcm9tIGEgZ2l2ZW4gZXhjZXB0aW9uCgkg
KiBoYW5kbGluZyBkZWZpbml0aW9uCgkgKiAKCSAqIEBwYXJhbSBwRXJyb3JIYW5kbGluZwoJICog
ICAgICAgICAgICBkZWZpbml0aW9uIGFzIERPTSBkb2N1bWVudCB0byB1c2UgZm9yIGV4dHJhY3Rp
b24KCSAqIEBwYXJhbSBwTG9jYXRpb25YUGF0aAoJICogICAgICAgICAgICBlcnJvciBsb2NhdGlv
biBhcyBYUEFUSAoJICogQHBhcmFtIHBFeGNlcHRpb25UeXBlCgkgKiAgICAgICAgICAgIGVycm9y
IHR5cGUgYXMgU3RyaW5nCgkgKiBAcGFyYW0gY3VycmVudENhbGxlclR5cGUKCSAqICAgICAgICAg
ICAgY2FsbGVyIHR5cGUgYXMgU3RyaW5nCQoJICogQHBhcmFtIGN1cnJlbnRFcnJvck1lc3NhZ2UK
CSAqICAgICAgICAgICAgb3JpZ2luYWwgZXJyb3IgYXMgU3RyaW5nIAoJICogQHJldHVybiBhbGwg
Zm91bmQgaGFuZGxpbmdzIGZvciB0aGUgZ2l2ZW4gZXJyb3IgYXMgYW4gYXJyYXkgbGlzdCwgZW1w
dHkKCSAqICAgICAgICAgbGlzdCBpbiBjYXNlIG9mIG5vIGZvdW5kIGVycm9yCgkgKiBAdGhyb3dz
IFNlcnZpY2VFeGNlcHRpb24KCSAqLwoJQFN1cHByZXNzV2FybmluZ3MoInVuY2hlY2tlZCIpCglw
cml2YXRlIHN0YXRpYyBFeGNlcHRpb25IYW5kbGluZ0luZm8gZ2V0SGFuZGxpbmdzRm9yTG9jYXRp
b24oCgkJCURvY3VtZW50IHBFcnJvckhhbmRsaW5nLCBTdHJpbmcgcExvY2F0aW9uWFBhdGgsCgkJ
CVN0cmluZyBwRXhjZXB0aW9uVHlwZSwgU3RyaW5nIGN1cnJlbnRDYWxsZXJUeXBlLCBTdHJpbmcg
Y3VycmVudEVycm9yTWVzc2FnZSkKCQkJdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewoJCWxvZ0Rl
YnVnKCJnZXRIYW5kbGluZ3NGb3JMb2NhdGlvbjogLS0+ICIgKyBwTG9jYXRpb25YUGF0aCArICIs
ICIgKyBwRXhjZXB0aW9uVHlwZSArICIsICIgKyBjdXJyZW50Q2FsbGVyVHlwZSArICIsICIgKyBj
dXJyZW50RXJyb3JNZXNzYWdlKTsKCgkJLy8gZ2V0IGV4Y2VwdGlvbiBsaXN0IGZvciBsb2NhdGlv
bgoJCUxpc3Q8RWxlbWVudD4gZXhjZXB0aW9uTm9kZXMgPSBudWxsOwoJCXRyeSB7CgkJCWV4Y2Vw
dGlvbk5vZGVzID0gKExpc3Q8RWxlbWVudD4pIFhQYXRoLnNlbGVjdE5vZGVzKHBFcnJvckhhbmRs
aW5nLCBwTG9jYXRpb25YUGF0aCk7CgkJfSAKCQljYXRjaCAoSkRPTUV4Y2VwdGlvbiBlKSB7CgkJ
CWxvZ0Vycm9yKCJKRE9NIEVycm9yIGR1cmluZyBleHRyYWN0aW9uIG9mIGVycm9yIHR5cGVzIGZy
b20gZXhjZXB0aW9uIGhhbmRsaW5nIGRlZmluaXRpb246ICIgKyBlLmdldE1lc3NhZ2UoKSk7CgkJ
CWxvZ0RlYnVnKCJnZXRIYW5kbGluZ3NGb3JMb2NhdGlvbjogPC0tIG51bGwgKEpET01FeGNlcHRp
b246ICIgKyBlLmdldE1lc3NhZ2UoKSArICIpIik7CgkJCXJldHVybiBudWxsOwoJCX0KICAgICAg
ICAvLyBjaGVjayBleGNlcHRpb24gbm9kZXMgc2FuaXR5CgkJaWYgKGV4Y2VwdGlvbk5vZGVzID09
IG51bGwgfHwgZXhjZXB0aW9uTm9kZXMuaXNFbXB0eSgpKSB7CgkJCWxvZ0RlYnVnKCJnZXRIYW5k
bGluZ3NGb3JMb2NhdGlvbjogPC0tIG51bGwgKE5vIGV4Y2VwdGlvbk5vZGVzKSIpOwoJCQlyZXR1
cm4gbnVsbDsKCQl9CQkJCgkJCgkJLy8gZXh0cmFjdCBleGNlcHRpb25zIGZyb20gbGlzdCwgaWYg
bG9jYXRpb24gZXhpc3RzIGFuZCBleGNlcHRpb24KCQkvLyBkZWZpbml0aW9ucyBhcmUgY29udGFp
bmVkCgkJLy8gaXRlcmF0aW9uIG92ZXIgYWxsIGRlZmluZWQgZXhjZXB0aW9ucyBpbiBsb2NhdGlv
bgoJCUV4Y2VwdGlvbkhhbmRsaW5nSW5mbyBleGNlcHRpb25IYW5kbGluZ0luZm8gPSBudWxsOwoJ
CUVsZW1lbnQgZXhjZXB0aW9uSGFuZGxpbmdFbGVtZW50ID0gbnVsbDsKCQlmb3IgKEVsZW1lbnQg
ZXhjZXB0aW9uTm9kZSA6IGV4Y2VwdGlvbk5vZGVzKSB7CgkJCWJvb2xlYW4gaXNFcnJvck1lc3Nh
Z2VDb250YWluc0NoZWNrVHJ1ZSA9IGZhbHNlOwoJCQlmaW5hbCBTdHJpbmcgZXJyb3JNZXNzYWdl
Q29udGFpbnNGcm9tRGVmaW5pdGlvbiA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUo
RUhEX0FUVFJJQlVURV9FUlJPUl9NRVNTQUdFX0NPTlRBSU5TKTsKCQkJaWYgKGVycm9yTWVzc2Fn
ZUNvbnRhaW5zRnJvbURlZmluaXRpb24gPT0gbnVsbCB8fAoJCQkJKGN1cnJlbnRFcnJvck1lc3Nh
Z2UgIT0gbnVsbCAmJgoJCQkJZXJyb3JNZXNzYWdlQ29udGFpbnNGcm9tRGVmaW5pdGlvbiAhPSBu
dWxsICYmCgkJCQljdXJyZW50RXJyb3JNZXNzYWdlLmNvbnRhaW5zKGVycm9yTWVzc2FnZUNvbnRh
aW5zRnJvbURlZmluaXRpb24pKSkgCgkJCXsKCQkJCWlzRXJyb3JNZXNzYWdlQ29udGFpbnNDaGVj
a1RydWUgPSB0cnVlOwoJCQl9CgoJCQkvLyBDaGVjayBmb3Igb3B0aW9uYWwgYXR0cmlidXQgZXJy
b3JNZXNzYWdlUmVnZXg6CgkJCWJvb2xlYW4gaXNFcnJvck1lc3NhZ2VSZWdleENoZWNrVHJ1ZSA9
IGZhbHNlOwoJCQlmaW5hbCBTdHJpbmcgZXJyb3JNZXNzYWdlUmVnZXhGcm9tRGVmaW5pdGlvbiA9
IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVURV9FUlJPUl9NRVNT
QUdFX1JFR0VYX0lEKTsKCQkJaWYgKGVycm9yTWVzc2FnZVJlZ2V4RnJvbURlZmluaXRpb24gPT0g
bnVsbCB8fAoJCQkJKGN1cnJlbnRFcnJvck1lc3NhZ2UgIT0gbnVsbCAmJgoJCQkJZXJyb3JNZXNz
YWdlUmVnZXhGcm9tRGVmaW5pdGlvbiAhPSBudWxsICYmCgkJCQljdXJyZW50RXJyb3JNZXNzYWdl
Lm1hdGNoZXMoZXJyb3JNZXNzYWdlUmVnZXhGcm9tRGVmaW5pdGlvbikpKSAKCQkJewoJCQkJaXNF
cnJvck1lc3NhZ2VSZWdleENoZWNrVHJ1ZSA9IHRydWU7CgkJCX0KCQkJCgkJCS8vIENoZWNrIGZv
ciBvcHRpb25hbCBhdHRyaWJ1dCBjYWxsZXJUeXBlOgoJCQlib29sZWFuIGlzQ2FsbGVyVHlwZUNo
ZWNrVHJ1ZSA9IGZhbHNlOwoJCQlmaW5hbCBTdHJpbmcgY2FsbGVyVHlwZUZyb21EZWZpbml0aW9u
ID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX0VSUk9SX0NB
TExFUl9UWVBFX0lEKTsKCQkJaWYgKGNhbGxlclR5cGVGcm9tRGVmaW5pdGlvbiA9PSBudWxsIHx8
CgkJCQkoY3VycmVudENhbGxlclR5cGUgIT0gbnVsbCAmJgoJCQkJY2FsbGVyVHlwZUZyb21EZWZp
bml0aW9uICE9IG51bGwgJiYKCQkJCWN1cnJlbnRDYWxsZXJUeXBlLmVxdWFscyhjYWxsZXJUeXBl
RnJvbURlZmluaXRpb24pKSkgCgkJCXsKCQkJCWlzQ2FsbGVyVHlwZUNoZWNrVHJ1ZSA9IHRydWU7
CgkJCX0KCQkJCgkJCS8vIGlmIGRlZmluZWQgZXhjZXB0aW9uIHR5cGUgZXF1YWxzIGV4Y2VwdGlv
biwgc2V0IGhhbmRsaW5nIGFuZAoJCQkvLyBleGl0IGxvb3AKCQkJZmluYWwgU3RyaW5nIGV4Y2Vw
dGlvblR5cGVGcm9tRGVmaW5pdGlvbiA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUo
RUhEX0FUVFJJQlVURV9FUlJPUl9UWVBFX0lEKTsKCQkJaWYgKGV4Y2VwdGlvblR5cGVGcm9tRGVm
aW5pdGlvbi5lcXVhbHMocEV4Y2VwdGlvblR5cGUpICYmIGlzRXJyb3JNZXNzYWdlQ29udGFpbnND
aGVja1RydWUgJiYgaXNFcnJvck1lc3NhZ2VSZWdleENoZWNrVHJ1ZSAmJiBpc0NhbGxlclR5cGVD
aGVja1RydWUpIHsKCQkJCWV4Y2VwdGlvbkhhbmRsaW5nSW5mbyA9IGdldFJldFZhbChleGNlcHRp
b25Ob2RlLCBwRXhjZXB0aW9uVHlwZSk7CgkJCQlleGNlcHRpb25IYW5kbGluZ0VsZW1lbnQgPSBl
eGNlcHRpb25Ob2RlOwoJCQkJYnJlYWs7CgkJCX0JCgkJCSAgCgkJCS8vIGlmIGdlbmVyaWMgaGFu
ZGxpbmcgaXMgYWxsb3dlZCBhbmQgZGVmaW5lZCAodHlwZT0iYWxsIiksIHNldCAoY2FjaGUpCgkJ
CS8vIGdlbmVyaWMgaGFuZGxpbmcKCQkJZWxzZSBpZiAoZXhjZXB0aW9uVHlwZUZyb21EZWZpbml0
aW9uLmVxdWFscyhFSERfVkFMVUVfR0VORVJJQ19FUlJPUl9UWVBFX0lEKSAmJiBpc0Vycm9yTWVz
c2FnZUNvbnRhaW5zQ2hlY2tUcnVlICYmIGlzRXJyb3JNZXNzYWdlUmVnZXhDaGVja1RydWUgJiYg
aXNDYWxsZXJUeXBlQ2hlY2tUcnVlKSB7CgkJCQlleGNlcHRpb25IYW5kbGluZ0luZm8gPSBnZXRS
ZXRWYWwoZXhjZXB0aW9uTm9kZSwgcEV4Y2VwdGlvblR5cGUpOwoJCQkJZXhjZXB0aW9uSGFuZGxp
bmdFbGVtZW50ID0gZXhjZXB0aW9uTm9kZTsKCQkJCWJyZWFrOwoJCQl9CgkJfQoKCQlpZiAoZXhj
ZXB0aW9uSGFuZGxpbmdFbGVtZW50ID09IG51bGwpIHsKCQkJcmV0dXJuIG51bGw7CgkJfSBlbHNl
IHsKCQkJLy8gY2hlY2sgaGFuZGxpbmcgbm9kZXMgc2FuaXR5CgkJCWZvciAoT2JqZWN0IG4gOiBl
eGNlcHRpb25IYW5kbGluZ0VsZW1lbnQuZ2V0Q2hpbGRyZW4oRUhEX0FUVFJJQlVURV9IQU5ETElO
RykpIHsKCQkJCQlleGNlcHRpb25IYW5kbGluZ0luZm8uYWRkU2VydmljZU5hbWUoKChFbGVtZW50
KSBuKS5nZXRUZXh0KCkpOwoJCQl9CgoJCQlsb2dEZWJ1ZygiZ2V0SGFuZGxpbmdzRm9yTG9jYXRp
b246IDwtLSAiICsgZXhjZXB0aW9uSGFuZGxpbmdJbmZvKTsKCQkJcmV0dXJuIGV4Y2VwdGlvbkhh
bmRsaW5nSW5mbzsKCQl9CgkJCgl9CgkKCXByaXZhdGUgc3RhdGljIEV4Y2VwdGlvbkhhbmRsaW5n
SW5mbyBnZXRSZXRWYWwoRWxlbWVudCBleGNlcHRpb25Ob2RlLCBTdHJpbmcgZXhjZXB0aW9uVHlw
ZSkgewkKCQlmaW5hbCBTdHJpbmcgZXJyb3JUb0JlVGhyb3duID0gZXhjZXB0aW9uTm9kZS5nZXRB
dHRyaWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX0VSUk9SX1RPX0JFX1RIUk9XTl9JRCk7CgkJZmlu
YWwgU3RyaW5nIHR5cGUgPSBleGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9BVFRS
SUJVVEVfRVJST1JfVFlQRV9JRCk7CgkJZmluYWwgU3RyaW5nIGV4Y2VwdGlvbkhhbmRsaW5nSWQg
PSBleGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9BVFRSSUJVVEVfRVJST1JfSEFO
RExJTkdfSURfSUQpOwoJCWZpbmFsIFN0cmluZyBtYXhSZXRyeUF0dGVtcHRzID0gZXhjZXB0aW9u
Tm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX01BWF9SRVRSWV9BVFRFTVBUUyk7
CgkJZmluYWwgU3RyaW5nIHByaW50QnVzaW5lc3NPYmplY3RTdHIgPSBleGNlcHRpb25Ob2RlLmdl
dEF0dHJpYnV0ZVZhbHVlKEVIRF9QUklOVF9CVVNJTkVTU19PQkpFQ1RfSUQpOwoJCWZpbmFsIGJv
b2xlYW4gcHJpbnRCdXNpbmVzc09iamVjdCA9IHByaW50QnVzaW5lc3NPYmplY3RTdHIgPT0gbnVs
bCA/IGZhbHNlIDogQm9vbGVhbi5wYXJzZUJvb2xlYW4ocHJpbnRCdXNpbmVzc09iamVjdFN0cik7
CgkJcmV0dXJuIG5ldyBFeGNlcHRpb25IYW5kbGluZ0luZm8oZXJyb3JUb0JlVGhyb3duLCB0eXBl
LCBleGNlcHRpb25IYW5kbGluZ0lkLCBleGNlcHRpb25UeXBlLCBtYXhSZXRyeUF0dGVtcHRzLCBw
cmludEJ1c2luZXNzT2JqZWN0KTsKCX0KCQoKCXByaXZhdGUgc3RhdGljIElEYXRhIGJ1aWxkQ29t
cGFjdEVycm9ySW5mbyhTdHJpbmcgcEVycm9yTG9jYXRpb24sIFN0cmluZyBmbG93U3RlcCkgewoJ
CUlEYXRhIGNvbXBhY3RFcnJvckluZm8gPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CgkJSURhdGFD
dXJzb3IgY29tcGFjdEVycm9ySW5mb0N1cnNvciA9IGNvbXBhY3RFcnJvckluZm8uZ2V0Q3Vyc29y
KCk7CgoJCUlEYXRhVXRpbC5wdXQoY29tcGFjdEVycm9ySW5mb0N1cnNvciwgQ09NUEFDVF9FUlJP
Ul9MT0NBVElPTl9JRCwgcEVycm9yTG9jYXRpb24pOwoJCUlEYXRhVXRpbC5wdXQoY29tcGFjdEVy
cm9ySW5mb0N1cnNvciwgQ09NUEFDVF9FUlJPUl9GTE9XX1NURVAsIGZsb3dTdGVwKTsKCgkJY29t
cGFjdEVycm9ySW5mb0N1cnNvci5kZXN0cm95KCk7CgoJCXJldHVybiBjb21wYWN0RXJyb3JJbmZv
OwoJfQoJCQoJQFN1cHByZXNzV2FybmluZ3MoInJhd3R5cGVzIikKCXByaXZhdGUgc3RhdGljIGZp
bmFsIE5TU2VydmljZSBnZXRDdXJyZW50VG9wTGV2ZWxTZXJ2aWNlKCkgewoJCU5TU2VydmljZSB0
b3BMZXZlbFNlcnZpY2VOYW1lID0gbnVsbDsKCQlJbnZva2VTdGF0ZSBzdGF0ZSA9IEludm9rZVN0
YXRlLmdldEN1cnJlbnRTdGF0ZSgpOwoJCWlmIChzdGF0ZSAhPSBudWxsKSB7CgkJCVN0YWNrIGNh
bGxTdGFjayA9IHN0YXRlLmdldENhbGxTdGFjaygpOwoJCQlpZiAoY2FsbFN0YWNrICE9IG51bGwg
JiYgY2FsbFN0YWNrLnNpemUoKSA+IDApIHsKCQkJCXRvcExldmVsU2VydmljZU5hbWUgPSAoTlNT
ZXJ2aWNlKSBjYWxsU3RhY2suZWxlbWVudEF0KDApOwoJCQl9CgkJfQoJCXJldHVybiB0b3BMZXZl
bFNlcnZpY2VOYW1lOwoJfQoJCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgZ2V0TWVzc2Fn
ZVVJRChJRGF0YSBtZXRhRGF0YSkgewoJCWlmKG1ldGFEYXRhICE9IG51bGwpIHsKCQkJSURhdGFN
YXAgbWV0YURhdGFNYXAgPSBuZXcgSURhdGFNYXAobWV0YURhdGEpOwoJCQlyZXR1cm4gbWV0YURh
dGFNYXAuZ2V0QXNTdHJpbmcoVUlEX0lEKTsKCQl9CgkJcmV0dXJuIG51bGw7Cgl9CgoJcHVibGlj
IHN0YXRpYyB2b2lkIGluaXRIYW5kbGluZ3MoVVJMIHBVcmwsIFNBWEJ1aWxkZXIgcEJ1aWxkZXIp
IHsKCQlmaW5hbCBTQVhCdWlsZGVyIGJ1aWxkZXI7CgkJaWYgKHBCdWlsZGVyID09IG51bGwpIHsK
CQkJYnVpbGRlciA9IG5ldyBTQVhCdWlsZGVyKCk7CgkJfSBlbHNlIHsKCQkJYnVpbGRlciA9IHBC
dWlsZGVyOwoJCX0KCQlmaW5hbCBEb2N1bWVudCBkb2MgPSBsb2FkSGFuZGxpbmdzKHBVcmwsIGJ1
aWxkZXIpOwoJCXN5bmNocm9uaXplZChleGNlcHRpb25IYW5kbGluZ0xvY2spIHsKCQkJX2V4Y2Vw
dGlvbkhhbmRsaW5nID0gZG9jOwoJCX0KCX0KCQoJcHJpdmF0ZSBzdGF0aWMgRG9jdW1lbnQgbG9h
ZEhhbmRsaW5ncyhVUkwgcEZpbGUsIFNBWEJ1aWxkZXIgcEJ1aWxkZXIpIHsKCQkvLyBMb2FkIGV4
Y2VwdGlvbiBoYW5kbGluZyBkZWZpbml0aW9uIGZpbGUKCQkKCQl0cnkgewoJCQlmaW5hbCBEb2N1
bWVudCBlaGQgPSBwQnVpbGRlci5idWlsZChwRmlsZSk7CgkJCgkJCWxvZ0luZm8oIlN1Y2Nlc3Nm
dWxseSBpbml0aWFsaXplZCBlcnJvciBoYW5kbGluZyIpOwoJCQlyZXR1cm4gZWhkOwoJCX0gCgkJ
Y2F0Y2ggKEpET01FeGNlcHRpb24gZSkgewoJCQlsb2dFcnJvcigiSkRPTSBFcnJvciBkdXJpbmcg
aW5pdGlhbGl6YXRpb24gb2YgZXJyb3IgaGFuZGxpbmc6ICIgKyBlLmdldE1lc3NhZ2UoKSk7CgkJ
CXRocm93IG5ldyBVbmRlY2xhcmVkVGhyb3dhYmxlRXhjZXB0aW9uKGUpOwoJCX0gCgkJY2F0Y2gg
KElPRXhjZXB0aW9uIGUpIHsKCQkJbG9nRXJyb3IoIklPIEVycm9yIGR1cmluZyBpbml0aWFsaXph
dGlvbiBvZiBlcnJvciBoYW5kbGluZzogIiArIGUuZ2V0TWVzc2FnZSgpKTsKCQkJdGhyb3cgbmV3
IFVuZGVjbGFyZWRUaHJvd2FibGVFeGNlcHRpb24oZSk7CgkJfQoJfQoKCglwcml2YXRlIHN0YXRp
YyBTdHJpbmcgYXNTdHJpbmcoU3RyaW5nW10gdGVtcFBhcnRzKSB7CgkJU3RyaW5nQnVpbGRlciBi
dWlsZGVyID0gbmV3IFN0cmluZ0J1aWxkZXIoKTsKCQlmb3IgKFN0cmluZyBzdHJpbmcgOiB0ZW1w
UGFydHMpIHsKCQkJYnVpbGRlci5hcHBlbmQoc3RyaW5nKS5hcHBlbmQoIiwiKTsKCQl9CgkJcmV0
dXJuIGJ1aWxkZXIudG9TdHJpbmcoKTsKCX0KCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcg
TE9HX1NWQ19QQVRIID0gInd4LnJlc2lsaWVuY2UuaW1wbC5sb2dFcnJvciI7CgoJcHVibGljIHN0
YXRpYyB2b2lkIGxvZ0luZm8oU3RyaW5nIG1lc3NhZ2UpIHsKCQlsb2dJbXBsKG1lc3NhZ2UsICJJ
bmZvIik7Cgl9CgkKCXB1YmxpYyBzdGF0aWMgdm9pZCBsb2dXYXJuKFN0cmluZyBtZXNzYWdlKSB7
CgkJbG9nSW1wbChtZXNzYWdlLCAiV2FybiIpOwoJfQoJCglwdWJsaWMgc3RhdGljIHZvaWQgbG9n
RXJyb3IoU3RyaW5nIG1lc3NhZ2UpIHsKCQlsb2dJbXBsKG1lc3NhZ2UsICJFcnJvciIpOwoJfQoK
CXB1YmxpYyBzdGF0aWMgdm9pZCBsb2dUcmFjZShTdHJpbmcgbWVzc2FnZSkgewoJCWxvZ0ltcGwo
bWVzc2FnZSwgIlRyYWNlIik7Cgl9CgkKCXB1YmxpYyBzdGF0aWMgdm9pZCBsb2dEZWJ1ZyhTdHJp
bmcgbWVzc2FnZSkgewoJCWxvZ0ltcGwobWVzc2FnZSwgIkRlYnVnIik7Cgl9CgkKCXB1YmxpYyBz
dGF0aWMgdm9pZCBsb2dGYXRhbChTdHJpbmcgbWVzc2FnZSkgewoJCWxvZ0ltcGwobWVzc2FnZSwg
IkZhdGFsIik7Cgl9CgkKCXByaXZhdGUgc3RhdGljIHZvaWQgbG9nSW1wbChTdHJpbmcgbWVzc2Fn
ZSwgU3RyaW5nIGxldmVsKSB7CgkJSURhdGEgaW5wdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7
CgkJSURhdGFNYXAgaW5wdXRNYXAgPSBuZXcgSURhdGFNYXAoaW5wdXQpOwoJCWlucHV0TWFwLnB1
dCgibWVzc2FnZSIsIG1lc3NhZ2UpOwoJCWlucHV0TWFwLnB1dCgiZnVuY3Rpb24iLCBXWF9SRVNJ
TElFTkNFX0VSUk9SKTsKCQlpbnB1dE1hcC5wdXQoImxldmVsIiwgbGV2ZWwpOwoJCQoJCXRyeSB7
CgkJCVNlcnZpY2UuZG9JbnZva2UoTE9HX1NWQ19QQVRILCAibG9nIiwgaW5wdXQpOwoJCX0gCgkJ
Y2F0Y2ggKEV4Y2VwdGlvbiBlKSB7CgkJfQoJfQoJCgkvLyAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCgkvLyAtLS0tLS0t
LS0tLS0tLS0tLS0tLS1YTUwgTk9ERSBOQU1FIERFRklOSVRJT05TLS0tLS0tLS0tLS0tLS0tLS0t
LS0tCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX05PREVf
RE9DX1JPT1RfSUQgPSAiZXhjZXB0aW9uSGFuZGxpbmciOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwg
U3RyaW5nIEVIRF9OT0RFX0dMT0JBTF9FUlJPUl9UWVBFX0lEID0gImdsb2JhbEV4Y2VwdGlvbiI7
Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX05PREVfRVJST1JfTE9DQVRJT05fSUQg
PSAibG9jYXRpb24iOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9OT0RFX0VSUk9S
X1RZUEVfSUQgPSAiZXhjZXB0aW9uIjsKCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCgkvLyAtLS0tLS0tLS0tLS0t
LS0tLS0tWE1MIE5PREUgQVRUUklCVVRFIERFRklOSVRJT05TLS0tLS0tLS0tLS0tLS0tLS0tCgkv
LyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9F
UlJPUl9UWVBFX0lEID0gInR5cGUiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9B
VFRSSUJVVEVfRVJST1JfQ0FMTEVSX1RZUEVfSUQgPSAiY2FsbGVyVHlwZSI7CQkKCXByaXZhdGUg
c3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0VSUk9SX01FU1NBR0VfQ09OVEFJTlMg
PSAiZXJyb3JNZXNzYWdlQ29udGFpbnMiOwkJCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcg
RUhEX0FUVFJJQlVURV9FUlJPUl9NRVNTQUdFX1JFR0VYX0lEID0gImVycm9yTWVzc2FnZVJlZ2V4
IjsJCQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfTE9DQVRJT05f
TkFNRV9JRCA9ICJuYW1lIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklC
VVRFX0VSUk9SX1RPX0JFX1RIUk9XTl9JRCA9ICJlcnJvclRvQmVUaHJvd24iOwoJcHJpdmF0ZSBz
dGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfRVJST1JfSEFORExJTkdfSURfSUQgPSAi
ZXhjZXB0aW9uSGFuZGxpbmdJZCI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FU
VFJJQlVURV9IQU5ETElORz0gImhhbmRsaW5nIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmlu
ZyBFSERfQVRUUklCVVRFX01BWF9SRVRSWV9BVFRFTVBUUyA9ICJtYXhSZXRyeUF0dGVtcHRzIjsK
CXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX1JFVFJZX0NPVU5UID0g
InJldHJ5Q291bnQiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVf
RlVOQ1RJT04gPSAiQFd4UmVzaWxpZW5jZS5sb2dnaW5nLmZ1bmN0aW9uQCI7Cglwcml2YXRlIHN0
YXRpYyBmaW5hbCBTdHJpbmcgRUhEX1BSSU5UX0JVU0lORVNTX09CSkVDVF9JRCA9ICJwcmludEJ1
c2luZXNzT2JqZWN0IjsKCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCgkvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS1Y
TUwgTk9ERSBWQUxVRSBERUZJTklUSU9OUy0tLS0tLS0tLS0tLS0tLS0tLS0tCgkvLyAqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX1ZBTFVFX0dFTkVSSUNfRVJST1Jf
VFlQRV9JRCA9ICJhbGwiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9WQUxVRV9H
TE9CQUxfRVJST1JfSEFORExJTkdfSUQgPSAiZ2xvYmFsIjsKCgkvLyAqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCgkvLyAt
LS0tLS0tLS0tLS0tLS0tLS1JTlBVVCBFUlJPUiBGSUVMRCBJRCBERUZJTklUSU9OUy0tLS0tLS0t
LS0tLS0tLS0tCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJS
T1JfSU5GT19JRCA9ICJleGNlcHRpb25JbmZvIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmlu
ZyBFWENMVURFX1NFUlZJQ0UgPSAiQFd4UmVzaWxpZW5jZS5lcnJvckhhbmRsaW5nLmV4Y2x1ZGVT
ZXJ2aWNlRnJvbUVycm9ySGFuZGxpbmdAIjsKCQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5n
IEVSUk9SX0lORk9fRVJST1IgPSAiZXJyb3IiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5n
IEVSUk9SX0lORk9fRVJST1JfVFlQRSA9ICJlcnJvclR5cGUiOwoJcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgU3RyaW5nIEVSUk9SX0lORk9fQ0FMTF9TVEFDS19TRVJWSUNFID0gInNlcnZpY2UiOwoJcHJp
dmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fQ0FMTF9TVEFDS19GTE9XX1NURVAg
PSAiZmxvd1N0ZXAiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fQ0FM
TF9TVEFDSyA9ICJjYWxsU3RhY2siOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9S
X0lORk9fRVJST1JfRFVNUCA9ICJlcnJvckR1bXAiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3Ry
aW5nIEVSUk9SX0lORk9fVElNRSA9ICJ0aW1lIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmlu
ZyBFUlJPUl9JTkZPX05FU1RFRF9FUlJPUl9JRCA9ICJuZXN0ZWRFcnJvckluZm8iOwoKCXByaXZh
dGUgc3RhdGljIGZpbmFsIFN0cmluZyBHRU5FUklDX1ZBTFVFX01BUF9JRCA9ICJnZW5lcmljVmFs
dWVNYXAiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEdFTkVSSUNfRVJST1JfTUVTU0FH
RV9JRCA9ICJnZW5lcmljRXJyb3JNZXNzYWdlIjsKCgkvLyAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCgkvLyAtLS0tLS0t
LS0tLS0tLU9VVFBVVCBIQU5ETEVEIEVSUk9SIEZJRUxEIElEIERFRklOSVRJT05TLS0tLS0tLS0t
LS0tCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9F
UlJPUl9JTkZPX0lEID0gImhhbmRsZWRFcnJvckluZm8iOwoJCglwcml2YXRlIHN0YXRpYyBmaW5h
bCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX1JPT1RfSUQgPSAidG9wU2VydmljZUVycm9yIjsK
CXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fSEFORExFRF9J
RCA9ICJoYW5kbGVkU2VydmljZUVycm9yIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBI
QU5ETEVEX0VSUk9SX0lORk9fQVBQTElDQVRJT05fU0VSVklDRV9JRCA9ICJhcHBsaWNhdGlvblNl
cnZpY2VFcnJvciI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9J
TkZPX09SSUdJTl9JRCA9ICJyb290U2VydmljZUVycm9yIjsKCglwcml2YXRlIHN0YXRpYyBmaW5h
bCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0hBTkRMSU5HX0xPQ0FUSU9OX0lEID0gImhhbmRs
aW5nTG9jYXRpb24iOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1Jf
SU5GT19IQU5ETElOR19UWVBFX0lEID0gImhhbmRsaW5nVHlwZSI7Cglwcml2YXRlIHN0YXRpYyBm
aW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0RFUFRIX0lEID0gImVycm9yRGVwdGgiOwoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19FUlJPUl9DT0RF
ID0gImVycm9yQ29kZSI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJP
Ul9JTkZPX0NBTExfU1RBQ0sgPSAiY2FsbFN0YWNrIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0
cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fRVJST1JfRFVNUCA9ICJlcnJvckR1bXAiOwoJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19USU1FID0gInRpbWUiOwoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19QSVBFTElORSA9
ICJwaXBlbGluZSI7CgoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX01TR19JRCA9
ICJlcnJvck1lc3NhZ2UiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIENPTVBBQ1RfRVJS
T1JfTE9DQVRJT05fSUQgPSAiZXJyb3JMb2NhdGlvbiI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBT
dHJpbmcgQ09NUEFDVF9FUlJPUl9GTE9XX1NURVAgPSAiZXJyb3JGbG93U3RlcCI7Cglwcml2YXRl
IHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfVFlQRV9JRCA9ICJlcnJvclR5cGUiOwoKCS8vICoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKCS8vIC0tLS0tLS0tLS0tLS0tLS0tLS1HRU5FUklDIERPQyBGSUVMRCBJRCBERUZJ
TklUSU9OUy0tLS0tLS0tLS0tLS0tLS0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKCXByaXZhdGUgc3RhdGljIGZp
bmFsIFN0cmluZyBCVVNJTkVTU19ET0NfSUQgPSAiYnVzaW5lc3NPYmplY3QiOwoJcHJpdmF0ZSBz
dGF0aWMgZmluYWwgU3RyaW5nIFBSSU5UX0JVU0lORVNTX09CSkVDVF9JRCA9ICJwcmludEJ1c2lu
ZXNzT2JqZWN0IjsKCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCgkvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLUVYQ0VQ
VElPTiBIQU5ETElORyBERUZJTklUSU9OLS0tLS0tLS0tLS0tLS0tLS0tCgkvLyAqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgTUVUQURBVEFfSUQgPSAid3hNZXRhRGF0YSI7
Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgTE9HR0lOR19GVU5DVElPTiA9ICJAV3hSZXNp
bGllbmNlLmxvZ2dpbmcuZnVuY3Rpb25AIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBV
SURfSUQgPSAidXVpZCI7CgoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1F
WENFUFRJT04gSEFORExJTkcgREVGSU5JVElPTi0tLS0tLS0tLS0tLS0tLS0tLQoJLy8gKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgoJcHJpdmF0ZSBzdGF0aWMgRG9jdW1lbnQgX2V4Y2VwdGlvbkhhbmRsaW5nOwoJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgT2JqZWN0IGV4Y2VwdGlvbkhhbmRsaW5nTG9jayA9IG5ldyBPYmplY3Qo
KTsKCXByaXZhdGUgc3RhdGljIEV4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXIgX2V4Y2VwdGlvbkhh
bmRsaW5nTGlzdGVuZXI7Cglwcml2YXRlIHN0YXRpYyBDYWxsZXJUeXBlU3VwcGxpZXIgREVGQVVM
VF9DQUxMRVJfVFlQRV9TVVBQTElFUiA9IG5ldyBDYWxsZXJUeXBlU3VwcGxpZXIoKSB7CgkJQE92
ZXJyaWRlCgkJcHVibGljIFN0cmluZyBnZXQoKSB7CgkJCXJldHVybiBnZXRDYWxsZXJUeXBlQnlD
YWxsaW5nU2VydmljZSgpOwoJCX0KCX07Cglwcml2YXRlIHN0YXRpYyBDYWxsZXJUeXBlU3VwcGxp
ZXIgY2FsbGVyVHlwZVN1cHBsaWVyID0gbnVsbDsKCXByaXZhdGUgc3RhdGljIGZpbmFsIE9iamVj
dCBjYWxsZXJUeXBlU3VwcGxpZXJMb2NrID0gbmV3IE9iamVjdCgpOwoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgT2JqZWN0IGV4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXJMb2NrID0gbmV3IE9iamVjdCgp
OwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgT2JqZWN0IGNyZWF0ZVN1bW1hcml6ZWRFeGNlcHRpb25I
YW5kbGluZ0xvY2sgPSBuZXcgT2JqZWN0KCk7CgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCgkvLyAtLS0tLS0tLS0t
LS0tLS0tLS0tLUlOUFVUIEdFVCBWQUxVRSBERUZJTklUSU9OLS0tLS0tLS0tLS0tLS0tLS0tLS0t
CgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgTUFYX1JFVFJZX0FU
VEVNUFRTX0JFRk9SRV9DQU5DRUxfUkVUUlkgPSAibWF4UmV0cnlBdHRlbXB0c0JlZm9yZUNhbmNl
bFJldHJ5IjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBCUkVBS19SRVRSWV9MT09QID0g
ImJyZWFrLnJldHJ5Lmxvb3AuZm9yLiI7CgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqCgkvLyAtLS0tLS0tLS0tLS0t
LS0tLS0tLUVSUk9SIFZBTFVFIERFRklOSVRJT04tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCS8vICoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9UUkFOU0lFTlQgPSAi
VFJBTlNJRU5UIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9GQVRBTCA9ICJG
QVRBTCI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfTk9ORSA9ICJOT05FIjsJ
CgkKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBTVU1NQVJJWkVEX0VYQ0VQVElPTl9IQU5E
TElOR19GSUxFID0gIkV4Y2VwdGlvbkhhbmRsaW5nU3VtbWFyaXplZC54bWwiOwoJcHJpdmF0ZSBz
dGF0aWMgZmluYWwgU3RyaW5nIEVYQ0VQVElPTl9IQU5ETElOR19YU0RfRklMRSA9ICJFeGNlcHRp
b25IYW5kbGluZy54c2QiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIFdYX1JFU0lMSUVO
Q0UgPSAiV3hSZXNpbGllbmNlIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBXWF9SRVNJ
TElFTkNFX0VSUk9SID0gIld4UmVzaWxpZW5jZS5FcnJvciI7Cglwcml2YXRlIHN0YXRpYyBmaW5h
bCBTdHJpbmcgRVJST1JfSEFORExJTkdfWE1MX0ZJTEUgPSAiRXhjZXB0aW9uSGFuZGxpbmcueG1s
IjsKCgoJCgkKCQoJCgkKCQoJCgkKCQ==</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>com.softwareag.util.IDataMap</value>
    <value>com.wm.app.audit.IAuditRuntime</value>
    <value>wx.resilience.impl.ErrorInfo</value>
    <value>wx.resilience.impl.SummarizedExceptionHandlingHandler</value>
    <value>wx.resilience.impl.SummarizedExceptionHandlingHandler.Creator</value>
    <value>wx.resilience.impl.Exceptions</value>
    <value>wx.resilience.impl.Paths</value>
    <value>com.wm.lang.ns.NSName</value>
    <value>java.io.File</value>
    <value>java.io.IOException</value>
    <value>java.util.*</value>
    <value>javax.xml.transform.Source</value>
    <value>javax.xml.transform.stream.StreamSource</value>
    <value>javax.xml.validation.Schema</value>
    <value>javax.xml.validation.SchemaFactory</value>
    <value>javax.xml.validation.Validator</value>
    <value>org.jdom.Document</value>
    <value>org.jdom.Element</value>
    <value>org.jdom.JDOMException</value>
    <value>org.jdom.input.SAXBuilder</value>
    <value>org.jdom.xpath.XPath</value>
    <value>org.xml.sax.SAXException</value>
    <value>com.wm.app.b2b.server.*</value>
    <value>java.lang.reflect.UndeclaredThrowableException</value>
    <value>java.net.URL</value>
    <value>java.nio.file.Path</value>
    <value>com.wm.lang.ns.NSService</value>
  </array>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
</Values>
