<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">QEZ1bmN0aW9uYWxJbnRlcmZhY2UNCnB1YmxpYyBzdGF0aWMgaW50ZXJmYWNlIEVycm9ySGFuZGxp
bmdMaXN0ZW5lciB7DQoJcHVibGljIHZvaWQgYWNjZXB0KFN0cmluZyBwU2VydmljZU5hbWUsIElE
YXRhIHBQaXBlbGluZSk7DQp9DQoNCkBGdW5jdGlvbmFsSW50ZXJmYWNlDQpwdWJsaWMgc3RhdGlj
IGludGVyZmFjZSBDYWxsZXJUeXBlU3VwcGxpZXIgew0KCXB1YmxpYyBTdHJpbmcgZ2V0KCk7DQp9
DQoNCnByaXZhdGUgc3RhdGljIFBhdGggY3JlYXRlU3VtbWFyaXplZEVycm9ySGFuZGxpbmcoKSB0
aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7DQoJc3luY2hyb25pemVkKGNyZWF0ZVN1bW1hcml6ZWRF
cnJvckhhbmRsaW5nTG9jaykgew0KCQlyZXR1cm4gY3JlYXRlU3VtbWFyaXplZEVycm9ySGFuZGxp
bmcoU1VNTUFSSVpFRF9FUlJPUl9IQU5ETElOR19GSUxFKTsNCgl9DQp9DQpwcml2YXRlIHN0YXRp
YyBQYXRoIGNyZWF0ZVN1bW1hcml6ZWRFcnJvckhhbmRsaW5nKFN0cmluZyBwRmlsZU5hbWUpDQoJ
CXRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsNCglGaWxlIElTRGlyID0gU2VydmVyQVBJLmdldFNl
cnZlckNvbmZpZ0RpcigpLmdldFBhcmVudEZpbGUoKTsNCglGaWxlIElTUGFja2FnZXMgPSBuZXcg
amF2YS5pby5GaWxlKElTRGlyLCAicGFja2FnZXMiKTsNCglmaW5hbCBQYXRoIGNvbmZpZ0RpciA9
IFNlcnZlckFQSS5nZXRQYWNrYWdlQ29uZmlnRGlyKFdYX1JFU0lMSUVOQ0UpLnRvUGF0aCgpOw0K
CWZpbmFsIFBhdGggb3V0cHV0RmlsZSA9IGNvbmZpZ0Rpci5yZXNvbHZlKHBGaWxlTmFtZSk7DQoJ
UGF0aHMuYXNzZXJ0UGFyZW50RGlyRXhpc3RzKG91dHB1dEZpbGUpOw0KDQoJdHJ5IHsNCgkJdHJ5
IChDcmVhdG9yIGNyZWF0b3IgPSBTdW1tYXJpemVkRXJyb3JIYW5kbGluZ0hhbmRsZXIubmV3Q3Jl
YXRvcihvdXRwdXRGaWxlKSkgew0KCQkJZm9yIChGaWxlIHBhY2thZ2VEaXIgOiBJU1BhY2thZ2Vz
Lmxpc3RGaWxlcygpKSB7DQoJCQkJaWYgKHBhY2thZ2VEaXIuaXNEaXJlY3RvcnkoKSkgew0KCQkJ
CQlmaW5hbCBTdHJpbmcgcGFja2FnZU5hbWUgPSBwYWNrYWdlRGlyLmdldE5hbWUoKTsNCgkJCQkJ
aWYgKHBhY2thZ2VOYW1lLnN0YXJ0c1dpdGgoIldtIikpIHsNCgkJCQkJCWNvbnRpbnVlOw0KCQkJ
CQl9DQoJCQkJCWZpbmFsIEZpbGUgcGFja2FnZUNmZ0RpciA9IG5ldyBGaWxlKHBhY2thZ2VEaXIs
ICJjb25maWciKTsNCgkJCQkJaWYgKHBhY2thZ2VDZmdEaXIuaXNEaXJlY3RvcnkoKSkgew0KCQkJ
CQkJZmluYWwgRmlsZSBwYWNrYWdlRWhkRmlsZSA9IG5ldyBGaWxlKHBhY2thZ2VDZmdEaXIsIEVS
Uk9SX0hBTkRMSU5HX1hNTF9GSUxFKTsNCgkJCQkJCWlmIChwYWNrYWdlRWhkRmlsZS5pc0ZpbGUo
KSkgew0KCQkJCQkJCWNyZWF0b3IucGFyc2UocGFja2FnZUVoZEZpbGUsIHBhY2thZ2VOYW1lKTsN
CgkJCQkJCX0NCgkJCQkJfQ0KCQkJCX0NCgkJCX0NCgkJfQ0KCQl2YWxpZGF0ZVhNTCgpOw0KCX0g
Y2F0Y2ggKEV4Y2VwdGlvbiBlKSB7DQoJCUxvZy5sb2dFcnJvcigiRXJyb3IgZHVyaW5nIHBhcnNp
bmcgb2Ygc3VtbWFyaXplZEV4Y2VwdGlvbkhhbmRsaW5nRGVmaW5pdGlvbjogIiArIGUuZ2V0TWVz
c2FnZSgpKTsNCgkJdGhyb3cgRXhjZXB0aW9ucy5zaG93KGUsIFNlcnZpY2VFeGNlcHRpb24uY2xh
c3MpOw0KCX0NCglyZXR1cm4gb3V0cHV0RmlsZTsNCn0NCg0KcHJpdmF0ZSBzdGF0aWMgZmluYWwg
RXJyb3JIYW5kbGluZ0xpc3RlbmVyIERFRkFVTFRfRVJST1JfSEFORExFUiA9IG5ldyBFcnJvckhh
bmRsaW5nTGlzdGVuZXIoKSB7DQoJcHVibGljIHZvaWQgYWNjZXB0KFN0cmluZyBzLCBJRGF0YSBk
KSB7DQoJCUxvZy5sb2dEZWJ1ZygiRGVmYXVsdEVycm9ySGFuZGxlcjogLS0+ICIgKyBzKTsNCgkJ
dHJ5IHsNCgkJCVNlcnZpY2UuZG9JbnZva2UoTlNOYW1lLmNyZWF0ZShzKSwgZCk7DQoJCX0gY2F0
Y2ggKEV4Y2VwdGlvbiBlKSB7DQoJCQlMb2cubG9nRGVidWcoIkRlZmF1bHRFcnJvckhhbmRsZXI6
ICIgKyBlLmdldENsYXNzKCkuZ2V0TmFtZSgpICsgIiwgIiArIGUuZ2V0TWVzc2FnZSgpKTsNCgkJ
CXRocm93IG5ldyBVbmRlY2xhcmVkVGhyb3dhYmxlRXhjZXB0aW9uKGUpOw0KCQl9DQoJCUxvZy5s
b2dEZWJ1ZygiRGVmYXVsdEVycm9ySGFuZGxlcjogPC0tIik7DQoJfQ0KfTsNCnByaXZhdGUgc3Rh
dGljIEVycm9ySGFuZGxpbmdMaXN0ZW5lciBnZXRFcnJvckhhbmRsZXIoKSB7DQoJc3luY2hyb25p
emVkIChlcnJvckhhbmRsaW5nTGlzdGVuZXJMb2NrKSB7DQoJCWlmIChfZXJyb3JIYW5kbGluZ0xp
c3RlbmVyID09IG51bGwpIHsNCgkJCXJldHVybiBERUZBVUxUX0VSUk9SX0hBTkRMRVI7DQoJCX0g
ZWxzZSB7DQoJCQlyZXR1cm4gX2Vycm9ySGFuZGxpbmdMaXN0ZW5lcjsNCgkJfQ0KCX0NCn0NCnB1
YmxpYyBzdGF0aWMgdm9pZCBzZXRFcnJvckhhbmRsZXIoRXJyb3JIYW5kbGluZ0xpc3RlbmVyIHBF
cnJvckhhbmRsaW5nTGlzdGVuZXIpIHsNCglzeW5jaHJvbml6ZWQgKGVycm9ySGFuZGxpbmdMaXN0
ZW5lckxvY2spIHsNCgkJX2Vycm9ySGFuZGxpbmdMaXN0ZW5lciA9IHBFcnJvckhhbmRsaW5nTGlz
dGVuZXI7DQoJfQ0KfQ0KcHJpdmF0ZSBzdGF0aWMgdm9pZCBpbnZva2VFcnJvckhhbmRsZXIoSURh
dGEgcEhhbmRsaW5nU2VydmljZUlucHV0LA0KCQlmaW5hbCBTdHJpbmcgcFNlcnZpY2VOYW1lKSB0
aHJvd3MgRXhjZXB0aW9uIHsNCglMb2cubG9nRGVidWcoImludm9rZUVycm9ySGFuZGxlcjogLS0+
ICIpOw0KCWZpbmFsIEVycm9ySGFuZGxpbmdMaXN0ZW5lciBlaGwgPSBnZXRFcnJvckhhbmRsZXIo
KTsNCglMb2cubG9nRGVidWcoImludm9rZUVycm9ySGFuZGxlcjogZWg9IiArIGVobCk7DQoJZWhs
LmFjY2VwdChwU2VydmljZU5hbWUsIHBIYW5kbGluZ1NlcnZpY2VJbnB1dCk7DQoJTG9nLmxvZ0Rl
YnVnKCJpbnZva2VFcnJvckhhbmRsZXI6IDwtLSIpOw0KDQoJLy8gLS0tIDw8SVMtRU5EPj4gLS0t
DQp9DQoNCnByaXZhdGUgc3RhdGljIERvY3VtZW50IGdldGVycm9ySGFuZGxpbmdzKCkgdGhyb3dz
IFNlcnZpY2VFeGNlcHRpb24gew0KCXN5bmNocm9uaXplZChlcnJvckhhbmRsaW5nTG9jaykgew0K
CQlpZiAoX2Vycm9ySGFuZGxpbmcgIT0gbnVsbCkgew0KCQkJcmV0dXJuIF9lcnJvckhhbmRsaW5n
Ow0KCQl9DQoJfQ0KCWluaXRpYWxpemVIYW5kbGluZ3MobnVsbCk7DQoJc3luY2hyb25pemVkIChl
cnJvckhhbmRsaW5nTG9jaykgew0KCQlpZiAoX2Vycm9ySGFuZGxpbmcgPT0gbnVsbCkgew0KCQkJ
dGhyb3cgbmV3IElsbGVnYWxTdGF0ZUV4Y2VwdGlvbigiVW5hYmxlIHRvIGluaXRpYWxpemUgZXJy
b3JIYW5kbGluZy4gRGlkIHlvdSBhc3NlbWJsZSBpdD8iKTsNCgkJfSBlbHNlIHsNCgkJCXJldHVy
biBfZXJyb3JIYW5kbGluZzsNCgkJfQ0KCX0NCn0NCg0KcHJpdmF0ZSBzdGF0aWMgU3RyaW5nIGdl
dENhbGxlclR5cGUoKSB7DQoJQ2FsbGVyVHlwZVN1cHBsaWVyIGN0czsgDQoJc3luY2hyb25pemVk
IChjYWxsZXJUeXBlU3VwcGxpZXJMb2NrKSB7DQoJCWN0cyA9IGNhbGxlclR5cGVTdXBwbGllcjsN
Cgl9DQoJaWYgKGN0cyA9PSBudWxsKSB7DQoJCWN0cyA9IERFRkFVTFRfQ0FMTEVSX1RZUEVfU1VQ
UExJRVI7DQoJfQ0KCXJldHVybiBjdHMuZ2V0KCk7DQp9DQoNCnB1YmxpYyBzdGF0aWMgdm9pZCBz
ZXRDYWxsZXJUeXBlU3VwcGxpZXIoQ2FsbGVyVHlwZVN1cHBsaWVyIHBTdXBwbGllcikgew0KCXN5
bmNocm9uaXplZCAoY2FsbGVyVHlwZVN1cHBsaWVyTG9jaykgew0KCQljYWxsZXJUeXBlU3VwcGxp
ZXIgPSBwU3VwcGxpZXI7DQoJfQ0KfQ0KDQpwcml2YXRlIHN0YXRpYyBTdHJpbmcgZ2V0Q2FsbGVy
VHlwZUJ5Q2FsbGluZ1NlcnZpY2UoKSB7DQoJSURhdGEgaW5wdXQgPSBudWxsOw0KCVN0cmluZyB0
eXBlID0gIiI7DQoJLy8gb3V0cHV0DQoJSURhdGEgb3V0cHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0
ZSgpOw0KCXRyeSB7DQoJCW91dHB1dCA9IFNlcnZpY2UuZG9JbnZva2UoICJ3eC5yZXNpbGllbmNl
LmltcGwuY2FsbGVyIiwgImdldENhbGxlciIsIGlucHV0ICk7DQoJCUlEYXRhTWFwIG91dHB1dE1h
cCA9IG5ldyBJRGF0YU1hcChvdXRwdXQpOw0KCQlJRGF0YU1hcCBjYWxsZXJNYXAgPSBuZXcgSURh
dGFNYXAob3V0cHV0TWFwLmdldEFzSURhdGEoImNhbGxlciIpKTsNCgkJcmV0dXJuIGNhbGxlck1h
cC5nZXRBc1N0cmluZygidHlwZSIpOw0KCX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7DQoJCXJldHVy
biB0eXBlOw0KCX0JDQp9DQoNCg0KCXByaXZhdGUgc3RhdGljIFN0cmluZyBnZXRDYWxsU3RhY2tB
c0pTT05TdHJpbmcoQXJyYXlMaXN0PElEYXRhQ3Vyc29yPiBlcnJvckluZm9IaWVyYWNoeSkgew0K
DQoJCUlEYXRhW10gY2FsbFN0YWNrID0gSURhdGFVdGlsLmdldElEYXRhQXJyYXkoZXJyb3JJbmZv
SGllcmFjaHkuZ2V0KDApLCBFUlJPUl9JTkZPX0NBTExfU1RBQ0spOw0KCQkNCgkJU3RyaW5nIGpz
b25TdHJpbmcgPSAiIjsNCgkJDQoJCWlmIChjYWxsU3RhY2sgIT0gbnVsbCkgew0KCQkJLy8gaW5w
dXQNCgkJCUlEYXRhIGlucHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOw0KCQkJSURhdGFDdXJz
b3IgaW5wdXRDdXJzb3IgPSBpbnB1dC5nZXRDdXJzb3IoKTsNCg0KCQkJLy8gZG9jdW1lbnQNCgkJ
CUlEYXRhIGRvY3VtZW50ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOw0KCQkJSURhdGFDdXJzb3Ig
ZG9jdW1lbnRDdXJzb3IgPSBkb2N1bWVudC5nZXRDdXJzb3IoKTsNCgkJCUlEYXRhVXRpbC5wdXQo
ZG9jdW1lbnRDdXJzb3IsICJjYWxsU3RhY2siLCBjYWxsU3RhY2spOw0KCQkJSURhdGFVdGlsLnB1
dChpbnB1dEN1cnNvciwgImRvY3VtZW50IiwgZG9jdW1lbnQpOw0KCQkJSURhdGFVdGlsLnB1dChp
bnB1dEN1cnNvciwgInByZXR0eVByaW50IiwgImZhbHNlIik7DQoJCQlpbnB1dEN1cnNvci5kZXN0
cm95KCk7DQoNCgkJCS8vIG91dHB1dA0KCQkJSURhdGEgb3V0cHV0ID0gSURhdGFGYWN0b3J5LmNy
ZWF0ZSgpOw0KCQkJdHJ5IHsNCgkJCQlvdXRwdXQgPSBTZXJ2aWNlLmRvSW52b2tlKCJwdWIuanNv
biIsICJkb2N1bWVudFRvSlNPTlN0cmluZyIsIGlucHV0KTsNCgkJCQlJRGF0YUN1cnNvciBvdXRw
dXRDdXJzb3IgPSBvdXRwdXQuZ2V0Q3Vyc29yKCk7DQoJCQkJanNvblN0cmluZyA9IElEYXRhVXRp
bC5nZXRTdHJpbmcob3V0cHV0Q3Vyc29yLCAianNvblN0cmluZyIpOw0KCQkJCW91dHB1dEN1cnNv
ci5kZXN0cm95KCk7DQoJCQl9IGNhdGNoIChFeGNlcHRpb24gZSkgew0KCQkJCS8vIEl0IGlzIHBv
c3NpYmxlLCB0aGF0IHRoaXMgc2VydmljZSBkb2VzIG5vdCBleGlzdHMgKFdNOC4yIGVudmlyb25t
ZW50cy9zdG9yZXMpLg0KCQkJCS8vIFRyeSBhZ2FpbiB3aXRoIFNlcnZpY2UgZnJvbSBXbUpTT04g
cGFja2FnZToNCgkJCQkvLyBUaGlzIGJsb2NrIGNhbiBiZSBkZWxldGVkLCBpZiBldmVyeSBlbnZp
cm9ubWVudCBpcyBvbiBXTTkuMCENCgkJCQl0cnkgew0KCQkJCQlvdXRwdXQgPSBTZXJ2aWNlLmRv
SW52b2tlKCJwdWIuanNvbiIsICJkb2N1bWVudFRvSlNPTiIsIGlucHV0KTsNCgkJCQkJSURhdGFD
dXJzb3Igb3V0cHV0Q3Vyc29yID0gb3V0cHV0LmdldEN1cnNvcigpOw0KCQkJCQlqc29uU3RyaW5n
ID0gSURhdGFVdGlsLmdldFN0cmluZyhvdXRwdXRDdXJzb3IsICJqc29uIik7DQoJCQkJCW91dHB1
dEN1cnNvci5kZXN0cm95KCk7DQoJCQkJfSBjYXRjaCAoRXhjZXB0aW9uIGlubmVyRXgpIHsNCgkJ
CQl9DQoJCQl9DQoJCX0NCgkJDQoJCXJldHVybiBqc29uU3RyaW5nOw0KCX0NCgkNCglwcml2YXRl
IHN0YXRpYyBIYXNoTWFwPFN0cmluZywgU3RyaW5nPiBjcmVhdGVHZW5lcmljVmFsdWVNYXAoRXhj
ZXB0aW9uSGFuZGxpbmdJbmZvIGhhbmRsaW5nLCBib29sZWFuIGJyZWFrUmV0cnlMb29wKSB7DQoJ
CUhhc2hNYXA8U3RyaW5nLCBTdHJpbmc+IGdlbmVyaWNWYWx1ZU1hcCA9IG5ldyBIYXNoTWFwPFN0
cmluZywgU3RyaW5nPigpOw0KDQoJCS8vIGV2YWx1YXRlIGVycm9yVG9CZVRocm93bjoNCgkJU3Ry
aW5nIGVycm9yVG9CZVRocm93biA9IGhhbmRsaW5nLmdldEVycm9yVG9CZVRocm93bigpOw0KCQkN
CgkJaW50IHJldHJ5Q291bnQgPSBnZXRSZXRyeUNvdW50KCk7DQoJCWdlbmVyaWNWYWx1ZU1hcC5w
dXQoRUhEX0FUVFJJQlVURV9SRVRSWV9DT1VOVCwgU3RyaW5nLnZhbHVlT2YocmV0cnlDb3VudCkp
Ow0KDQoJCVN0cmluZyBtYXhSZXRyeUF0dGVtcHRzU3RyaW5nID0gaGFuZGxpbmcuZ2V0TWF4UmV0
cnlBdHRlbXB0cygpOw0KCQlJbnRlZ2VyIG1heFJldHJ5QXR0ZW1wdHMgPSBudWxsOw0KCQl0cnkg
ew0KCQkJbWF4UmV0cnlBdHRlbXB0cyA9IEludGVnZXIudmFsdWVPZihtYXhSZXRyeUF0dGVtcHRz
U3RyaW5nKTsNCgkJfSBjYXRjaCAoTnVtYmVyRm9ybWF0RXhjZXB0aW9uIG5mZSkgew0KCQl9CQkJ
CQkJDQoJCQ0KCQlpbnQgbWF4UmV0cnlBdHRlbXB0c0RlZmF1bHQgPSAwOw0KCQlTdHJpbmcgbWF4
UmV0cnlBdHRlbXB0c0RlZmF1bHRTdHJpbmcgPSBnZXRWYWx1ZUNvbmYoDQoJCQkJTUFYX1JFVFJZ
X0FUVEVNUFRTX0RFRkFVTFQsIFBBQ0tBR0VfTENMX0VSUk9SLCAidHJ1ZSIsDQoJCQkJIiIsICIi
LCAiIiwgIiIpOwkJDQoJCXRyeSB7DQoJCQltYXhSZXRyeUF0dGVtcHRzRGVmYXVsdCA9IEludGVn
ZXIudmFsdWVPZihtYXhSZXRyeUF0dGVtcHRzRGVmYXVsdFN0cmluZyk7DQoJCX0gY2F0Y2ggKE51
bWJlckZvcm1hdEV4Y2VwdGlvbiBuZmUpIHt9DQoNCgkJaW50IG1heFJldHJ5QXR0ZW1wdHNCZWZv
cmVBYm9ydCA9IDA7DQoJCVN0cmluZyBtYXhSZXRyeUF0dGVtcHRzQmVmb3JlQ2FuY2VsUmV0cnlT
dHJpbmcgPSBnZXRWYWx1ZUNvbmYoDQoJCQkJTUFYX1JFVFJZX0FUVEVNUFRTX0JFRk9SRV9DQU5D
RUxfUkVUUlksIFBBQ0tBR0VfTENMX0VSUk9SLCAidHJ1ZSIsDQoJCQkJIiIsICIiLCAiIiwgIiIp
OwkJDQoJCXRyeSB7DQoJCQltYXhSZXRyeUF0dGVtcHRzQmVmb3JlQWJvcnQgPSBJbnRlZ2VyLnZh
bHVlT2YobWF4UmV0cnlBdHRlbXB0c0JlZm9yZUNhbmNlbFJldHJ5U3RyaW5nKTsNCgkJfSBjYXRj
aCAoTnVtYmVyRm9ybWF0RXhjZXB0aW9uIG5mZSkge30NCg0KCQkvLyBEZXRlcm1pbmUgZXJyb3JU
b0JlVGhyb3duIGFuZCBtYXhSZXRyeUF0dGVtcHRzIGFjY29yZGluZyB0byByZXRyeSBjb25maWd1
cmF0aW9uOg0KCQlpZiAoYnJlYWtSZXRyeUxvb3ApIHsNCgkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQo
RUhEX0FUVFJJQlVURV9SRVRVUk5fVkFMVUVfSUQsIENPTlRJTlVFLmVxdWFscyhlcnJvclRvQmVU
aHJvd24pP0NPTlRJTlVFOkFCT1JUKTsNCgkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJ
QlVURV9NQVhfUkVUUllfQVRURU1QVFMsIFN0cmluZy52YWx1ZU9mKHJldHJ5Q291bnQpKTsNCgkJ
fSBlbHNlIGlmIChtYXhSZXRyeUF0dGVtcHRzICE9IG51bGwgJiYgbWF4UmV0cnlBdHRlbXB0cyA9
PSAtMSAmJiByZXRyeUNvdW50IDwgbWF4UmV0cnlBdHRlbXB0c0JlZm9yZUFib3J0KSB7DQoJCQln
ZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVfUkVUVVJOX1ZBTFVFX0lELCBSRVRSWSk7
DQoJCQlnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVfTUFYX1JFVFJZX0FUVEVNUFRT
LCBtYXhSZXRyeUF0dGVtcHRzQmVmb3JlQ2FuY2VsUmV0cnlTdHJpbmcpOw0KCQl9IGVsc2Ugew0K
CQkJaWYgKG1heFJldHJ5QXR0ZW1wdHMgIT0gbnVsbCAmJiByZXRyeUNvdW50IDwgbWF4UmV0cnlB
dHRlbXB0cykgew0KCQkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9SRVRVUk5f
VkFMVUVfSUQsIFJFVFJZKTsNCgkJCQlnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVf
TUFYX1JFVFJZX0FUVEVNUFRTLCBtYXhSZXRyeUF0dGVtcHRzU3RyaW5nKTsNCgkJCX0gZWxzZSB7
DQoJCQkJIGlmIChSRVRSWS5lcXVhbHMoZXJyb3JUb0JlVGhyb3duKSAmJiBtYXhSZXRyeUF0dGVt
cHRzID09IG51bGwgJiYgcmV0cnlDb3VudCA8IG1heFJldHJ5QXR0ZW1wdHNEZWZhdWx0KSB7DQoJ
CQkJCSBnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVfUkVUVVJOX1ZBTFVFX0lELCBS
RVRSWSk7DQoJCQkJCSBnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVfTUFYX1JFVFJZ
X0FUVEVNUFRTLCBtYXhSZXRyeUF0dGVtcHRzRGVmYXVsdFN0cmluZyk7DQoJCQkJIH0gZWxzZSB7
DQoJCQkJCSBpZiAoQ09OVElOVUUuZXF1YWxzKGVycm9yVG9CZVRocm93bikpIHsNCgkJCQkJCSBn
ZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVfUkVUVVJOX1ZBTFVFX0lELCBDT05USU5V
RSk7DQoJCQkJCSB9IGVsc2Ugew0KCQkJCQkJIC8vIEZpbmFsIGJlaGF2aW9yIGZvciBhYm9ydCBh
bmQgcmV0cnk6IGFib3J0DQoJCQkJCQkgZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRF
X1JFVFVSTl9WQUxVRV9JRCwgQUJPUlQpOw0KCQkJCQkgfQ0KCQkJCQkgLy8gbWF4UmV0cnlBdHRl
bXB0cyBpcyByZWFjaGVkIG9yIHdhcyBub3QgZGVmaW5lZCAoLT4gMCkNCgkJCQkJIFN0cmluZyBt
YXhSZXRyeUF0dGVtcHRzUmVzdWx0ID0gbWF4UmV0cnlBdHRlbXB0cyAhPSBudWxsID8gbWF4UmV0
cnlBdHRlbXB0c1N0cmluZyA6ICIwIjsNCgkJCQkJIGdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FU
VFJJQlVURV9NQVhfUkVUUllfQVRURU1QVFMsIG1heFJldHJ5QXR0ZW1wdHNSZXN1bHQpOw0KCQkJ
CSB9DQoJCQl9DQoJCX0NCgkJcmV0dXJuIGdlbmVyaWNWYWx1ZU1hcDsNCgl9DQoJDQoJLyoqDQoJ
ICogRmlsdGVycyB0aGUgZXJyb3IgaGllcmFyY2h5IGZvciB0aGUgZGVlcGVzdCBzZXJ2aWNlIC0t
PiBzaG93cw0KCSAqIGluIHdoaWNoIHNlcnZpY2Ugb2Ygb3VyIGNvZGUgdGhlIGVycm9yIG9jY3Vy
ZWQNCgkgKiANCgkgKiBAcGFyYW0gaGllcmFjaGljYWxFcnJvckluZm8NCgkgKiBAcmV0dXJuIHRo
ZSBsZXZlbCBvZiB0aGUgZGVlcGVzdCBzZXJ2aWNlIG5hbWUNCgkgKi8NCglwcml2YXRlIHN0YXRp
YyBpbnQgZ2V0RGVlcGVzdEFwcGxpY2F0aW9uU2VydmljZUxldmVsKEFycmF5TGlzdDxFcnJvcklu
Zm8+IGhpZXJhY2hpY2FsRXJyb3JJbmZvKSB7DQoJCVN0cmluZyBzZXJ2aWNlID0gbnVsbDsNCgkJ
Zm9yIChpbnQgbGV2ZWwgPSBoaWVyYWNoaWNhbEVycm9ySW5mby5zaXplKCkgLSAxOyBsZXZlbCA+
IDA7IGxldmVsLS0pIHsNCgkJCXNlcnZpY2UgPSBoaWVyYWNoaWNhbEVycm9ySW5mby5nZXQobGV2
ZWwpLmdldFNlcnZpY2UoKTsNCgkJCS8vIGNyZWF0ZSBvZiBMaXN0IG9mIEZsb3duYW1lcyB0byBp
Z25vcmUNCgkJCUxpc3Q8U3RyaW5nPiBpZ25vcmVGbG93cyA9IEFycmF5cy5hc0xpc3QoInd4LnJl
c2lsaWVuY2UucHViLnJlc2lsaWVuY2U6dGhyb3dFcnJvciIsDQoJCQkJCSAJCQkJCQkJCSJ3eC5y
ZXNpbGllbmNlLnB1Yi5yZXNpbGllbmNlOnRocm93RXJyb3JJZk5lY2Vzc2FyeSIsIA0KCQkJCQkJ
CQkJCQkJCSAid3gucmVzaWxpZW5jZS5wdWIucmVzaWxpZW5jZTpwb3N0UHJvY2Vzc0ZvclRvcExl
dmVsU2VydmljZSIpOw0KCQkJDQoJCQkNCgkJCQ0KCQkJDQoJCQkNCgkJCWlmIChzZXJ2aWNlICE9
IG51bGwgJiYgDQoJCQkJIXNlcnZpY2Uuc3RhcnRzV2l0aCgicHViLiIpICYmDQoJCQkJIXNlcnZp
Y2Uuc3RhcnRzV2l0aCgid20uIikgJiYgDQoJCQkJIWlnbm9yZUZsb3dzLmNvbnRhaW5zKHNlcnZp
Y2UpDQoJCQkpIHsNCgkJCQlyZXR1cm4gbGV2ZWw7DQoJCQl9DQoJCX0NCg0KCQlyZXR1cm4gMDsN
Cgl9DQoNCgkNCgkvKioNCgkgKiBMb2dzIG1lc3NhZ2UgZnJvbSBhIGNhdGFsb2cuDQoJICogDQoJ
ICogQHBhcmFtIGFGYWNpbGl0eUtleQ0KCSAqICAgICAgICAgICAgZGVmaW5lcyB0aGUgZmFjaWxp
dHkgaW4gdGhlIGNhdGFsb2cNCgkgKiBAcGFyYW0gYU1lc3NhZ2VLZXkNCgkgKiAgICAgICAgICAg
IGNvcnJlc3BvbmRzIHdpdGggdGhlIG1lc3NhZ2Uga2V5IGluIHRoZSBjYXRhbG9nDQoJICogQHBh
cmFtIGFNZXNzYWdlUGFyYW1zDQoJICogICAgICAgICAgICBpZiBtZXNzYWdlIGluIHRoZSBjYXRh
bG9nIGhhcyBwYXJhbWV0ZXJzDQoJICogQHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uDQoJICogICAg
ICAgICAgICAgdGhyb3duIGlmIHRoZSBsb2dnaW5nIGZhaWxlZA0KCSAqLw0KCS8qcHJpdmF0ZSBz
dGF0aWMgdm9pZCBsb2dNZXNzYWdlRnJvbUNhdGFsb2coU3RyaW5nIGFGYWNpbGl0eUtleSwgU3Ry
aW5nIGFNZXNzYWdlS2V5LCBTdHJpbmdbXSBhTWVzc2FnZVBhcmFtcykgew0KCQkvLyBpbnB1dA0K
CQlJRGF0YSB0SW5wdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJCUlEYXRhQ3Vyc29yIGlu
cHV0Q3Vyc29yID0gdElucHV0LmdldEN1cnNvcigpOw0KCQlJRGF0YVV0aWwucHV0KGlucHV0Q3Vy
c29yLCAiZmFjaWxpdHlLZXkiLCBhRmFjaWxpdHlLZXkpOw0KCQlJRGF0YVV0aWwucHV0KGlucHV0
Q3Vyc29yLCAibWVzc2FnZUtleSIsIGFNZXNzYWdlS2V5KTsNCgkNCgkJLy8gVGhlcmUgYXJlIHNv
bWUgbWVzc2FnZSBwYXJhbXMgcHJvdmlkZWQNCgkJaWYgKGFNZXNzYWdlUGFyYW1zLmxlbmd0aCA+
IDApIHsNCgkJCUlEYXRhVXRpbC5wdXQoaW5wdXRDdXJzb3IsICJtZXNzYWdlUGFyYW1zIiwgYU1l
c3NhZ2VQYXJhbXMpOw0KCQl9DQoJCWlucHV0Q3Vyc29yLmRlc3Ryb3koKTsNCgkNCgkJdHJ5IHsN
CgkJCVNlcnZpY2UuZG9JbnZva2UoInd4LnJlc2lsaWVuY2UuaW1wbDoiLCAibG9nTWVzc2FnZUZy
b21DYXRhbG9nIiwgdElucHV0KTsNCgkJfSANCgkJY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7DQoJCX0N
Cgl9Ki8NCg0KCQ0KCXByaXZhdGUgc3RhdGljIHZvaWQgdmFsaWRhdGVYTUwoKSB0aHJvd3MgU2Vy
dmljZUV4Y2VwdGlvbiB7DQoJCUxvZy5sb2dJbmZvKCJWYWxpZGF0aW5nIHRoZSBzdW1tYXJpemVk
IGVycm9yIGhhbmRsaW5nIik7DQoJCUZpbGUgeG1sRmlsZSA9IG5ldyBGaWxlKFNlcnZlckFQSS5n
ZXRQYWNrYWdlQ29uZmlnRGlyKFdYX1JFU0lMSUVOQ0UpICsgIi8iICsgU1VNTUFSSVpFRF9FUlJP
Ul9IQU5ETElOR19GSUxFKTsNCgkJRmlsZSBzY2hlbWFGaWxlID0gbmV3IEZpbGUoU2VydmVyQVBJ
LmdldFBhY2thZ2VDb25maWdEaXIoV1hfUkVTSUxJRU5DRSkgKyAiLyIgKyBFWENFUFRJT05fSEFO
RExJTkdfWFNEX0ZJTEUpOw0KCQkNCgkJdHJ5IHsNCgkJCS8vIDEuIExvb2t1cCBhIGZhY3Rvcnkg
Zm9yIHRoZSBXM0MgWE1MIFNjaGVtYSBsYW5ndWFnZQ0KCQkJU2NoZW1hRmFjdG9yeSBmYWN0b3J5
ID0gU2NoZW1hRmFjdG9yeS5uZXdJbnN0YW5jZSgiaHR0cDovL3d3dy53My5vcmcvMjAwMS9YTUxT
Y2hlbWEiKTsNCgkJCS8vIDIuIENvbXBpbGUgdGhlIHNjaGVtYS4NCgkJCS8vIEhlcmUgdGhlIHNj
aGVtYSBpcyBsb2FkZWQgZnJvbSBhIGphdmEuaW8uRmlsZSwgYnV0IHlvdSBjb3VsZCB1c2UNCgkJ
CS8vIGEgamF2YS5uZXQuVVJMIG9yIGEgamF2YXgueG1sLnRyYW5zZm9ybS5Tb3VyY2UgaW5zdGVh
ZC4NCgkJCVNjaGVtYSBzY2hlbWEgPSBmYWN0b3J5Lm5ld1NjaGVtYShzY2hlbWFGaWxlKTsJDQoJ
CQkvLyAzLiBHZXQgYSB2YWxpZGF0b3IgZnJvbSB0aGUgc2NoZW1hLg0KCQkJVmFsaWRhdG9yIHZh
bGlkYXRvciA9IHNjaGVtYS5uZXdWYWxpZGF0b3IoKTsJDQoJCQkvLyA0LiBQYXJzZSB0aGUgZG9j
dW1lbnQgeW91IHdhbnQgdG8gY2hlY2suDQoJCQlTb3VyY2Ugc291cmNlID0gbmV3IFN0cmVhbVNv
dXJjZSh4bWxGaWxlKTsJDQoJCQkvLyA1LiBDaGVjayB0aGUgZG9jdW1lbnQNCgkJCXZhbGlkYXRv
ci52YWxpZGF0ZShzb3VyY2UpOw0KCQkJTG9nLmxvZ0luZm8oeG1sRmlsZS5nZXROYW1lKCkgKyAi
IGlzIHZhbGlkIik7DQoJCX0gDQoJCWNhdGNoIChTQVhFeGNlcHRpb258SU9FeGNlcHRpb24gZXgp
IHsNCgkJCVN0cmluZyBtZXNzYWdlID0geG1sRmlsZS5nZXROYW1lKCkgKyAiIGlzIG5vdCB2YWxp
ZCBiZWNhdXNlIFxuIiArIGV4LmdldE1lc3NhZ2UoKTsNCgkJCWZpbmFsIFNlcnZpY2VFeGNlcHRp
b24gc2UgPSBuZXcgU2VydmljZUV4Y2VwdGlvbihtZXNzYWdlKTsNCgkJCXNlLmluaXRDYXVzZShl
eCk7DQoJCQl0aHJvdyBzZTsNCgkJfQkNCgl9DQoNCglwcml2YXRlIHN0YXRpYyBTdHJpbmcgZ2V0
VmFsdWVDb25mKFN0cmluZyBrZXksIFN0cmluZyB3eENvbmZpZ1BrZ05hbWUsDQoJCQlTdHJpbmcg
bm9TZXJ2aWNlRXhjZXB0aW9uLCBTdHJpbmcgc3Vic3RpdHV0ZVZhcmlhYmxlcywNCgkJCVN0cmlu
ZyBpZ25vcmVHbG9iYWxWYWx1ZXMsIFN0cmluZyBzY2FuQWxsQ29uZmlndXJhdGlvbnMsDQoJCQlT
dHJpbmcgbm9WYXJpYWJsZUludGVycG9sYXRpb24pIHsNCgkJU3RyaW5nIHByb3BlcnR5VmFsdWUg
PSAiICI7DQoJCS8vIGlucHV0DQoJCUlEYXRhIGNvbmZpZ1BhcmFtID0gSURhdGFGYWN0b3J5LmNy
ZWF0ZSgpOw0KCQlJRGF0YUN1cnNvciBjb25maWdQYXJhbUN1cnNvciA9IGNvbmZpZ1BhcmFtLmdl
dEN1cnNvcigpOw0KCQlJRGF0YVV0aWwucHV0KGNvbmZpZ1BhcmFtQ3Vyc29yLCAia2V5Iiwga2V5
KTsNCgkJSURhdGFVdGlsLnB1dChjb25maWdQYXJhbUN1cnNvciwgInd4Q29uZmlnUGtnTmFtZSIs
IHd4Q29uZmlnUGtnTmFtZSk7DQoJCUlEYXRhVXRpbC5wdXQoY29uZmlnUGFyYW1DdXJzb3IsICJu
b1NlcnZpY2VFeGNlcHRpb24iLA0KCQkJCW5vU2VydmljZUV4Y2VwdGlvbik7DQoJCWNvbmZpZ1Bh
cmFtQ3Vyc29yLmRlc3Ryb3koKTsNCgkNCgkJLy8gb3V0cHV0DQoJCUlEYXRhIGNvbmZpZ091dHB1
dCA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsNCgkJdHJ5IHsNCgkJCWNvbmZpZ091dHB1dCA9IFNl
cnZpY2UuZG9JbnZva2UoInd4LmNvbmZpZy5wdWIiLCAiZ2V0VmFsdWUiLA0KCQkJCQljb25maWdQ
YXJhbSk7DQoJCX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7DQoJCQlyZXR1cm4gcHJvcGVydHlWYWx1
ZTsNCgkJfQ0KCQlJRGF0YUN1cnNvciBjb25maWdPdXRwdXRDdXJzb3IgPSBjb25maWdPdXRwdXQu
Z2V0Q3Vyc29yKCk7DQoJCXByb3BlcnR5VmFsdWUgPSBJRGF0YVV0aWwNCgkJCQkuZ2V0U3RyaW5n
KGNvbmZpZ091dHB1dEN1cnNvciwgInByb3BlcnR5VmFsdWUiKTsNCgkJY29uZmlnT3V0cHV0Q3Vy
c29yLmRlc3Ryb3koKTsNCgkJcmV0dXJuIHByb3BlcnR5VmFsdWU7DQoJfQ0KCQ0KCXByaXZhdGUg
c3RhdGljIGludCBnZXRSZXRyeUNvdW50KCkgew0KCQlJRGF0YSBpbnB1dCA9IG51bGw7DQoJCS8v
IG91dHB1dA0KCQlJRGF0YSBvdXRwdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJCXRyeSB7
DQoJCQlvdXRwdXQgPSBTZXJ2aWNlLmRvSW52b2tlKCJwdWIuZmxvdyIsICJnZXRSZXRyeUNvdW50
IiwgaW5wdXQpOw0KCQkJSURhdGFDdXJzb3Igb3V0cHV0Q3Vyc29yID0gb3V0cHV0LmdldEN1cnNv
cigpOw0KCQkJcmV0dXJuIEludGVnZXIucGFyc2VJbnQoSURhdGFVdGlsLmdldFN0cmluZyhvdXRw
dXRDdXJzb3IsICJyZXRyeUNvdW50IikpOw0KCQl9IGNhdGNoIChFeGNlcHRpb24gZSkgew0KCQkJ
cmV0dXJuIDA7DQoJCX0NCgl9DQoJDQoJLyoqDQoJICogRXh0cmFjdHMgYW4gZXJyb3IgaGllcmFy
Y2h5IGZvciBhIGdpdmVuIGVycm9yIGhpZXJhcmNoeSAobm9ybWFsbHkgb25seQ0KCSAqIGZpbGxl
ZCBieSBvbmUgKHJvb3QpIGVycm9yKS4gVXNlcyB0aGUgY2FsbFN0YWNrIGFuZCB0aGUgZGVlcGVz
dCBlcnJvckluZm8gdG8gYnVpbGQgaGllYXJjaHkuDQoJICogDQoJICogQHBhcmFtIHBFcnJvckhp
ZXJhcmNoeQ0KCSAqICAgICAgICAgICAgLSBhcnJheSBsaXN0IG9mIElEYXRhQ3Vyc29ycyBvbiBw
dWIuZXZlbnQ6ZXhjZXB0aW9uSW5mbw0KCSAqIEByZXR1cm4gZnVsbCBhcnJheSBsaXN0IGFycmF5
IGxpc3Qgb2YgRXJyb3JJbmZvIG9uDQoJICogICAgICAgICBwdWIuZXZlbnQ6ZXhjZXB0aW9uSW5m
bywgY29udGFpbmluZyBhbGwgZXJyb3JzIGZyb20gcm9vdCgwKSB0bw0KCSAqICAgICAgICAgb3Jp
Z2luIChzaXplIG9mIGFycmF5IGxpc3QpDQoJICovDQoJcHJpdmF0ZSBzdGF0aWMgQXJyYXlMaXN0
PEVycm9ySW5mbz4gZXh0cmFjdEVycm9ySGllcmFyY2h5KEFycmF5TGlzdDxJRGF0YUN1cnNvcj4g
cEVycm9ySGllcmFyY2h5KSB7CQ0KCQlpZiAocEVycm9ySGllcmFyY2h5ID09IG51bGwpIHsNCgkJ
CXJldHVybiBudWxsOw0KCQl9DQoJCQ0KCQlJRGF0YUN1cnNvciBkZWVwZXN0TmVzdGVkRXJyb3Ig
PSBnZXREZWVwZXN0TmVzdGVkRXJyb3IocEVycm9ySGllcmFyY2h5KTsNCgkJDQoJCS8vIGdldCBj
YWxsU3RhY2sgb2YgZXJyb3I6DQoJCUlEYXRhW10gY2FsbFN0YWNrID0gSURhdGFVdGlsLmdldElE
YXRhQXJyYXkocEVycm9ySGllcmFyY2h5LmdldCgwKSwgImNhbGxTdGFjayIpOw0KCQlBcnJheUxp
c3Q8RXJyb3JJbmZvPiBlcnJvckluZm9MaXN0ID0gbnVsbDsNCgkJDQoJCWlmIChjYWxsU3RhY2sg
IT0gbnVsbCkgew0KCQkJZXJyb3JJbmZvTGlzdCA9IG5ldyBBcnJheUxpc3Q8RXJyb3JJbmZvPihj
YWxsU3RhY2subGVuZ3RoKTsNCgkJCQ0KCQkJLy8gdXNlIHRoZSBlcnJvciBhbmQgZXJyb3JUeXBl
IG9mIHRoZSBkZWVwZXN0IGVycm9ySW5mbyB0byBkZXRlcm1pbmUgdGhlIGVycm9yIGFuZCBlcnJv
clR5cGUgb2YgZWFjaCBsZXZlbDoNCgkJCVN0cmluZyBuZXN0ZWRFcnJvclR5cGUgPSBJRGF0YVV0
aWwuZ2V0U3RyaW5nKGRlZXBlc3ROZXN0ZWRFcnJvciwgRVJST1JfSU5GT19FUlJPUl9UWVBFKTsN
CgkJCVN0cmluZyBuZXN0ZWRFcnJvciA9IElEYXRhVXRpbC5nZXRTdHJpbmcoZGVlcGVzdE5lc3Rl
ZEVycm9yLCBFUlJPUl9JTkZPX0VSUk9SKTsNCg0KCQkJLy8gdGhlIGNhbGxzdGFjayBpcyBvcmRl
cmVkIGludmVyc2UhDQoJCQlmb3IgKGludCBpID0gY2FsbFN0YWNrLmxlbmd0aCAtIDEgOyBpID49
IDA7IGktLSkgew0KCQkJCS8vIHVzZSB0aGUgc2VydmljZSBuYW1lcyBvZiB0aGUgY2FsbHN0YWNr
Og0KCQkJCUlEYXRhQ3Vyc29yIGNhbGxTdGFja0N1cnNvciA9IGNhbGxTdGFja1tpXS5nZXRDdXJz
b3IoKTsNCgkJCQlTdHJpbmcgc2VydmljZSA9IElEYXRhVXRpbC5nZXRTdHJpbmcoY2FsbFN0YWNr
Q3Vyc29yLCBFUlJPUl9JTkZPX0NBTExfU1RBQ0tfU0VSVklDRSk7DQoJCQkJU3RyaW5nIGZsb3dT
dGVwID0gSURhdGFVdGlsLmdldFN0cmluZyhjYWxsU3RhY2tDdXJzb3IsIEVSUk9SX0lORk9fQ0FM
TF9TVEFDS19GTE9XX1NURVApOw0KCQkJCWlmIChmbG93U3RlcCA9PSBudWxsIHx8IGZsb3dTdGVw
LmVxdWFscygiIikpIHsNCgkJCQkJZmxvd1N0ZXAgPSAibi5hLiI7DQoJCQkJfQ0KCQkJCQ0KCQkJ
CWVycm9ySW5mb0xpc3QuYWRkKG5ldyBFcnJvckluZm8obmVzdGVkRXJyb3IsIG5lc3RlZEVycm9y
VHlwZSwgc2VydmljZSwgZmxvd1N0ZXApKTsNCgkJCX0NCgkJfQ0KCQlyZXR1cm4gZXJyb3JJbmZv
TGlzdDsNCgl9DQoJDQoJLyoqDQoJICogR2V0cyB0aGUgZGVlcGVzdCBlcnJvciBpbiB0aGUgZXJy
b3IgaGllcmFyY2h5DQoJICogDQoJICogQHBhcmFtIHBFcnJvckhpZXJhcmNoeQ0KCSAqICAgICAg
ICAgICAgLSBhcnJheSBsaXN0IG9mIElEYXRhQ3Vyc29ycyBvbiBwdWIuZXZlbnQ6ZXhjZXB0aW9u
SW5mbw0KCSAqIEByZXR1cm4gY3Vyc29yIG9mIHRoZSBkZWVwZXN0IGVycm9yDQoJICovDQoJcHJp
dmF0ZSBzdGF0aWMgSURhdGFDdXJzb3IgZ2V0RGVlcGVzdE5lc3RlZEVycm9yKEFycmF5TGlzdDxJ
RGF0YUN1cnNvcj4gcEVycm9ySGllcmFyY2h5KSB7CQkNCgkJDQoJCUlEYXRhQ3Vyc29yIG5lc3Rl
ZEVycm9yID0gcEVycm9ySGllcmFyY2h5LmdldCgwKTsNCgkJSURhdGFDdXJzb3IgY3VycmVudEVy
cm9yID0gbnVsbDsNCgkJSURhdGEgbmVzdGVkRXJyb3JJRGF0YSA9IG51bGw7DQoJCWRvIHsNCgkJ
CWN1cnJlbnRFcnJvciA9IG5lc3RlZEVycm9yOw0KCQkJbmVzdGVkRXJyb3JJRGF0YSA9IElEYXRh
VXRpbC5nZXRJRGF0YShjdXJyZW50RXJyb3IsIEVSUk9SX0lORk9fTkVTVEVEX0VSUk9SX0lEKTsN
CgkJCWlmIChuZXN0ZWRFcnJvcklEYXRhICE9IG51bGwpIHsNCgkJCQluZXN0ZWRFcnJvciA9IG5l
c3RlZEVycm9ySURhdGEuZ2V0Q3Vyc29yKCk7DQoJCQl9IGVsc2Ugew0KCQkJCW5lc3RlZEVycm9y
ID0gbnVsbDsNCgkJCX0NCgkJfSB3aGlsZSAobmVzdGVkRXJyb3IgIT0gbnVsbCk7DQoNCgkJcmV0
dXJuIGN1cnJlbnRFcnJvcjsNCg0KCX0JDQoNCgkvKnB1YmxpYyBzdGF0aWMgY2xhc3MgTG9nIHsN
CgkJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTG9nIElOU1RBTkNFID0gbmV3IExvZygpOw0KCQlwcml2
YXRlIHN0YXRpYyBmaW5hbCBib29sZWFuIGxvZ2dpbmcgPSBmYWxzZTsNCg0KCQlwdWJsaWMgc3Rh
dGljIHZvaWQgaW5pdCgpIHsNCgkJCWlmIChsb2dnaW5nKSB7DQoJCQkJSU5TVEFOQ0UuaW5pdFdy
aXRlcigpOw0KCQkJfQ0KCQl9DQoJCXB1YmxpYyBzdGF0aWMgdm9pZCB3cml0ZShTdHJpbmcgcE1l
c3NhZ2UpIHsNCgkJCWlmIChsb2dnaW5nKSB7DQoJCQkJSU5TVEFOQ0UubG9nKHBNZXNzYWdlKTsN
CgkJCX0NCgkJfQ0KCQlwdWJsaWMgc3RhdGljIHZvaWQgY2xvc2UoKSB7DQoJCQlpZiAobG9nZ2lu
Zykgew0KCQkJCUlOU1RBTkNFLmNsb3NlV3JpdGVyKCk7DQoJCQl9DQoJCX0NCgkJcHVibGljIHN0
YXRpYyBib29sZWFuIGlzTG9nZ2luZygpIHsNCgkJCXJldHVybiBsb2dnaW5nOw0KCQl9DQoNCgkJ
cHJpdmF0ZSBib29sZWFuIGluaXRpYWxpemVkOw0KCQlwcml2YXRlIHZvaWQgaW5pdFdyaXRlcigp
IHsNCgkJCWluaXRpYWxpemVkID0gdHJ1ZTsNCgkJfQ0KCQlwcml2YXRlIHZvaWQgY2xvc2VXcml0
ZXIoKSB7DQoJCQlpbml0aWFsaXplZCA9IGZhbHNlOw0KCQl9DQoJCXByaXZhdGUgdm9pZCBsb2co
U3RyaW5nIHBNZXNzYWdlKSB7DQoJCQlpZiAoaW5pdGlhbGl6ZWQpIHsNCgkJCQkvLyBUT0RPOg0K
CQkJCS8vTG9nLmxvZ1RyYWNlTWVzc2FnZSgiRUhGIiwgcE1lc3NhZ2UpOw0KCQkJfQ0KCQl9DQoJ
fSovDQoJcHVibGljIHN0YXRpYyBjbGFzcyBFcnJvckhhbmRsaW5nRXhjZXB0aW9uIGV4dGVuZHMg
UnVudGltZUV4Y2VwdGlvbiB7DQoJCXByaXZhdGUgc3RhdGljIGZpbmFsIGxvbmcgc2VyaWFsVmVy
c2lvblVJRCA9IC0zOTUwMTAwNzQxNjM2NDc5NjgxTDsNCg0KCQlwdWJsaWMgRXJyb3JIYW5kbGlu
Z0V4Y2VwdGlvbihTdHJpbmcgcE1zZywgVGhyb3dhYmxlIHBDYXVzZSkgew0KCQkJc3VwZXIocE1z
ZywgcENhdXNlKTsNCgkJfQ0KDQoJCXB1YmxpYyBFcnJvckhhbmRsaW5nRXhjZXB0aW9uKFN0cmlu
ZyBwTXNnKSB7DQoJCQlzdXBlcihwTXNnKTsNCgkJfQ0KDQoJCXB1YmxpYyBFcnJvckhhbmRsaW5n
RXhjZXB0aW9uKFRocm93YWJsZSBwQ2F1c2UpIHsNCgkJCXN1cGVyKHBDYXVzZSk7DQoJCX0NCgl9
DQoNCglwdWJsaWMgc3RhdGljIGNsYXNzIEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyB7DQoJCS8vIE9s
ZCByZXByZXNlbnRhdGlvbiBvZiBFeGNlcHRpb25IYW5kbGluZ0luZm8gKGRlcHJlY2F0ZWQpDQoJ
CXByaXZhdGUgZmluYWwgTGlzdDxTdHJpbmc+IHNlcnZpY2VOYW1lcyA9IG5ldyBBcnJheUxpc3Q8
PigpOw0KCQlwcml2YXRlIGZpbmFsIFN0cmluZyAgZXJyb3JUb0JlVGhyb3duLCB0eXBlLCBlcnJv
ckNvZGUsIGV4Y2VwdGlvblR5cGUsIG1heFJldHJ5QXR0ZW1wdHM7DQoJCXByaXZhdGUgZmluYWwg
Ym9vbGVhbiBwcmludEJ1c2luZXNzT2JqZWN0Ow0KCQlwdWJsaWMgRXhjZXB0aW9uSGFuZGxpbmdJ
bmZvKFN0cmluZyBwRXJyb3JUb0JlVGhyb3duLCBTdHJpbmcgcFR5cGUsIFN0cmluZyBwRXJyb3JD
b2RlLA0KCQkJCSAJCQkJCSBTdHJpbmcgcEV4Y2VwdGlvblR5cGUsIFN0cmluZyBwTWF4UmV0cnlB
dHRlbXB0cywNCgkJCQkgCQkJCQkgYm9vbGVhbiBwUHJpbnRCdXNpbmVzc09iamVjdCkgew0KCQkJ
ZXJyb3JUb0JlVGhyb3duID0gcEVycm9yVG9CZVRocm93bjsNCgkJCXR5cGUgPSBwVHlwZTsNCgkJ
CWVycm9yQ29kZSA9IHBFcnJvckNvZGU7DQoJCQlleGNlcHRpb25UeXBlID0gcEV4Y2VwdGlvblR5
cGU7DQoJCQltYXhSZXRyeUF0dGVtcHRzID0gcE1heFJldHJ5QXR0ZW1wdHM7DQoJCQlwcmludEJ1
c2luZXNzT2JqZWN0ID0gcFByaW50QnVzaW5lc3NPYmplY3Q7DQoJCX0NCg0KCQlwdWJsaWMgTGlz
dDxTdHJpbmc+IGdldEhhbmRsaW5nU2VydmljZXMoKSB7DQoJCQlyZXR1cm4gc2VydmljZU5hbWVz
Ow0KCQl9DQoNCgkJcHVibGljIHZvaWQgYWRkU2VydmljZU5hbWUoU3RyaW5nIHBTZXJ2aWNlTmFt
ZSkgew0KCQkJc2VydmljZU5hbWVzLmFkZChwU2VydmljZU5hbWUpOw0KCQl9DQoNCgkJcHVibGlj
IFN0cmluZyBnZXRFcnJvclRvQmVUaHJvd24oKSB7DQoJCQlyZXR1cm4gZXJyb3JUb0JlVGhyb3du
Ow0KCQl9DQoNCgkJcHVibGljIFN0cmluZyBnZXRUeXBlKCkgew0KCQkJcmV0dXJuIHR5cGU7DQoJ
CX0NCg0KCQlwdWJsaWMgU3RyaW5nIGdldEVycm9yQ29kZSgpIHsNCgkJCXJldHVybiBlcnJvckNv
ZGU7DQoJCX0NCg0KCQlwdWJsaWMgU3RyaW5nIGdldEV4Y2VwdGlvblR5cGUoKSB7DQoJCQlyZXR1
cm4gZXhjZXB0aW9uVHlwZTsNCgkJfQ0KDQoJCXB1YmxpYyBTdHJpbmcgZ2V0TWF4UmV0cnlBdHRl
bXB0cygpIHsNCgkJCXJldHVybiBtYXhSZXRyeUF0dGVtcHRzOw0KCQl9DQoNCgkJcHVibGljIGJv
b2xlYW4gaXNQcmludEJ1c2luZXNzT2JqZWN0KCkgew0KCQkJcmV0dXJuIHByaW50QnVzaW5lc3NP
YmplY3Q7DQoJCX0NCg0KCQlAT3ZlcnJpZGUNCgkJcHVibGljIFN0cmluZyB0b1N0cmluZygpIHsN
CgkJCWZpbmFsIFN0cmluZ0J1aWxkZXIgc2IgPSBuZXcgU3RyaW5nQnVpbGRlcigpOw0KCQkJc2Iu
YXBwZW5kKHN1cGVyLnRvU3RyaW5nKCkpOw0KCQkJc2IuYXBwZW5kKCI6IGVycm9yVG9CZVRocm93
bj0gIik7DQoJCQlzYi5hcHBlbmQoZXJyb3JUb0JlVGhyb3duKTsNCgkJCXNiLmFwcGVuZCgiLCB0
eXBlPSIpOw0KCQkJc2IuYXBwZW5kKHR5cGUpOw0KCQkJc2IuYXBwZW5kKCJlcnJvckNvZGU9Iik7
DQoJCQlzYi5hcHBlbmQoZXJyb3JDb2RlKTsNCgkJCXNiLmFwcGVuZCgiLCBwcm9qZWN0PSIpOw0K
CQkJc2IuYXBwZW5kKCIsIGV4Y2VwdGlvblR5cGU9Iik7DQoJCQlzYi5hcHBlbmQoZXhjZXB0aW9u
VHlwZSk7DQoJCQlzYi5hcHBlbmQoIiwgbWF4UmV0cnlBdHRlbXB0cz0iKTsNCgkJCXNiLmFwcGVu
ZChtYXhSZXRyeUF0dGVtcHRzKTsNCgkJCXNiLmFwcGVuZCgiLCBwcmludEJ1c2luZXNzT2JqZWN0
PSIpOw0KCQkJc2IuYXBwZW5kKHByaW50QnVzaW5lc3NPYmplY3QpOw0KCQkJc2IuYXBwZW5kKCIs
IHNlcnZpY2VOYW1lcz0iKTsNCgkJCS8vIFRPRE86DQoJCQkvL3NiLmFwcGVuZChTdHJpbmdzLmFz
U3RyaW5nKHNlcnZpY2VOYW1lcykpOw0KCQkJcmV0dXJuIHNiLnRvU3RyaW5nKCk7DQoJCX0NCgkJ
DQoJfQ0KCQ0KCS8qKg0KCSAqIEV4dHJhY3QgaGFuZGxpbmdzIGZvciBhbiBlcnJvciBhdCBhIGxv
Y2F0aW9uIGZyb20gYSBnaXZlbiBleGNlcHRpb24NCgkgKiBoYW5kbGluZyBkZWZpbml0aW9uDQoJ
ICogDQoJICogQHBhcmFtIHBFcnJvckhhbmRsaW5nDQoJICogICAgICAgICAgICBkZWZpbml0aW9u
IGFzIERPTSBkb2N1bWVudCB0byB1c2UgZm9yIGV4dHJhY3Rpb24NCgkgKiBAcGFyYW0gcExvY2F0
aW9uWFBhdGgNCgkgKiAgICAgICAgICAgIGVycm9yIGxvY2F0aW9uIGFzIFhQQVRIDQoJICogQHBh
cmFtIHBFeGNlcHRpb25UeXBlDQoJICogICAgICAgICAgICBlcnJvciB0eXBlIGFzIFN0cmluZw0K
CSAqIEBwYXJhbSBjdXJyZW50Q2FsbGVyVHlwZQ0KCSAqICAgICAgICAgICAgY2FsbGVyIHR5cGUg
YXMgU3RyaW5nCQ0KCSAqIEBwYXJhbSBjdXJyZW50RXJyb3JNZXNzYWdlDQoJICogICAgICAgICAg
ICBvcmlnaW5hbCBlcnJvciBhcyBTdHJpbmcgDQoJICogQHJldHVybiBhbGwgZm91bmQgaGFuZGxp
bmdzIGZvciB0aGUgZ2l2ZW4gZXJyb3IgYXMgYW4gYXJyYXkgbGlzdCwgZW1wdHkNCgkgKiAgICAg
ICAgIGxpc3QgaW4gY2FzZSBvZiBubyBmb3VuZCBlcnJvcg0KCSAqIEB0aHJvd3MgU2VydmljZUV4
Y2VwdGlvbg0KCSAqLw0KCUBTdXBwcmVzc1dhcm5pbmdzKCJ1bmNoZWNrZWQiKQ0KCXByaXZhdGUg
c3RhdGljIEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyBnZXRIYW5kbGluZ3NGb3JMb2NhdGlvbigNCgkJ
CURvY3VtZW50IHBFcnJvckhhbmRsaW5nLCBTdHJpbmcgcExvY2F0aW9uWFBhdGgsDQoJCQlTdHJp
bmcgcEV4Y2VwdGlvblR5cGUsIFN0cmluZyBjdXJyZW50Q2FsbGVyVHlwZSwgU3RyaW5nIGN1cnJl
bnRFcnJvck1lc3NhZ2UpDQoJCQl0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7DQoJCUxvZy5sb2dE
ZWJ1ZygiZ2V0SGFuZGxpbmdzRm9yTG9jYXRpb246IC0tPiAiICsgcExvY2F0aW9uWFBhdGggKyAi
LCAiICsgcEV4Y2VwdGlvblR5cGUgKyAiLCAiICsgY3VycmVudENhbGxlclR5cGUgKyAiLCAiICsg
Y3VycmVudEVycm9yTWVzc2FnZSk7DQoNCgkJLy8gZ2V0IGV4Y2VwdGlvbiBsaXN0IGZvciBsb2Nh
dGlvbg0KCQlMaXN0PEVsZW1lbnQ+IGV4Y2VwdGlvbk5vZGVzID0gbnVsbDsNCgkJdHJ5IHsNCgkJ
CWV4Y2VwdGlvbk5vZGVzID0gKExpc3Q8RWxlbWVudD4pIFhQYXRoLnNlbGVjdE5vZGVzKHBFcnJv
ckhhbmRsaW5nLCBwTG9jYXRpb25YUGF0aCk7DQoJCX0gDQoJCWNhdGNoIChKRE9NRXhjZXB0aW9u
IGUpIHsNCgkJCUxvZy5sb2dFcnJvcigiSkRPTSBFcnJvciBkdXJpbmcgZXh0cmFjdGlvbiBvZiBl
cnJvciB0eXBlcyBmcm9tIGV4Y2VwdGlvbiBoYW5kbGluZyBkZWZpbml0aW9uOiAiICsgZS5nZXRN
ZXNzYWdlKCkpOw0KCQkJTG9nLmxvZ0RlYnVnKCJnZXRIYW5kbGluZ3NGb3JMb2NhdGlvbjogPC0t
IG51bGwgKEpET01FeGNlcHRpb246ICIgKyBlLmdldE1lc3NhZ2UoKSArICIpIik7DQoJCQlyZXR1
cm4gbnVsbDsNCgkJfQ0KICAgICAgICAvLyBjaGVjayBleGNlcHRpb24gbm9kZXMgc2FuaXR5DQoJ
CWlmIChleGNlcHRpb25Ob2RlcyA9PSBudWxsIHx8IGV4Y2VwdGlvbk5vZGVzLmlzRW1wdHkoKSkg
ew0KCQkJTG9nLmxvZ0RlYnVnKCJnZXRIYW5kbGluZ3NGb3JMb2NhdGlvbjogPC0tIG51bGwgKE5v
IGV4Y2VwdGlvbk5vZGVzKSIpOw0KCQkJcmV0dXJuIG51bGw7DQoJCX0JCQkNCgkJDQoJCS8vIGV4
dHJhY3QgZXhjZXB0aW9ucyBmcm9tIGxpc3QsIGlmIGxvY2F0aW9uIGV4aXN0cyBhbmQgZXhjZXB0
aW9uDQoJCS8vIGRlZmluaXRpb25zIGFyZSBjb250YWluZWQNCgkJLy8gaXRlcmF0aW9uIG92ZXIg
YWxsIGRlZmluZWQgZXhjZXB0aW9ucyBpbiBsb2NhdGlvbg0KCQlFeGNlcHRpb25IYW5kbGluZ0lu
Zm8gZXhjZXB0aW9uSGFuZGxpbmdJbmZvID0gbnVsbDsNCgkJRWxlbWVudCBleGNlcHRpb25IYW5k
bGluZ0VsZW1lbnQgPSBudWxsOw0KCQlmb3IgKEVsZW1lbnQgZXhjZXB0aW9uTm9kZSA6IGV4Y2Vw
dGlvbk5vZGVzKSB7DQoJCQlib29sZWFuIGlzRXJyb3JNZXNzYWdlQ29udGFpbnNDaGVja1RydWUg
PSBmYWxzZTsNCgkJCWZpbmFsIFN0cmluZyBlcnJvck1lc3NhZ2VDb250YWluc0Zyb21EZWZpbml0
aW9uID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX0VSUk9S
X01FU1NBR0VfQ09OVEFJTlMpOw0KCQkJaWYgKGVycm9yTWVzc2FnZUNvbnRhaW5zRnJvbURlZmlu
aXRpb24gPT0gbnVsbCB8fA0KCQkJCShjdXJyZW50RXJyb3JNZXNzYWdlICE9IG51bGwgJiYNCgkJ
CQllcnJvck1lc3NhZ2VDb250YWluc0Zyb21EZWZpbml0aW9uICE9IG51bGwgJiYNCgkJCQljdXJy
ZW50RXJyb3JNZXNzYWdlLmNvbnRhaW5zKGVycm9yTWVzc2FnZUNvbnRhaW5zRnJvbURlZmluaXRp
b24pKSkgDQoJCQl7DQoJCQkJaXNFcnJvck1lc3NhZ2VDb250YWluc0NoZWNrVHJ1ZSA9IHRydWU7
DQoJCQl9DQoNCgkJCS8vIENoZWNrIGZvciBvcHRpb25hbCBhdHRyaWJ1dCBlcnJvck1lc3NhZ2VS
ZWdleDoNCgkJCWJvb2xlYW4gaXNFcnJvck1lc3NhZ2VSZWdleENoZWNrVHJ1ZSA9IGZhbHNlOw0K
CQkJZmluYWwgU3RyaW5nIGVycm9yTWVzc2FnZVJlZ2V4RnJvbURlZmluaXRpb24gPSBleGNlcHRp
b25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9BVFRSSUJVVEVfRVJST1JfTUVTU0FHRV9SRUdF
WF9JRCk7DQoJCQlpZiAoZXJyb3JNZXNzYWdlUmVnZXhGcm9tRGVmaW5pdGlvbiA9PSBudWxsIHx8
DQoJCQkJKGN1cnJlbnRFcnJvck1lc3NhZ2UgIT0gbnVsbCAmJg0KCQkJCWVycm9yTWVzc2FnZVJl
Z2V4RnJvbURlZmluaXRpb24gIT0gbnVsbCAmJg0KCQkJCWN1cnJlbnRFcnJvck1lc3NhZ2UubWF0
Y2hlcyhlcnJvck1lc3NhZ2VSZWdleEZyb21EZWZpbml0aW9uKSkpIA0KCQkJew0KCQkJCWlzRXJy
b3JNZXNzYWdlUmVnZXhDaGVja1RydWUgPSB0cnVlOw0KCQkJfQ0KCQkJDQoJCQkvLyBDaGVjayBm
b3Igb3B0aW9uYWwgYXR0cmlidXQgY2FsbGVyVHlwZToNCgkJCWJvb2xlYW4gaXNDYWxsZXJUeXBl
Q2hlY2tUcnVlID0gZmFsc2U7DQoJCQlmaW5hbCBTdHJpbmcgY2FsbGVyVHlwZUZyb21EZWZpbml0
aW9uID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX0VSUk9S
X0NBTExFUl9UWVBFX0lEKTsNCgkJCWlmIChjYWxsZXJUeXBlRnJvbURlZmluaXRpb24gPT0gbnVs
bCB8fA0KCQkJCShjdXJyZW50Q2FsbGVyVHlwZSAhPSBudWxsICYmDQoJCQkJY2FsbGVyVHlwZUZy
b21EZWZpbml0aW9uICE9IG51bGwgJiYNCgkJCQljdXJyZW50Q2FsbGVyVHlwZS5lcXVhbHMoY2Fs
bGVyVHlwZUZyb21EZWZpbml0aW9uKSkpIA0KCQkJew0KCQkJCWlzQ2FsbGVyVHlwZUNoZWNrVHJ1
ZSA9IHRydWU7DQoJCQl9DQoJCQkNCgkJCS8vIGlmIGRlZmluZWQgZXhjZXB0aW9uIHR5cGUgZXF1
YWxzIGV4Y2VwdGlvbiwgc2V0IGhhbmRsaW5nIGFuZA0KCQkJLy8gZXhpdCBsb29wDQoJCQlmaW5h
bCBTdHJpbmcgZXhjZXB0aW9uVHlwZUZyb21EZWZpbml0aW9uID0gZXhjZXB0aW9uTm9kZS5nZXRB
dHRyaWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX0VSUk9SX1RZUEVfSUQpOw0KCQkJaWYgKGV4Y2Vw
dGlvblR5cGVGcm9tRGVmaW5pdGlvbi5lcXVhbHMocEV4Y2VwdGlvblR5cGUpICYmIGlzRXJyb3JN
ZXNzYWdlQ29udGFpbnNDaGVja1RydWUgJiYgaXNFcnJvck1lc3NhZ2VSZWdleENoZWNrVHJ1ZSAm
JiBpc0NhbGxlclR5cGVDaGVja1RydWUpIHsNCgkJCQlleGNlcHRpb25IYW5kbGluZ0luZm8gPSBn
ZXRSZXRWYWwoZXhjZXB0aW9uTm9kZSwgcEV4Y2VwdGlvblR5cGUpOw0KCQkJCWV4Y2VwdGlvbkhh
bmRsaW5nRWxlbWVudCA9IGV4Y2VwdGlvbk5vZGU7DQoJCQkJYnJlYWs7DQoJCQl9CQ0KCQkJICAN
CgkJCS8vIGlmIGdlbmVyaWMgaGFuZGxpbmcgaXMgYWxsb3dlZCBhbmQgZGVmaW5lZCAodHlwZT0i
YWxsIiksIHNldCAoY2FjaGUpDQoJCQkvLyBnZW5lcmljIGhhbmRsaW5nDQoJCQllbHNlIGlmIChl
eGNlcHRpb25UeXBlRnJvbURlZmluaXRpb24uZXF1YWxzKEVIRF9WQUxVRV9HRU5FUklDX0VSUk9S
X1RZUEVfSUQpICYmIGlzRXJyb3JNZXNzYWdlQ29udGFpbnNDaGVja1RydWUgJiYgaXNFcnJvck1l
c3NhZ2VSZWdleENoZWNrVHJ1ZSAmJiBpc0NhbGxlclR5cGVDaGVja1RydWUpIHsNCgkJCQlleGNl
cHRpb25IYW5kbGluZ0luZm8gPSBnZXRSZXRWYWwoZXhjZXB0aW9uTm9kZSwgcEV4Y2VwdGlvblR5
cGUpOw0KCQkJCWV4Y2VwdGlvbkhhbmRsaW5nRWxlbWVudCA9IGV4Y2VwdGlvbk5vZGU7DQoJCQkJ
YnJlYWs7DQoJCQl9DQoJCX0NCg0KCQlpZiAoZXhjZXB0aW9uSGFuZGxpbmdFbGVtZW50ID09IG51
bGwpIHsNCgkJCXJldHVybiBudWxsOw0KCQl9IGVsc2Ugew0KCQkJLy8gY2hlY2sgaGFuZGxpbmcg
bm9kZXMgc2FuaXR5DQoJCQlmb3IgKE9iamVjdCBuIDogZXhjZXB0aW9uSGFuZGxpbmdFbGVtZW50
LmdldENoaWxkcmVuKEVIRF9BVFRSSUJVVEVfSEFORExJTkcpKSB7DQoJCQkJCWV4Y2VwdGlvbkhh
bmRsaW5nSW5mby5hZGRTZXJ2aWNlTmFtZSgoKEVsZW1lbnQpIG4pLmdldFRleHQoKSk7DQoJCQl9
DQoNCgkJCUxvZy5sb2dEZWJ1ZygiZ2V0SGFuZGxpbmdzRm9yTG9jYXRpb246IDwtLSAiICsgZXhj
ZXB0aW9uSGFuZGxpbmdJbmZvKTsNCgkJCXJldHVybiBleGNlcHRpb25IYW5kbGluZ0luZm87DQoJ
CX0NCgkJDQoJfQ0KCQ0KCXByaXZhdGUgc3RhdGljIEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyBnZXRS
ZXRWYWwoRWxlbWVudCBleGNlcHRpb25Ob2RlLCBTdHJpbmcgZXhjZXB0aW9uVHlwZSkgewkNCgkJ
ZmluYWwgU3RyaW5nIGVycm9yVG9CZVRocm93biA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRl
VmFsdWUoRUhEX0FUVFJJQlVURV9SRVRVUk5fVkFMVUVfSUQpOw0KCQlmaW5hbCBTdHJpbmcgdHlw
ZSA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVURV9FUlJPUl9U
WVBFX0lEKTsNCgkJZmluYWwgU3RyaW5nIGVycm9ySGFuZGxpbmdJZCA9IGV4Y2VwdGlvbk5vZGUu
Z2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVURV9FUlJPUl9IQU5ETElOR19JRF9JRCk7DQoJ
CWZpbmFsIFN0cmluZyBtYXhSZXRyeUF0dGVtcHRzID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1
dGVWYWx1ZShFSERfQVRUUklCVVRFX01BWF9SRVRSWV9BVFRFTVBUUyk7DQoJCWZpbmFsIFN0cmlu
ZyBwcmludEJ1c2luZXNzT2JqZWN0U3RyID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1
ZShFSERfUFJJTlRfQlVTSU5FU1NfT0JKRUNUX0lEKTsNCgkJZmluYWwgYm9vbGVhbiBwcmludEJ1
c2luZXNzT2JqZWN0ID0gcHJpbnRCdXNpbmVzc09iamVjdFN0ciA9PSBudWxsID8gZmFsc2UgOiBC
b29sZWFuLnBhcnNlQm9vbGVhbihwcmludEJ1c2luZXNzT2JqZWN0U3RyKTsNCgkJcmV0dXJuIG5l
dyBFeGNlcHRpb25IYW5kbGluZ0luZm8oZXJyb3JUb0JlVGhyb3duLCB0eXBlLCBlcnJvckhhbmRs
aW5nSWQsIGV4Y2VwdGlvblR5cGUsIG1heFJldHJ5QXR0ZW1wdHMsIHByaW50QnVzaW5lc3NPYmpl
Y3QpOw0KCX0NCgkNCg0KCXByaXZhdGUgc3RhdGljIElEYXRhIGJ1aWxkQ29tcGFjdEVycm9ySW5m
byhTdHJpbmcgcEVycm9yTG9jYXRpb24sIFN0cmluZyBmbG93U3RlcCkgew0KCQlJRGF0YSBjb21w
YWN0RXJyb3JJbmZvID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOw0KCQlJRGF0YUN1cnNvciBjb21w
YWN0RXJyb3JJbmZvQ3Vyc29yID0gY29tcGFjdEVycm9ySW5mby5nZXRDdXJzb3IoKTsNCg0KCQlJ
RGF0YVV0aWwucHV0KGNvbXBhY3RFcnJvckluZm9DdXJzb3IsIENPTVBBQ1RfRVJST1JfTE9DQVRJ
T05fSUQsIHBFcnJvckxvY2F0aW9uKTsNCgkJSURhdGFVdGlsLnB1dChjb21wYWN0RXJyb3JJbmZv
Q3Vyc29yLCBDT01QQUNUX0VSUk9SX0ZMT1dfU1RFUCwgZmxvd1N0ZXApOw0KDQoJCWNvbXBhY3RF
cnJvckluZm9DdXJzb3IuZGVzdHJveSgpOw0KDQoJCXJldHVybiBjb21wYWN0RXJyb3JJbmZvOw0K
CX0NCgkJDQoJQFN1cHByZXNzV2FybmluZ3MoInJhd3R5cGVzIikNCglwcml2YXRlIHN0YXRpYyBm
aW5hbCBOU1NlcnZpY2UgZ2V0Q3VycmVudFRvcExldmVsU2VydmljZSgpIHsNCgkJTlNTZXJ2aWNl
IHRvcExldmVsU2VydmljZU5hbWUgPSBudWxsOw0KCQlJbnZva2VTdGF0ZSBzdGF0ZSA9IEludm9r
ZVN0YXRlLmdldEN1cnJlbnRTdGF0ZSgpOw0KCQlpZiAoc3RhdGUgIT0gbnVsbCkgew0KCQkJU3Rh
Y2sgY2FsbFN0YWNrID0gc3RhdGUuZ2V0Q2FsbFN0YWNrKCk7DQoJCQlpZiAoY2FsbFN0YWNrICE9
IG51bGwgJiYgY2FsbFN0YWNrLnNpemUoKSA+IDApIHsNCgkJCQl0b3BMZXZlbFNlcnZpY2VOYW1l
ID0gKE5TU2VydmljZSkgY2FsbFN0YWNrLmVsZW1lbnRBdCgwKTsNCgkJCX0NCgkJfQ0KCQlyZXR1
cm4gdG9wTGV2ZWxTZXJ2aWNlTmFtZTsNCgl9DQoJDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3Ry
aW5nIGdldE1lc3NhZ2VVSUQoSURhdGEgbWV0YURhdGEpIHsNCgkJaWYobWV0YURhdGEgIT0gbnVs
bCkgew0KCQkJSURhdGFDdXJzb3IgdGVtcEN1cnNvciA9IG1ldGFEYXRhLmdldEN1cnNvcigpOw0K
CQkJSURhdGEgbWVzc2FnZUlkZW50aWZpZXIgPSBJRGF0YVV0aWwuZ2V0SURhdGEodGVtcEN1cnNv
cixNRVNTQUdFSURFTlRJRklFUl9JRCk7DQoJCQlpZiAobWVzc2FnZUlkZW50aWZpZXIgIT0gbnVs
bCkgew0KCQkJCUlEYXRhQ3Vyc29yIG1lc3NhZ2VJZGVudGlmaWVyQ3Vyc29yID0gbWVzc2FnZUlk
ZW50aWZpZXIuZ2V0Q3Vyc29yKCk7DQoJCQkJcmV0dXJuIChTdHJpbmcpIElEYXRhVXRpbC5nZXQo
bWVzc2FnZUlkZW50aWZpZXJDdXJzb3IsIFVJRF9JRCk7DQoJCQl9DQoJCX0NCgkJcmV0dXJuIG51
bGw7DQoJfQ0KDQoJcHVibGljIHN0YXRpYyB2b2lkIGluaXRIYW5kbGluZ3MoVVJMIHBVcmwsIFNB
WEJ1aWxkZXIgcEJ1aWxkZXIpIHsNCgkJZmluYWwgU0FYQnVpbGRlciBidWlsZGVyOw0KCQlpZiAo
cEJ1aWxkZXIgPT0gbnVsbCkgew0KCQkJYnVpbGRlciA9IG5ldyBTQVhCdWlsZGVyKCk7DQoJCX0g
ZWxzZSB7DQoJCQlidWlsZGVyID0gcEJ1aWxkZXI7DQoJCX0NCgkJZmluYWwgRG9jdW1lbnQgZG9j
ID0gbG9hZEhhbmRsaW5ncyhwVXJsLCBidWlsZGVyKTsNCgkJc3luY2hyb25pemVkKGVycm9ySGFu
ZGxpbmdMb2NrKSB7DQoJCQlfZXJyb3JIYW5kbGluZyA9IGRvYzsNCgkJfQ0KCX0NCgkNCglwcml2
YXRlIHN0YXRpYyBEb2N1bWVudCBsb2FkSGFuZGxpbmdzKFVSTCBwRmlsZSwgU0FYQnVpbGRlciBw
QnVpbGRlcikgew0KCQkvLyBMb2FkIGV4Y2VwdGlvbiBoYW5kbGluZyBkZWZpbml0aW9uIGZpbGUN
CgkJDQoJCXRyeSB7DQoJCQlmaW5hbCBEb2N1bWVudCBlaGQgPSBwQnVpbGRlci5idWlsZChwRmls
ZSk7DQoJCQ0KCQkJTG9nLmxvZ0luZm8oIlN1Y2Nlc3NmdWxseSBpbml0aWFsaXplZCBlcnJvciBo
YW5kbGluZyIpOw0KCQkJcmV0dXJuIGVoZDsNCgkJfSANCgkJY2F0Y2ggKEpET01FeGNlcHRpb24g
ZSkgew0KCQkJTG9nLmxvZ0Vycm9yKCJKRE9NIEVycm9yIGR1cmluZyBpbml0aWFsaXphdGlvbiBv
ZiBlcnJvciBoYW5kbGluZzogIiArIGUuZ2V0TWVzc2FnZSgpKTsNCgkJCXRocm93IG5ldyBVbmRl
Y2xhcmVkVGhyb3dhYmxlRXhjZXB0aW9uKGUpOw0KCQl9IA0KCQljYXRjaCAoSU9FeGNlcHRpb24g
ZSkgew0KCQkJTG9nLmxvZ0Vycm9yKCJJTyBFcnJvciBkdXJpbmcgaW5pdGlhbGl6YXRpb24gb2Yg
ZXJyb3IgaGFuZGxpbmc6ICIgKyBlLmdldE1lc3NhZ2UoKSk7DQoJCQl0aHJvdyBuZXcgVW5kZWNs
YXJlZFRocm93YWJsZUV4Y2VwdGlvbihlKTsNCgkJfQ0KCX0NCg0KDQoJcHJpdmF0ZSBzdGF0aWMg
U3RyaW5nIGFzU3RyaW5nKFN0cmluZ1tdIHRlbXBQYXJ0cykgew0KCQlTdHJpbmdCdWlsZGVyIGJ1
aWxkZXIgPSBuZXcgU3RyaW5nQnVpbGRlcigpOw0KCQlmb3IgKFN0cmluZyBzdHJpbmcgOiB0ZW1w
UGFydHMpIHsNCgkJCWJ1aWxkZXIuYXBwZW5kKHN0cmluZykuYXBwZW5kKCIsIik7DQoJCX0NCgkJ
cmV0dXJuIGJ1aWxkZXIudG9TdHJpbmcoKTsNCgl9DQoNCgkNCgkvLyAqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJLy8g
LS0tLS0tLS0tLS0tLS0tLS0tLS0tWE1MIE5PREUgTkFNRSBERUZJTklUSU9OUy0tLS0tLS0tLS0t
LS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcg
RUhEX05PREVfRE9DX1JPT1RfSUQgPSAiZXJyb3JIYW5kbGluZyI7DQoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3RyaW5nIEVIRF9OT0RFX0dMT0JBTF9FUlJPUl9UWVBFX0lEID0gImdsb2JhbEV4Y2Vw
dGlvbiI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9OT0RFX0VSUk9SX0xPQ0FU
SU9OX0lEID0gImxvY2F0aW9uIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX05P
REVfRVJST1JfVFlQRV9JRCA9ICJleGNlcHRpb24iOw0KDQoJLy8gKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCS8vIC0t
LS0tLS0tLS0tLS0tLS0tLS1YTUwgTk9ERSBBVFRSSUJVVEUgREVGSU5JVElPTlMtLS0tLS0tLS0t
LS0tLS0tLS0NCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVI
RF9BVFRSSUJVVEVfRVJST1JfVFlQRV9JRCA9ICJ0eXBlIjsNCglwcml2YXRlIHN0YXRpYyBmaW5h
bCBTdHJpbmcgRUhEX0FUVFJJQlVURV9FUlJPUl9DQUxMRVJfVFlQRV9JRCA9ICJjYWxsZXJUeXBl
IjsJCQ0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0VSUk9SX01F
U1NBR0VfQ09OVEFJTlMgPSAiZXJyb3JNZXNzYWdlQ29udGFpbnMiOwkJDQoJcHJpdmF0ZSBzdGF0
aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfRVJST1JfTUVTU0FHRV9SRUdFWF9JRCA9ICJl
cnJvck1lc3NhZ2VSZWdleCI7CQkNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FU
VFJJQlVURV9MT0NBVElPTl9OQU1FX0lEID0gIm5hbWUiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFs
IFN0cmluZyBFSERfQVRUUklCVVRFX1JFVFVSTl9WQUxVRV9JRCA9ICJlcnJvclRvQmVUaHJvd24i
Ow0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0VSUk9SX0hBTkRM
SU5HX0lEX0lEID0gImVycm9ySGFuZGxpbmdJZCI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3Ry
aW5nIEVIRF9BVFRSSUJVVEVfSEFORExJTkc9ICJoYW5kbGluZyI7DQoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfTUFYX1JFVFJZX0FUVEVNUFRTID0gIm1heFJldHJ5
QXR0ZW1wdHMiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX1JF
VFJZX0NPVU5UID0gInJldHJ5Q291bnQiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBF
SERfUFJJTlRfQlVTSU5FU1NfT0JKRUNUX0lEID0gInByaW50QnVzaW5lc3NPYmplY3QiOw0KDQoJ
Ly8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKg0KCS8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLVhNTCBOT0RFIFZBTFVFIERF
RklOSVRJT05TLS0tLS0tLS0tLS0tLS0tLS0tLS0NCgkvLyAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJcHJpdmF0ZSBz
dGF0aWMgZmluYWwgU3RyaW5nIEVIRF9WQUxVRV9HRU5FUklDX0VSUk9SX1RZUEVfSUQgPSAiYWxs
IjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX1ZBTFVFX0dMT0JBTF9FUlJPUl9I
QU5ETElOR19JRCA9ICJnbG9iYWwiOw0KDQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCS8vIC0tLS0tLS0tLS0t
LS0tLS0tLUlOUFVUIEVSUk9SIEZJRUxEIElEIERFRklOSVRJT05TLS0tLS0tLS0tLS0tLS0tLS0N
CgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9f
SUQgPSAiZXhjZXB0aW9uSW5mbyI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVYQ0xV
REVfU0VSVklDRSA9ICJAV3hSZXNpbGllbmNlLmVycm9ySGFuZGxpbmcuZXhjbHVkZVNlcnZpY2VG
cm9tRXJyb3JIYW5kbGluZ0AiOw0KCQ0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJP
Ul9JTkZPX0VSUk9SID0gImVycm9yIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJS
T1JfSU5GT19FUlJPUl9UWVBFID0gImVycm9yVHlwZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwg
U3RyaW5nIEVSUk9SX0lORk9fQ0FMTF9TVEFDS19TRVJWSUNFID0gInNlcnZpY2UiOw0KCXByaXZh
dGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0NBTExfU1RBQ0tfRkxPV19TVEVQID0g
ImZsb3dTdGVwIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfSU5GT19DQUxM
X1NUQUNLID0gImNhbGxTdGFjayI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9S
X0lORk9fRVJST1JfRFVNUCA9ICJlcnJvckR1bXAiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0
cmluZyBFUlJPUl9JTkZPX1RJTUUgPSAidGltZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3Ry
aW5nIEVSUk9SX0lORk9fTkVTVEVEX0VSUk9SX0lEID0gIm5lc3RlZEVycm9ySW5mbyI7DQoNCglw
cml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgR0VORVJJQ19WQUxVRV9NQVBfSUQgPSAiZ2VuZXJp
Y1ZhbHVlTWFwIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgR0VORVJJQ19FUlJPUl9N
RVNTQUdFX0lEID0gImdlbmVyaWNFcnJvck1lc3NhZ2UiOw0KDQoJLy8gKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCS8v
IC0tLS0tLS0tLS0tLS0tT1VUUFVUIEhBTkRMRUQgRVJST1IgRklFTEQgSUQgREVGSU5JVElPTlMt
LS0tLS0tLS0tLS0NCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5n
IEhBTkRMRURfRVJST1JfSU5GT19JRCA9ICJoYW5kbGVkRXJyb3JJbmZvIjsNCgkNCglwcml2YXRl
IHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX1JPT1RfSUQgPSAidG9wU2Vy
dmljZUVycm9yIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9J
TkZPX0hBTkRMRURfSUQgPSAiaGFuZGxlZFNlcnZpY2VFcnJvciI7DQoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19MSURMU0VSVklDRV9JRCA9ICJhcHBsaWNh
dGlvblNlcnZpY2VFcnJvciI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURf
RVJST1JfSU5GT19PUklHSU5fSUQgPSAicm9vdFNlcnZpY2VFcnJvciI7DQoNCglwcml2YXRlIHN0
YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0hBTkRMSU5HX0xPQ0FUSU9OX0lE
ID0gImhhbmRsaW5nTG9jYXRpb24iOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5E
TEVEX0VSUk9SX0lORk9fSEFORExJTkdfVFlQRV9JRCA9ICJoYW5kbGluZ1R5cGUiOw0KCXByaXZh
dGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fREVQVEhfSUQgPSAiZXJy
b3JEZXB0aCI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5G
T19FUlJPUl9DT0RFID0gImVycm9yQ29kZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5n
IEhBTkRMRURfRVJST1JfSU5GT19DQUxMX1NUQUNLID0gImNhbGxTdGFjayI7DQoJcHJpdmF0ZSBz
dGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19FUlJPUl9EVU1QID0gImVycm9y
RHVtcCI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19U
SU1FID0gInRpbWUiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9S
X0lORk9fUElQRUxJTkUgPSAicGlwZWxpbmUiOw0KDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3Ry
aW5nIEVSUk9SX01TR19JRCA9ICJlcnJvck1lc3NhZ2UiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFs
IFN0cmluZyBDT01QQUNUX0VSUk9SX0xPQ0FUSU9OX0lEID0gImVycm9yTG9jYXRpb24iOw0KCXBy
aXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBDT01QQUNUX0VSUk9SX0ZMT1dfU1RFUCA9ICJlcnJv
ckZsb3dTdGVwIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfVFlQRV9JRCA9
ICJlcnJvclR5cGUiOw0KDQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCS8vIC0tLS0tLS0tLS0tLS0tLS0tLS1H
RU5FUklDIERPQyBGSUVMRCBJRCBERUZJTklUSU9OUy0tLS0tLS0tLS0tLS0tLS0NCgkvLyAqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEJVU0lORVNTX0RPQ19JRCA9ICJi
dXNpbmVzc09iamVjdCI7DQoNCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0t
LS1FWENFUFRJT04gSEFORExJTkcgREVGSU5JVElPTi0tLS0tLS0tLS0tLS0tLS0tLQ0KCS8vICoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgTUVUQURBVEFfSUQgPSAibWV0
YURhdGEiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBNRVNTQUdFSURFTlRJRklFUl9J
RCA9ICJNZXNzYWdlSWRlbnRpZmllciI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIFVJ
RF9JRCA9ICJVSUQiOw0KDQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCS8vIC0tLS0tLS0tLS0tLS0tLS0tLS0t
RVhDRVBUSU9OIEhBTkRMSU5HIERFRklOSVRJT04tLS0tLS0tLS0tLS0tLS0tLS0NCgkvLyAqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqDQoJcHJpdmF0ZSBzdGF0aWMgRG9jdW1lbnQgX2Vycm9ySGFuZGxpbmc7DQoJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgT2JqZWN0IGVycm9ySGFuZGxpbmdMb2NrID0gbmV3IE9iamVjdCgpOw0K
CXByaXZhdGUgc3RhdGljIEVycm9ySGFuZGxpbmdMaXN0ZW5lciBfZXJyb3JIYW5kbGluZ0xpc3Rl
bmVyOw0KCXByaXZhdGUgc3RhdGljIENhbGxlclR5cGVTdXBwbGllciBERUZBVUxUX0NBTExFUl9U
WVBFX1NVUFBMSUVSID0gbmV3IENhbGxlclR5cGVTdXBwbGllcigpIHsNCgkJQE92ZXJyaWRlDQoJ
CXB1YmxpYyBTdHJpbmcgZ2V0KCkgew0KCQkJcmV0dXJuIGdldENhbGxlclR5cGVCeUNhbGxpbmdT
ZXJ2aWNlKCk7DQoJCX0NCgl9Ow0KCXByaXZhdGUgc3RhdGljIENhbGxlclR5cGVTdXBwbGllciBj
YWxsZXJUeXBlU3VwcGxpZXIgPSBudWxsOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIE9iamVjdCBj
YWxsZXJUeXBlU3VwcGxpZXJMb2NrID0gbmV3IE9iamVjdCgpOw0KCXByaXZhdGUgc3RhdGljIGZp
bmFsIE9iamVjdCBlcnJvckhhbmRsaW5nTGlzdGVuZXJMb2NrID0gbmV3IE9iamVjdCgpOw0KCXBy
aXZhdGUgc3RhdGljIGZpbmFsIE9iamVjdCBjcmVhdGVTdW1tYXJpemVkRXJyb3JIYW5kbGluZ0xv
Y2sgPSBuZXcgT2JqZWN0KCk7DQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCS8vIC0tLS0tLS0tLS0tLS0tLS0t
LS0tSU5QVVQgR0VUIFZBTFVFIERFRklOSVRJT04tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCgkvLyAq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIE1BWF9SRVRSWV9BVFRFTVBU
U19ERUZBVUxUID0gIm1heFJldHJ5QXR0ZW1wdHNEZWZhdWx0IjsNCglwcml2YXRlIHN0YXRpYyBm
aW5hbCBTdHJpbmcgTUFYX1JFVFJZX0FUVEVNUFRTX0JFRk9SRV9DQU5DRUxfUkVUUlkgPSAibWF4
UmV0cnlBdHRlbXB0c0JlZm9yZUNhbmNlbFJldHJ5IjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBT
dHJpbmcgUEFDS0FHRV9MQ0xfRVJST1IgPSAiV3hSZXNpbGllbmNlIjsNCglwcml2YXRlIHN0YXRp
YyBmaW5hbCBTdHJpbmcgQlJFQUtfUkVUUllfTE9PUCA9ICJicmVhay5yZXRyeS5sb29wLmZvci4i
Ow0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioNCgkvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLUVSUk9SIFZBTFVFIERF
RklOSVRJT04tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCgkvLyAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJcHJpdmF0ZSBz
dGF0aWMgZmluYWwgU3RyaW5nIFJFVFJZID0gIlRSQU5TSUVOVCI7DQoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3RyaW5nIEFCT1JUID0gIkZBVEFMIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJp
bmcgQ09OVElOVUUgPSAiTk9ORSI7CQ0KCQ0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBT
VU1NQVJJWkVEX0VSUk9SX0hBTkRMSU5HX0ZJTEUgPSAiRXJyb3JIYW5kbGluZ1N1bW1hcml6ZWQu
eG1sIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVhDRVBUSU9OX0hBTkRMSU5HX1hT
RF9GSUxFID0gIkVycm9ySGFuZGxpbmcueHNkIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJp
bmcgV1hfUkVTSUxJRU5DRSA9ICJXeFJlc2lsaWVuY2UiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFs
IFN0cmluZyBFUlJPUl9IQU5ETElOR19YTUxfRklMRSA9ICJFcnJvckhhbmRsaW5nLnhtbCI7DQoN
Cg0KCQ0KCQ0KCQ0K</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>com.softwareag.util.IDataMap</value>
    <value>com.wm.app.audit.IAuditRuntime</value>
    <value>wx.resilience.impl.ErrorInfo</value>
    <value>wx.resilience.impl.SummarizedErrorHandlingHandler</value>
    <value>wx.resilience.impl.SummarizedErrorHandlingHandler.Creator</value>
    <value>wx.resilience.impl.Exceptions</value>
    <value>wx.resilience.impl.Paths</value>
    <value>com.wm.lang.ns.NSName</value>
    <value>java.io.File</value>
    <value>java.io.IOException</value>
    <value>java.util.*</value>
    <value>javax.xml.transform.Source</value>
    <value>javax.xml.transform.stream.StreamSource</value>
    <value>javax.xml.validation.Schema</value>
    <value>javax.xml.validation.SchemaFactory</value>
    <value>javax.xml.validation.Validator</value>
    <value>org.jdom.Document</value>
    <value>org.jdom.Element</value>
    <value>org.jdom.JDOMException</value>
    <value>org.jdom.input.SAXBuilder</value>
    <value>org.jdom.xpath.XPath</value>
    <value>org.xml.sax.SAXException</value>
    <value>com.wm.app.b2b.server.*</value>
    <value>java.io.*</value>
    <value>java.lang.reflect.UndeclaredThrowableException</value>
    <value>java.net.URL</value>
    <value>java.nio.file.Files</value>
    <value>java.nio.file.Path</value>
    <value>java.nio.file.StandardCopyOption</value>
    <value>com.wm.lang.ns.NSService</value>
    <value>java.util.function.Supplier</value>
  </array>
</Values>
