<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">QEZ1bmN0aW9uYWxJbnRlcmZhY2UNCnB1YmxpYyBzdGF0aWMgaW50ZXJmYWNlIEV4Y2VwdGlvbkhh
bmRsaW5nTGlzdGVuZXIgew0KCXB1YmxpYyB2b2lkIGFjY2VwdChTdHJpbmcgcFNlcnZpY2VOYW1l
LCBJRGF0YSBwUGlwZWxpbmUpOw0KfQ0KDQpARnVuY3Rpb25hbEludGVyZmFjZQ0KcHVibGljIHN0
YXRpYyBpbnRlcmZhY2UgQ2FsbGVyVHlwZVN1cHBsaWVyIHsNCglwdWJsaWMgU3RyaW5nIGdldCgp
Ow0KfQ0KDQpwcml2YXRlIHN0YXRpYyBQYXRoIGNyZWF0ZVN1bW1hcml6ZWRFeGNlcHRpb25IYW5k
bGluZygpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsNCglzeW5jaHJvbml6ZWQoY3JlYXRlU3Vt
bWFyaXplZEV4Y2VwdGlvbkhhbmRsaW5nTG9jaykgew0KCQlyZXR1cm4gY3JlYXRlU3VtbWFyaXpl
ZEV4Y2VwdGlvbkhhbmRsaW5nKFNVTU1BUklaRURfRVhDRVBUSU9OX0hBTkRMSU5HX0ZJTEUpOw0K
CX0NCn0NCnByaXZhdGUgc3RhdGljIFBhdGggY3JlYXRlU3VtbWFyaXplZEV4Y2VwdGlvbkhhbmRs
aW5nKFN0cmluZyBwRmlsZU5hbWUpDQoJCXRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsNCglGaWxl
IElTRGlyID0gU2VydmVyQVBJLmdldFNlcnZlckNvbmZpZ0RpcigpLmdldFBhcmVudEZpbGUoKTsN
CglGaWxlIElTUGFja2FnZXMgPSBuZXcgamF2YS5pby5GaWxlKElTRGlyLCAicGFja2FnZXMiKTsN
CglmaW5hbCBQYXRoIGNvbmZpZ0RpciA9IFNlcnZlckFQSS5nZXRQYWNrYWdlQ29uZmlnRGlyKFdY
X1JFU0lMSUVOQ0UpLnRvUGF0aCgpOw0KCWZpbmFsIFBhdGggb3V0cHV0RmlsZSA9IGNvbmZpZ0Rp
ci5yZXNvbHZlKHBGaWxlTmFtZSk7DQoJUGF0aHMuYXNzZXJ0UGFyZW50RGlyRXhpc3RzKG91dHB1
dEZpbGUpOw0KDQoJdHJ5IHsNCgkJdHJ5IChDcmVhdG9yIGNyZWF0b3IgPSBTdW1tYXJpemVkRXhj
ZXB0aW9uSGFuZGxpbmdIYW5kbGVyLm5ld0NyZWF0b3Iob3V0cHV0RmlsZSkpIHsNCgkJCWZvciAo
RmlsZSBwYWNrYWdlRGlyIDogSVNQYWNrYWdlcy5saXN0RmlsZXMoKSkgew0KCQkJCWlmIChwYWNr
YWdlRGlyLmlzRGlyZWN0b3J5KCkpIHsNCgkJCQkJZmluYWwgU3RyaW5nIHBhY2thZ2VOYW1lID0g
cGFja2FnZURpci5nZXROYW1lKCk7DQoJCQkJCWlmIChwYWNrYWdlTmFtZS5zdGFydHNXaXRoKCJX
bSIpKSB7DQoJCQkJCQljb250aW51ZTsNCgkJCQkJfQ0KCQkJCQlmaW5hbCBGaWxlIHBhY2thZ2VD
ZmdEaXIgPSBuZXcgRmlsZShwYWNrYWdlRGlyLCAiY29uZmlnIik7DQoJCQkJCWlmIChwYWNrYWdl
Q2ZnRGlyLmlzRGlyZWN0b3J5KCkpIHsNCgkJCQkJCWZpbmFsIEZpbGUgcGFja2FnZUVoZEZpbGUg
PSBuZXcgRmlsZShwYWNrYWdlQ2ZnRGlyLCBFUlJPUl9IQU5ETElOR19YTUxfRklMRSk7DQoJCQkJ
CQlpZiAocGFja2FnZUVoZEZpbGUuaXNGaWxlKCkpIHsNCgkJCQkJCQljcmVhdG9yLnBhcnNlKHBh
Y2thZ2VFaGRGaWxlLCBwYWNrYWdlTmFtZSk7DQoJCQkJCQl9DQoJCQkJCX0NCgkJCQl9DQoJCQl9
DQoJCX0NCgkJdmFsaWRhdGVYTUwoKTsNCgl9IGNhdGNoIChFeGNlcHRpb24gZSkgew0KCQlsb2dF
cnJvcigiRXJyb3IgZHVyaW5nIHBhcnNpbmcgb2Ygc3VtbWFyaXplZEV4Y2VwdGlvbkhhbmRsaW5n
RGVmaW5pdGlvbjogIiArIGUuZ2V0TWVzc2FnZSgpKTsNCgkJdGhyb3cgRXhjZXB0aW9ucy5zaG93
KGUsIFNlcnZpY2VFeGNlcHRpb24uY2xhc3MpOw0KCX0NCglyZXR1cm4gb3V0cHV0RmlsZTsNCn0N
Cg0KcHJpdmF0ZSBzdGF0aWMgZmluYWwgRXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lciBERUZBVUxU
X0VSUk9SX0hBTkRMRVIgPSBuZXcgRXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lcigpIHsNCglwdWJs
aWMgdm9pZCBhY2NlcHQoU3RyaW5nIHMsIElEYXRhIGQpIHsNCgkJbG9nRGVidWcoIkRlZmF1bHRF
cnJvckhhbmRsZXI6IC0tPiAiICsgcyk7DQoJCXRyeSB7DQoJCQlTZXJ2aWNlLmRvSW52b2tlKE5T
TmFtZS5jcmVhdGUocyksIGQpOw0KCQl9IGNhdGNoIChFeGNlcHRpb24gZSkgew0KCQkJbG9nRGVi
dWcoIkRlZmF1bHRFcnJvckhhbmRsZXI6ICIgKyBlLmdldENsYXNzKCkuZ2V0TmFtZSgpICsgIiwg
IiArIGUuZ2V0TWVzc2FnZSgpKTsNCgkJCXRocm93IG5ldyBVbmRlY2xhcmVkVGhyb3dhYmxlRXhj
ZXB0aW9uKGUpOw0KCQl9DQoJCWxvZ0RlYnVnKCJEZWZhdWx0RXJyb3JIYW5kbGVyOiA8LS0iKTsN
Cgl9DQp9Ow0KcHJpdmF0ZSBzdGF0aWMgRXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lciBnZXRFcnJv
ckhhbmRsZXIoKSB7DQoJc3luY2hyb25pemVkIChleGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyTG9j
aykgew0KCQlpZiAoX2V4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXIgPT0gbnVsbCkgew0KCQkJcmV0
dXJuIERFRkFVTFRfRVJST1JfSEFORExFUjsNCgkJfSBlbHNlIHsNCgkJCXJldHVybiBfZXhjZXB0
aW9uSGFuZGxpbmdMaXN0ZW5lcjsNCgkJfQ0KCX0NCn0NCnB1YmxpYyBzdGF0aWMgdm9pZCBzZXRF
cnJvckhhbmRsZXIoRXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lciBwRXJyb3JIYW5kbGluZ0xpc3Rl
bmVyKSB7DQoJc3luY2hyb25pemVkIChleGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyTG9jaykgew0K
CQlfZXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lciA9IHBFcnJvckhhbmRsaW5nTGlzdGVuZXI7DQoJ
fQ0KfQ0KcHJpdmF0ZSBzdGF0aWMgdm9pZCBpbnZva2VFcnJvckhhbmRsZXIoSURhdGEgcEhhbmRs
aW5nU2VydmljZUlucHV0LA0KCQlmaW5hbCBTdHJpbmcgcFNlcnZpY2VOYW1lKSB0aHJvd3MgRXhj
ZXB0aW9uIHsNCglsb2dEZWJ1ZygiaW52b2tlRXJyb3JIYW5kbGVyOiAtLT4gIik7DQoJZmluYWwg
RXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lciBlaGwgPSBnZXRFcnJvckhhbmRsZXIoKTsNCglsb2dE
ZWJ1ZygiaW52b2tlRXJyb3JIYW5kbGVyOiBlaD0iICsgZWhsKTsNCgllaGwuYWNjZXB0KHBTZXJ2
aWNlTmFtZSwgcEhhbmRsaW5nU2VydmljZUlucHV0KTsNCglsb2dEZWJ1ZygiaW52b2tlRXJyb3JI
YW5kbGVyOiA8LS0iKTsNCg0KCS8vIC0tLSA8PElTLUVORD4+IC0tLQ0KfQ0KDQpwcml2YXRlIHN0
YXRpYyBEb2N1bWVudCBnZXRlcnJvckhhbmRsaW5ncygpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9u
IHsNCglzeW5jaHJvbml6ZWQoZXhjZXB0aW9uSGFuZGxpbmdMb2NrKSB7DQoJCWlmIChfZXhjZXB0
aW9uSGFuZGxpbmcgIT0gbnVsbCkgew0KCQkJcmV0dXJuIF9leGNlcHRpb25IYW5kbGluZzsNCgkJ
fQ0KCX0NCglpbml0aWFsaXplRXhjZXB0aW9uSGFuZGxpbmdzKG51bGwpOw0KCXN5bmNocm9uaXpl
ZCAoZXhjZXB0aW9uSGFuZGxpbmdMb2NrKSB7DQoJCWlmIChfZXhjZXB0aW9uSGFuZGxpbmcgPT0g
bnVsbCkgew0KCQkJdGhyb3cgbmV3IElsbGVnYWxTdGF0ZUV4Y2VwdGlvbigiVW5hYmxlIHRvIGlu
aXRpYWxpemUgZXJyb3JIYW5kbGluZy4gRGlkIHlvdSBhc3NlbWJsZSBpdD8iKTsNCgkJfSBlbHNl
IHsNCgkJCXJldHVybiBfZXhjZXB0aW9uSGFuZGxpbmc7DQoJCX0NCgl9DQp9DQoNCnByaXZhdGUg
c3RhdGljIFN0cmluZyBnZXRDYWxsZXJUeXBlKCkgew0KCUNhbGxlclR5cGVTdXBwbGllciBjdHM7
IA0KCXN5bmNocm9uaXplZCAoY2FsbGVyVHlwZVN1cHBsaWVyTG9jaykgew0KCQljdHMgPSBjYWxs
ZXJUeXBlU3VwcGxpZXI7DQoJfQ0KCWlmIChjdHMgPT0gbnVsbCkgew0KCQljdHMgPSBERUZBVUxU
X0NBTExFUl9UWVBFX1NVUFBMSUVSOw0KCX0NCglyZXR1cm4gY3RzLmdldCgpOw0KfQ0KDQpwdWJs
aWMgc3RhdGljIHZvaWQgc2V0Q2FsbGVyVHlwZVN1cHBsaWVyKENhbGxlclR5cGVTdXBwbGllciBw
U3VwcGxpZXIpIHsNCglzeW5jaHJvbml6ZWQgKGNhbGxlclR5cGVTdXBwbGllckxvY2spIHsNCgkJ
Y2FsbGVyVHlwZVN1cHBsaWVyID0gcFN1cHBsaWVyOw0KCX0NCn0NCg0KcHJpdmF0ZSBzdGF0aWMg
U3RyaW5nIGdldENhbGxlclR5cGVCeUNhbGxpbmdTZXJ2aWNlKCkgew0KCUlEYXRhIGlucHV0ID0g
bnVsbDsNCglTdHJpbmcgdHlwZSA9ICIiOw0KCS8vIG91dHB1dA0KCUlEYXRhIG91dHB1dCA9IElE
YXRhRmFjdG9yeS5jcmVhdGUoKTsNCgl0cnkgew0KCQlvdXRwdXQgPSBTZXJ2aWNlLmRvSW52b2tl
KCAid3gucmVzaWxpZW5jZS5pbXBsLmNhbGxlciIsICJnZXRDYWxsZXIiLCBpbnB1dCApOw0KCQlJ
RGF0YU1hcCBvdXRwdXRNYXAgPSBuZXcgSURhdGFNYXAob3V0cHV0KTsNCgkJSURhdGFNYXAgY2Fs
bGVyTWFwID0gbmV3IElEYXRhTWFwKG91dHB1dE1hcC5nZXRBc0lEYXRhKCJjYWxsZXIiKSk7DQoJ
CXJldHVybiBjYWxsZXJNYXAuZ2V0QXNTdHJpbmcoInR5cGUiKTsNCgl9IGNhdGNoIChFeGNlcHRp
b24gZSkgew0KCQlyZXR1cm4gdHlwZTsNCgl9CQ0KfQ0KDQoNCglwcml2YXRlIHN0YXRpYyBTdHJp
bmcgZ2V0Q2FsbFN0YWNrQXNKU09OU3RyaW5nKEFycmF5TGlzdDxJRGF0YUN1cnNvcj4gZXJyb3JJ
bmZvSGllcmFjaHkpIHsNCg0KCQlJRGF0YVtdIGNhbGxTdGFjayA9IElEYXRhVXRpbC5nZXRJRGF0
YUFycmF5KGVycm9ySW5mb0hpZXJhY2h5LmdldCgwKSwgRVJST1JfSU5GT19DQUxMX1NUQUNLKTsN
CgkJDQoJCVN0cmluZyBqc29uU3RyaW5nID0gIiI7DQoJCQ0KCQlpZiAoY2FsbFN0YWNrICE9IG51
bGwpIHsNCgkJCS8vIGlucHV0DQoJCQlJRGF0YSBpbnB1dCA9IElEYXRhRmFjdG9yeS5jcmVhdGUo
KTsNCgkJCUlEYXRhQ3Vyc29yIGlucHV0Q3Vyc29yID0gaW5wdXQuZ2V0Q3Vyc29yKCk7DQoNCgkJ
CS8vIGRvY3VtZW50DQoJCQlJRGF0YSBkb2N1bWVudCA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsN
CgkJCUlEYXRhQ3Vyc29yIGRvY3VtZW50Q3Vyc29yID0gZG9jdW1lbnQuZ2V0Q3Vyc29yKCk7DQoJ
CQlJRGF0YVV0aWwucHV0KGRvY3VtZW50Q3Vyc29yLCAiY2FsbFN0YWNrIiwgY2FsbFN0YWNrKTsN
CgkJCUlEYXRhVXRpbC5wdXQoaW5wdXRDdXJzb3IsICJkb2N1bWVudCIsIGRvY3VtZW50KTsNCgkJ
CUlEYXRhVXRpbC5wdXQoaW5wdXRDdXJzb3IsICJwcmV0dHlQcmludCIsICJmYWxzZSIpOw0KCQkJ
aW5wdXRDdXJzb3IuZGVzdHJveSgpOw0KDQoJCQkvLyBvdXRwdXQNCgkJCUlEYXRhIG91dHB1dCA9
IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsNCgkJCXRyeSB7DQoJCQkJb3V0cHV0ID0gU2VydmljZS5k
b0ludm9rZSgicHViLmpzb24iLCAiZG9jdW1lbnRUb0pTT05TdHJpbmciLCBpbnB1dCk7DQoJCQkJ
SURhdGFDdXJzb3Igb3V0cHV0Q3Vyc29yID0gb3V0cHV0LmdldEN1cnNvcigpOw0KCQkJCWpzb25T
dHJpbmcgPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKG91dHB1dEN1cnNvciwgImpzb25TdHJpbmciKTsN
CgkJCQlvdXRwdXRDdXJzb3IuZGVzdHJveSgpOw0KCQkJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsN
CgkJCQkvLyBJdCBpcyBwb3NzaWJsZSwgdGhhdCB0aGlzIHNlcnZpY2UgZG9lcyBub3QgZXhpc3Rz
IChXTTguMiBlbnZpcm9ubWVudHMvc3RvcmVzKS4NCgkJCQkvLyBUcnkgYWdhaW4gd2l0aCBTZXJ2
aWNlIGZyb20gV21KU09OIHBhY2thZ2U6DQoJCQkJLy8gVGhpcyBibG9jayBjYW4gYmUgZGVsZXRl
ZCwgaWYgZXZlcnkgZW52aXJvbm1lbnQgaXMgb24gV005LjAhDQoJCQkJdHJ5IHsNCgkJCQkJb3V0
cHV0ID0gU2VydmljZS5kb0ludm9rZSgicHViLmpzb24iLCAiZG9jdW1lbnRUb0pTT04iLCBpbnB1
dCk7DQoJCQkJCUlEYXRhQ3Vyc29yIG91dHB1dEN1cnNvciA9IG91dHB1dC5nZXRDdXJzb3IoKTsN
CgkJCQkJanNvblN0cmluZyA9IElEYXRhVXRpbC5nZXRTdHJpbmcob3V0cHV0Q3Vyc29yLCAianNv
biIpOw0KCQkJCQlvdXRwdXRDdXJzb3IuZGVzdHJveSgpOw0KCQkJCX0gY2F0Y2ggKEV4Y2VwdGlv
biBpbm5lckV4KSB7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJCQ0KCQlyZXR1cm4ganNvblN0cmluZzsN
Cgl9DQoJDQoJcHJpdmF0ZSBzdGF0aWMgSGFzaE1hcDxTdHJpbmcsIFN0cmluZz4gY3JlYXRlR2Vu
ZXJpY1ZhbHVlTWFwKEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyBoYW5kbGluZywgYm9vbGVhbiBicmVh
a1JldHJ5TG9vcCkgew0KCQlIYXNoTWFwPFN0cmluZywgU3RyaW5nPiBnZW5lcmljVmFsdWVNYXAg
PSBuZXcgSGFzaE1hcDxTdHJpbmcsIFN0cmluZz4oKTsNCgkJLy8gZXZhbHVhdGUgZXJyb3JUb0Jl
VGhyb3duOg0KCQlTdHJpbmcgZXJyb3JUb0JlVGhyb3duID0gaGFuZGxpbmcuZ2V0RXJyb3JUb0Jl
VGhyb3duKCk7DQoJCQ0KCQlpbnQgcmV0cnlDb3VudCA9IGdldFJldHJ5Q291bnQoKTsNCgkJZ2Vu
ZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX1JFVFJZX0NPVU5ULCBTdHJpbmcudmFsdWVP
ZihyZXRyeUNvdW50KSk7DQoNCgkJU3RyaW5nIG1heFJldHJ5QXR0ZW1wdHNTdHJpbmcgPSBoYW5k
bGluZy5nZXRNYXhSZXRyeUF0dGVtcHRzKCk7DQoJCUludGVnZXIgbWF4UmV0cnlBdHRlbXB0cyA9
IG51bGw7DQoJCXRyeSB7DQoJCQltYXhSZXRyeUF0dGVtcHRzID0gSW50ZWdlci52YWx1ZU9mKG1h
eFJldHJ5QXR0ZW1wdHNTdHJpbmcpOw0KCQl9IGNhdGNoIChOdW1iZXJGb3JtYXRFeGNlcHRpb24g
bmZlKSB7DQoJCX0JCQkJCQkNCgkJDQoJCWludCBtYXhSZXRyeUF0dGVtcHRzQmVmb3JlQWJvcnQg
PSAwOw0KCQlTdHJpbmcgbWF4UmV0cnlBdHRlbXB0c0JlZm9yZUNhbmNlbFJldHJ5U3RyaW5nID0g
Z2V0VmFsdWVDb25mKA0KCQkJCU1BWF9SRVRSWV9BVFRFTVBUU19CRUZPUkVfQ0FOQ0VMX1JFVFJZ
LCBXWF9SRVNJTElFTkNFLCAidHJ1ZSIsDQoJCQkJIiIsICIiLCAiIiwgIiIpOwkJDQoJCXRyeSB7
DQoJCQltYXhSZXRyeUF0dGVtcHRzQmVmb3JlQWJvcnQgPSBJbnRlZ2VyLnZhbHVlT2YobWF4UmV0
cnlBdHRlbXB0c0JlZm9yZUNhbmNlbFJldHJ5U3RyaW5nKTsNCgkJfSBjYXRjaCAoTnVtYmVyRm9y
bWF0RXhjZXB0aW9uIG5mZSkge30NCg0KCQkvLyBEZXRlcm1pbmUgZXJyb3JUb0JlVGhyb3duIGFu
ZCBtYXhSZXRyeUF0dGVtcHRzIGFjY29yZGluZyB0byByZXRyeSBjb25maWd1cmF0aW9uOg0KCQlp
ZiAoYnJlYWtSZXRyeUxvb3ApIHsNCgkJCS8vIGJyZWFrIGVuZGxlc3MgbG9vcCAtLT4gb3Zlcndy
aXRlIHdpdGggTk9ORSBvciBGQVRBTA0KCQkJZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklC
VVRFX0VSUk9SX1RPX0JFX1RIUk9XTl9JRCwgRVJST1JfTk9ORS5lcXVhbHMoZXJyb3JUb0JlVGhy
b3duKT9FUlJPUl9OT05FOkVSUk9SX0ZBVEFMKTsNCgkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhE
X0FUVFJJQlVURV9NQVhfUkVUUllfQVRURU1QVFMsIFN0cmluZy52YWx1ZU9mKHJldHJ5Q291bnQp
KTsNCgkJfSBlbHNlIGlmIChtYXhSZXRyeUF0dGVtcHRzICE9IG51bGwgJiYgbWF4UmV0cnlBdHRl
bXB0cyA9PSAtMSAmJiByZXRyeUNvdW50IDwgbWF4UmV0cnlBdHRlbXB0c0JlZm9yZUFib3J0KSB7
DQoJCQkvLyBlbmRsZXNzIGxvb3AgLS0+IFRSQU5TSUVOVA0KCQkJZ2VuZXJpY1ZhbHVlTWFwLnB1
dChFSERfQVRUUklCVVRFX0VSUk9SX1RPX0JFX1RIUk9XTl9JRCwgRVJST1JfVFJBTlNJRU5UKTsN
CgkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9NQVhfUkVUUllfQVRURU1QVFMs
IG1heFJldHJ5QXR0ZW1wdHNCZWZvcmVDYW5jZWxSZXRyeVN0cmluZyk7DQoJCX0gZWxzZSB7DQoJ
CQkvLyBsZXNzIHRoYW4gbWF4UmV0cnlBdHRlbXB0cyAtLT4gVFJBTlNJRU5UDQoJCQlpZiAobWF4
UmV0cnlBdHRlbXB0cyAhPSBudWxsICYmIHJldHJ5Q291bnQgPCBtYXhSZXRyeUF0dGVtcHRzKSB7
DQoJCQkJZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX0VSUk9SX1RPX0JFX1RIUk9X
Tl9JRCwgRVJST1JfVFJBTlNJRU5UKTsNCgkJCQlnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRS
SUJVVEVfTUFYX1JFVFJZX0FUVEVNUFRTLCBtYXhSZXRyeUF0dGVtcHRzU3RyaW5nKTsNCgkJCX0g
ZWxzZSB7CQkJCQkNCgkJCQkgaWYgKEVSUk9SX05PTkUuZXF1YWxzKGVycm9yVG9CZVRocm93bikp
IHsNCgkJCQkJIGdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9FUlJPUl9UT19CRV9U
SFJPV05fSUQsIEVSUk9SX05PTkUpOw0KCQkJCSB9IGVsc2Ugew0KCQkJCQkgLy8gRmluYWwgYmVo
YXZpb3IgZm9yIGFib3J0DQoJCQkJCSBnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVf
RVJST1JfVE9fQkVfVEhST1dOX0lELCBFUlJPUl9GQVRBTCk7DQoJCQkJIH0NCgkJCQkgLy8gbWF4
UmV0cnlBdHRlbXB0cyBpcyByZWFjaGVkIG9yIHdhcyBub3QgZGVmaW5lZCAoLT4gMCkNCgkJCQkg
U3RyaW5nIG1heFJldHJ5QXR0ZW1wdHNSZXN1bHQgPSBtYXhSZXRyeUF0dGVtcHRzICE9IG51bGwg
PyBtYXhSZXRyeUF0dGVtcHRzU3RyaW5nIDogIjAiOw0KCQkJCSBnZW5lcmljVmFsdWVNYXAucHV0
KEVIRF9BVFRSSUJVVEVfTUFYX1JFVFJZX0FUVEVNUFRTLCBtYXhSZXRyeUF0dGVtcHRzUmVzdWx0
KTsNCgkJCX0NCgkJfQ0KCQlyZXR1cm4gZ2VuZXJpY1ZhbHVlTWFwOw0KCX0NCgkNCgkvKioNCgkg
KiBGaWx0ZXJzIHRoZSBlcnJvciBoaWVyYXJjaHkgZm9yIHRoZSBkZWVwZXN0IHNlcnZpY2UgLS0+
IHNob3dzDQoJICogaW4gd2hpY2ggc2VydmljZSBvZiBvdXIgY29kZSB0aGUgZXJyb3Igb2NjdXJl
ZA0KCSAqIA0KCSAqIEBwYXJhbSBoaWVyYWNoaWNhbEVycm9ySW5mbw0KCSAqIEByZXR1cm4gdGhl
IGxldmVsIG9mIHRoZSBkZWVwZXN0IHNlcnZpY2UgbmFtZQ0KCSAqLw0KCXByaXZhdGUgc3RhdGlj
IGludCBnZXREZWVwZXN0QXBwbGljYXRpb25TZXJ2aWNlTGV2ZWwoQXJyYXlMaXN0PEVycm9ySW5m
bz4gaGllcmFjaGljYWxFcnJvckluZm8pIHsNCgkJU3RyaW5nIHNlcnZpY2UgPSBudWxsOw0KCQlm
b3IgKGludCBsZXZlbCA9IGhpZXJhY2hpY2FsRXJyb3JJbmZvLnNpemUoKSAtIDE7IGxldmVsID4g
MDsgbGV2ZWwtLSkgew0KCQkJc2VydmljZSA9IGhpZXJhY2hpY2FsRXJyb3JJbmZvLmdldChsZXZl
bCkuZ2V0U2VydmljZSgpOw0KCQkJLy8gY3JlYXRlIG9mIExpc3Qgb2YgRmxvd25hbWVzIHRvIGln
bm9yZQ0KCQkJTGlzdDxTdHJpbmc+IGlnbm9yZUZsb3dzID0gQXJyYXlzLmFzTGlzdCgid3gucmVz
aWxpZW5jZS5wdWIucmVzaWxpZW5jZTp0aHJvd0Vycm9yIiwNCgkJCQkJIAkJCQkJCQkJInd4LnJl
c2lsaWVuY2UucHViLnJlc2lsaWVuY2U6dGhyb3dFcnJvcklmTmVjZXNzYXJ5IiwgDQoJCQkJCQkJ
CQkJCQkJICJ3eC5yZXNpbGllbmNlLnB1Yi5yZXNpbGllbmNlOnBvc3RQcm9jZXNzRm9yVG9wTGV2
ZWxTZXJ2aWNlIik7DQoJCQkNCgkJCQ0KCQkJDQoJCQkNCgkJCQ0KCQkJaWYgKHNlcnZpY2UgIT0g
bnVsbCAmJiANCgkJCQkhc2VydmljZS5zdGFydHNXaXRoKCJwdWIuIikgJiYNCgkJCQkhc2Vydmlj
ZS5zdGFydHNXaXRoKCJ3bS4iKSAmJiANCgkJCQkhaWdub3JlRmxvd3MuY29udGFpbnMoc2Vydmlj
ZSkNCgkJCSkgew0KCQkJCXJldHVybiBsZXZlbDsNCgkJCX0NCgkJfQ0KDQoJCXJldHVybiAwOw0K
CX0NCg0KCQ0KCS8qKg0KCSAqIExvZ3MgbWVzc2FnZSBmcm9tIGEgY2F0YWxvZy4NCgkgKiANCgkg
KiBAcGFyYW0gYUZhY2lsaXR5S2V5DQoJICogICAgICAgICAgICBkZWZpbmVzIHRoZSBmYWNpbGl0
eSBpbiB0aGUgY2F0YWxvZw0KCSAqIEBwYXJhbSBhTWVzc2FnZUtleQ0KCSAqICAgICAgICAgICAg
Y29ycmVzcG9uZHMgd2l0aCB0aGUgbWVzc2FnZSBrZXkgaW4gdGhlIGNhdGFsb2cNCgkgKiBAcGFy
YW0gYU1lc3NhZ2VQYXJhbXMNCgkgKiAgICAgICAgICAgIGlmIG1lc3NhZ2UgaW4gdGhlIGNhdGFs
b2cgaGFzIHBhcmFtZXRlcnMNCgkgKiBAdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24NCgkgKiAgICAg
ICAgICAgICB0aHJvd24gaWYgdGhlIGxvZ2dpbmcgZmFpbGVkDQoJICovDQoJLypwcml2YXRlIHN0
YXRpYyB2b2lkIGxvZ01lc3NhZ2VGcm9tQ2F0YWxvZyhTdHJpbmcgYUZhY2lsaXR5S2V5LCBTdHJp
bmcgYU1lc3NhZ2VLZXksIFN0cmluZ1tdIGFNZXNzYWdlUGFyYW1zKSB7DQoJCS8vIGlucHV0DQoJ
CUlEYXRhIHRJbnB1dCA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsNCgkJSURhdGFDdXJzb3IgaW5w
dXRDdXJzb3IgPSB0SW5wdXQuZ2V0Q3Vyc29yKCk7DQoJCUlEYXRhVXRpbC5wdXQoaW5wdXRDdXJz
b3IsICJmYWNpbGl0eUtleSIsIGFGYWNpbGl0eUtleSk7DQoJCUlEYXRhVXRpbC5wdXQoaW5wdXRD
dXJzb3IsICJtZXNzYWdlS2V5IiwgYU1lc3NhZ2VLZXkpOw0KCQ0KCQkvLyBUaGVyZSBhcmUgc29t
ZSBtZXNzYWdlIHBhcmFtcyBwcm92aWRlZA0KCQlpZiAoYU1lc3NhZ2VQYXJhbXMubGVuZ3RoID4g
MCkgew0KCQkJSURhdGFVdGlsLnB1dChpbnB1dEN1cnNvciwgIm1lc3NhZ2VQYXJhbXMiLCBhTWVz
c2FnZVBhcmFtcyk7DQoJCX0NCgkJaW5wdXRDdXJzb3IuZGVzdHJveSgpOw0KCQ0KCQl0cnkgew0K
CQkJU2VydmljZS5kb0ludm9rZSgid3gucmVzaWxpZW5jZS5pbXBsOiIsICJsb2dNZXNzYWdlRnJv
bUNhdGFsb2ciLCB0SW5wdXQpOw0KCQl9IA0KCQljYXRjaCAoRXhjZXB0aW9uIGUpIHsNCgkJfQ0K
CX0qLw0KDQoJDQoJcHJpdmF0ZSBzdGF0aWMgdm9pZCB2YWxpZGF0ZVhNTCgpIHRocm93cyBTZXJ2
aWNlRXhjZXB0aW9uIHsNCgkJbG9nSW5mbygiVmFsaWRhdGluZyB0aGUgc3VtbWFyaXplZCBlcnJv
ciBoYW5kbGluZyIpOw0KCQlGaWxlIHhtbEZpbGUgPSBuZXcgRmlsZShTZXJ2ZXJBUEkuZ2V0UGFj
a2FnZUNvbmZpZ0RpcihXWF9SRVNJTElFTkNFKSArICIvIiArIFNVTU1BUklaRURfRVhDRVBUSU9O
X0hBTkRMSU5HX0ZJTEUpOw0KCQlGaWxlIHNjaGVtYUZpbGUgPSBuZXcgRmlsZShTZXJ2ZXJBUEku
Z2V0UGFja2FnZUNvbmZpZ0RpcihXWF9SRVNJTElFTkNFKSArICIvIiArIEVYQ0VQVElPTl9IQU5E
TElOR19YU0RfRklMRSk7DQoJCQ0KCQl0cnkgew0KCQkJLy8gMS4gTG9va3VwIGEgZmFjdG9yeSBm
b3IgdGhlIFczQyBYTUwgU2NoZW1hIGxhbmd1YWdlDQoJCQlTY2hlbWFGYWN0b3J5IGZhY3Rvcnkg
PSBTY2hlbWFGYWN0b3J5Lm5ld0luc3RhbmNlKCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNj
aGVtYSIpOw0KCQkJLy8gMi4gQ29tcGlsZSB0aGUgc2NoZW1hLg0KCQkJLy8gSGVyZSB0aGUgc2No
ZW1hIGlzIGxvYWRlZCBmcm9tIGEgamF2YS5pby5GaWxlLCBidXQgeW91IGNvdWxkIHVzZQ0KCQkJ
Ly8gYSBqYXZhLm5ldC5VUkwgb3IgYSBqYXZheC54bWwudHJhbnNmb3JtLlNvdXJjZSBpbnN0ZWFk
Lg0KCQkJU2NoZW1hIHNjaGVtYSA9IGZhY3RvcnkubmV3U2NoZW1hKHNjaGVtYUZpbGUpOwkNCgkJ
CS8vIDMuIEdldCBhIHZhbGlkYXRvciBmcm9tIHRoZSBzY2hlbWEuDQoJCQlWYWxpZGF0b3IgdmFs
aWRhdG9yID0gc2NoZW1hLm5ld1ZhbGlkYXRvcigpOwkNCgkJCS8vIDQuIFBhcnNlIHRoZSBkb2N1
bWVudCB5b3Ugd2FudCB0byBjaGVjay4NCgkJCVNvdXJjZSBzb3VyY2UgPSBuZXcgU3RyZWFtU291
cmNlKHhtbEZpbGUpOwkNCgkJCS8vIDUuIENoZWNrIHRoZSBkb2N1bWVudA0KCQkJdmFsaWRhdG9y
LnZhbGlkYXRlKHNvdXJjZSk7DQoJCQlsb2dJbmZvKHhtbEZpbGUuZ2V0TmFtZSgpICsgIiBpcyB2
YWxpZCIpOw0KCQl9IA0KCQljYXRjaCAoU0FYRXhjZXB0aW9ufElPRXhjZXB0aW9uIGV4KSB7DQoJ
CQlTdHJpbmcgbWVzc2FnZSA9IHhtbEZpbGUuZ2V0TmFtZSgpICsgIiBpcyBub3QgdmFsaWQgYmVj
YXVzZSBcbiIgKyBleC5nZXRNZXNzYWdlKCk7DQoJCQlmaW5hbCBTZXJ2aWNlRXhjZXB0aW9uIHNl
ID0gbmV3IFNlcnZpY2VFeGNlcHRpb24obWVzc2FnZSk7DQoJCQlzZS5pbml0Q2F1c2UoZXgpOw0K
CQkJdGhyb3cgc2U7DQoJCX0JDQoJfQ0KDQoJcHJpdmF0ZSBzdGF0aWMgU3RyaW5nIGdldFZhbHVl
Q29uZihTdHJpbmcga2V5LCBTdHJpbmcgd3hDb25maWdQa2dOYW1lLA0KCQkJU3RyaW5nIG5vU2Vy
dmljZUV4Y2VwdGlvbiwgU3RyaW5nIHN1YnN0aXR1dGVWYXJpYWJsZXMsDQoJCQlTdHJpbmcgaWdu
b3JlR2xvYmFsVmFsdWVzLCBTdHJpbmcgc2NhbkFsbENvbmZpZ3VyYXRpb25zLA0KCQkJU3RyaW5n
IG5vVmFyaWFibGVJbnRlcnBvbGF0aW9uKSB7DQoJCVN0cmluZyBwcm9wZXJ0eVZhbHVlID0gIiAi
Ow0KCQkvLyBpbnB1dA0KCQlJRGF0YSBjb25maWdQYXJhbSA9IElEYXRhRmFjdG9yeS5jcmVhdGUo
KTsNCgkJSURhdGFDdXJzb3IgY29uZmlnUGFyYW1DdXJzb3IgPSBjb25maWdQYXJhbS5nZXRDdXJz
b3IoKTsNCgkJSURhdGFVdGlsLnB1dChjb25maWdQYXJhbUN1cnNvciwgImtleSIsIGtleSk7DQoJ
CUlEYXRhVXRpbC5wdXQoY29uZmlnUGFyYW1DdXJzb3IsICJ3eENvbmZpZ1BrZ05hbWUiLCB3eENv
bmZpZ1BrZ05hbWUpOw0KCQlJRGF0YVV0aWwucHV0KGNvbmZpZ1BhcmFtQ3Vyc29yLCAibm9TZXJ2
aWNlRXhjZXB0aW9uIiwNCgkJCQlub1NlcnZpY2VFeGNlcHRpb24pOw0KCQljb25maWdQYXJhbUN1
cnNvci5kZXN0cm95KCk7DQoJDQoJCS8vIG91dHB1dA0KCQlJRGF0YSBjb25maWdPdXRwdXQgPSBJ
RGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJCXRyeSB7DQoJCQljb25maWdPdXRwdXQgPSBTZXJ2aWNl
LmRvSW52b2tlKCJ3eC5jb25maWcucHViIiwgImdldFZhbHVlIiwNCgkJCQkJY29uZmlnUGFyYW0p
Ow0KCQl9IGNhdGNoIChFeGNlcHRpb24gZSkgew0KCQkJcmV0dXJuIHByb3BlcnR5VmFsdWU7DQoJ
CX0NCgkJSURhdGFDdXJzb3IgY29uZmlnT3V0cHV0Q3Vyc29yID0gY29uZmlnT3V0cHV0LmdldEN1
cnNvcigpOw0KCQlwcm9wZXJ0eVZhbHVlID0gSURhdGFVdGlsDQoJCQkJLmdldFN0cmluZyhjb25m
aWdPdXRwdXRDdXJzb3IsICJwcm9wZXJ0eVZhbHVlIik7DQoJCWNvbmZpZ091dHB1dEN1cnNvci5k
ZXN0cm95KCk7DQoJCWxvZ0RlYnVnKCJnZXRWYWx1ZUNvbmYgZm9yICIgKyBrZXkgKyAiIHJldHVy
bnM6ICIgKyBwcm9wZXJ0eVZhbHVlKTsNCgkJcmV0dXJuIHByb3BlcnR5VmFsdWU7DQoJfQ0KCQ0K
CXByaXZhdGUgc3RhdGljIGludCBnZXRSZXRyeUNvdW50KCkgew0KCQlJRGF0YSBpbnB1dCA9IG51
bGw7DQoJCS8vIG91dHB1dA0KCQlJRGF0YSBvdXRwdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7
DQoJCXRyeSB7DQoJCQlvdXRwdXQgPSBTZXJ2aWNlLmRvSW52b2tlKCJwdWIuZmxvdyIsICJnZXRS
ZXRyeUNvdW50IiwgaW5wdXQpOw0KCQkJSURhdGFDdXJzb3Igb3V0cHV0Q3Vyc29yID0gb3V0cHV0
LmdldEN1cnNvcigpOw0KCQkJcmV0dXJuIEludGVnZXIucGFyc2VJbnQoSURhdGFVdGlsLmdldFN0
cmluZyhvdXRwdXRDdXJzb3IsICJyZXRyeUNvdW50IikpOw0KCQl9IGNhdGNoIChFeGNlcHRpb24g
ZSkgew0KCQkJcmV0dXJuIDA7DQoJCX0NCgl9DQoJDQoJLyoqDQoJICogRXh0cmFjdHMgYW4gZXJy
b3IgaGllcmFyY2h5IGZvciBhIGdpdmVuIGVycm9yIGhpZXJhcmNoeSAobm9ybWFsbHkgb25seQ0K
CSAqIGZpbGxlZCBieSBvbmUgKHJvb3QpIGVycm9yKS4gVXNlcyB0aGUgY2FsbFN0YWNrIGFuZCB0
aGUgZGVlcGVzdCBlcnJvckluZm8gdG8gYnVpbGQgaGllYXJjaHkuDQoJICogDQoJICogQHBhcmFt
IHBFcnJvckhpZXJhcmNoeQ0KCSAqICAgICAgICAgICAgLSBhcnJheSBsaXN0IG9mIElEYXRhQ3Vy
c29ycyBvbiBwdWIuZXZlbnQ6ZXhjZXB0aW9uSW5mbw0KCSAqIEByZXR1cm4gZnVsbCBhcnJheSBs
aXN0IGFycmF5IGxpc3Qgb2YgRXJyb3JJbmZvIG9uDQoJICogICAgICAgICBwdWIuZXZlbnQ6ZXhj
ZXB0aW9uSW5mbywgY29udGFpbmluZyBhbGwgZXJyb3JzIGZyb20gcm9vdCgwKSB0bw0KCSAqICAg
ICAgICAgb3JpZ2luIChzaXplIG9mIGFycmF5IGxpc3QpDQoJICovDQoJcHJpdmF0ZSBzdGF0aWMg
QXJyYXlMaXN0PEVycm9ySW5mbz4gZXh0cmFjdEVycm9ySGllcmFyY2h5KEFycmF5TGlzdDxJRGF0
YUN1cnNvcj4gcEVycm9ySGllcmFyY2h5KSB7CQ0KCQlpZiAocEVycm9ySGllcmFyY2h5ID09IG51
bGwpIHsNCgkJCXJldHVybiBudWxsOw0KCQl9DQoJCQ0KCQlJRGF0YUN1cnNvciBkZWVwZXN0TmVz
dGVkRXJyb3IgPSBnZXREZWVwZXN0TmVzdGVkRXJyb3IocEVycm9ySGllcmFyY2h5KTsNCgkJDQoJ
CS8vIGdldCBjYWxsU3RhY2sgb2YgZXJyb3I6DQoJCUlEYXRhW10gY2FsbFN0YWNrID0gSURhdGFV
dGlsLmdldElEYXRhQXJyYXkocEVycm9ySGllcmFyY2h5LmdldCgwKSwgImNhbGxTdGFjayIpOw0K
CQlBcnJheUxpc3Q8RXJyb3JJbmZvPiBlcnJvckluZm9MaXN0ID0gbnVsbDsNCgkJDQoJCWlmIChj
YWxsU3RhY2sgIT0gbnVsbCkgew0KCQkJZXJyb3JJbmZvTGlzdCA9IG5ldyBBcnJheUxpc3Q8RXJy
b3JJbmZvPihjYWxsU3RhY2subGVuZ3RoKTsNCgkJCQ0KCQkJLy8gdXNlIHRoZSBlcnJvciBhbmQg
ZXJyb3JUeXBlIG9mIHRoZSBkZWVwZXN0IGVycm9ySW5mbyB0byBkZXRlcm1pbmUgdGhlIGVycm9y
IGFuZCBlcnJvclR5cGUgb2YgZWFjaCBsZXZlbDoNCgkJCVN0cmluZyBuZXN0ZWRFcnJvclR5cGUg
PSBJRGF0YVV0aWwuZ2V0U3RyaW5nKGRlZXBlc3ROZXN0ZWRFcnJvciwgRVJST1JfSU5GT19FUlJP
Ul9UWVBFKTsNCgkJCVN0cmluZyBuZXN0ZWRFcnJvciA9IElEYXRhVXRpbC5nZXRTdHJpbmcoZGVl
cGVzdE5lc3RlZEVycm9yLCBFUlJPUl9JTkZPX0VSUk9SKTsNCg0KCQkJLy8gdGhlIGNhbGxzdGFj
ayBpcyBvcmRlcmVkIGludmVyc2UhDQoJCQlmb3IgKGludCBpID0gY2FsbFN0YWNrLmxlbmd0aCAt
IDEgOyBpID49IDA7IGktLSkgew0KCQkJCS8vIHVzZSB0aGUgc2VydmljZSBuYW1lcyBvZiB0aGUg
Y2FsbHN0YWNrOg0KCQkJCUlEYXRhQ3Vyc29yIGNhbGxTdGFja0N1cnNvciA9IGNhbGxTdGFja1tp
XS5nZXRDdXJzb3IoKTsNCgkJCQlTdHJpbmcgc2VydmljZSA9IElEYXRhVXRpbC5nZXRTdHJpbmco
Y2FsbFN0YWNrQ3Vyc29yLCBFUlJPUl9JTkZPX0NBTExfU1RBQ0tfU0VSVklDRSk7DQoJCQkJU3Ry
aW5nIGZsb3dTdGVwID0gSURhdGFVdGlsLmdldFN0cmluZyhjYWxsU3RhY2tDdXJzb3IsIEVSUk9S
X0lORk9fQ0FMTF9TVEFDS19GTE9XX1NURVApOw0KCQkJCWlmIChmbG93U3RlcCA9PSBudWxsIHx8
IGZsb3dTdGVwLmVxdWFscygiIikpIHsNCgkJCQkJZmxvd1N0ZXAgPSAibi5hLiI7DQoJCQkJfQ0K
CQkJCQ0KCQkJCWVycm9ySW5mb0xpc3QuYWRkKG5ldyBFcnJvckluZm8obmVzdGVkRXJyb3IsIG5l
c3RlZEVycm9yVHlwZSwgc2VydmljZSwgZmxvd1N0ZXApKTsNCgkJCX0NCgkJfQ0KCQlyZXR1cm4g
ZXJyb3JJbmZvTGlzdDsNCgl9DQoJDQoJLyoqDQoJICogR2V0cyB0aGUgZGVlcGVzdCBlcnJvciBp
biB0aGUgZXJyb3IgaGllcmFyY2h5DQoJICogDQoJICogQHBhcmFtIHBFcnJvckhpZXJhcmNoeQ0K
CSAqICAgICAgICAgICAgLSBhcnJheSBsaXN0IG9mIElEYXRhQ3Vyc29ycyBvbiBwdWIuZXZlbnQ6
ZXhjZXB0aW9uSW5mbw0KCSAqIEByZXR1cm4gY3Vyc29yIG9mIHRoZSBkZWVwZXN0IGVycm9yDQoJ
ICovDQoJcHJpdmF0ZSBzdGF0aWMgSURhdGFDdXJzb3IgZ2V0RGVlcGVzdE5lc3RlZEVycm9yKEFy
cmF5TGlzdDxJRGF0YUN1cnNvcj4gcEVycm9ySGllcmFyY2h5KSB7CQkNCgkJDQoJCUlEYXRhQ3Vy
c29yIG5lc3RlZEVycm9yID0gcEVycm9ySGllcmFyY2h5LmdldCgwKTsNCgkJSURhdGFDdXJzb3Ig
Y3VycmVudEVycm9yID0gbnVsbDsNCgkJSURhdGEgbmVzdGVkRXJyb3JJRGF0YSA9IG51bGw7DQoJ
CWRvIHsNCgkJCWN1cnJlbnRFcnJvciA9IG5lc3RlZEVycm9yOw0KCQkJbmVzdGVkRXJyb3JJRGF0
YSA9IElEYXRhVXRpbC5nZXRJRGF0YShjdXJyZW50RXJyb3IsIEVSUk9SX0lORk9fTkVTVEVEX0VS
Uk9SX0lEKTsNCgkJCWlmIChuZXN0ZWRFcnJvcklEYXRhICE9IG51bGwpIHsNCgkJCQluZXN0ZWRF
cnJvciA9IG5lc3RlZEVycm9ySURhdGEuZ2V0Q3Vyc29yKCk7DQoJCQl9IGVsc2Ugew0KCQkJCW5l
c3RlZEVycm9yID0gbnVsbDsNCgkJCX0NCgkJfSB3aGlsZSAobmVzdGVkRXJyb3IgIT0gbnVsbCk7
DQoNCgkJcmV0dXJuIGN1cnJlbnRFcnJvcjsNCg0KCX0JDQoNCgkvKnB1YmxpYyBzdGF0aWMgY2xh
c3MgTG9nIHsNCgkJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTG9nIElOU1RBTkNFID0gbmV3IExvZygp
Ow0KCQlwcml2YXRlIHN0YXRpYyBmaW5hbCBib29sZWFuIGxvZ2dpbmcgPSBmYWxzZTsNCg0KCQlw
dWJsaWMgc3RhdGljIHZvaWQgaW5pdCgpIHsNCgkJCWlmIChsb2dnaW5nKSB7DQoJCQkJSU5TVEFO
Q0UuaW5pdFdyaXRlcigpOw0KCQkJfQ0KCQl9DQoJCXB1YmxpYyBzdGF0aWMgdm9pZCB3cml0ZShT
dHJpbmcgcE1lc3NhZ2UpIHsNCgkJCWlmIChsb2dnaW5nKSB7DQoJCQkJSU5TVEFOQ0UubG9nKHBN
ZXNzYWdlKTsNCgkJCX0NCgkJfQ0KCQlwdWJsaWMgc3RhdGljIHZvaWQgY2xvc2UoKSB7DQoJCQlp
ZiAobG9nZ2luZykgew0KCQkJCUlOU1RBTkNFLmNsb3NlV3JpdGVyKCk7DQoJCQl9DQoJCX0NCgkJ
cHVibGljIHN0YXRpYyBib29sZWFuIGlzTG9nZ2luZygpIHsNCgkJCXJldHVybiBsb2dnaW5nOw0K
CQl9DQoNCgkJcHJpdmF0ZSBib29sZWFuIGluaXRpYWxpemVkOw0KCQlwcml2YXRlIHZvaWQgaW5p
dFdyaXRlcigpIHsNCgkJCWluaXRpYWxpemVkID0gdHJ1ZTsNCgkJfQ0KCQlwcml2YXRlIHZvaWQg
Y2xvc2VXcml0ZXIoKSB7DQoJCQlpbml0aWFsaXplZCA9IGZhbHNlOw0KCQl9DQoJCXByaXZhdGUg
dm9pZCBsb2coU3RyaW5nIHBNZXNzYWdlKSB7DQoJCQlpZiAoaW5pdGlhbGl6ZWQpIHsNCgkJCQkv
LyBUT0RPOg0KCQkJCS8vTG9nLmxvZ1RyYWNlTWVzc2FnZSgiRUhGIiwgcE1lc3NhZ2UpOw0KCQkJ
fQ0KCQl9DQoJfSovDQoJcHVibGljIHN0YXRpYyBjbGFzcyBFcnJvckhhbmRsaW5nRXhjZXB0aW9u
IGV4dGVuZHMgUnVudGltZUV4Y2VwdGlvbiB7DQoJCXByaXZhdGUgc3RhdGljIGZpbmFsIGxvbmcg
c2VyaWFsVmVyc2lvblVJRCA9IC0zOTUwMTAwNzQxNjM2NDc5NjgxTDsNCg0KCQlwdWJsaWMgRXJy
b3JIYW5kbGluZ0V4Y2VwdGlvbihTdHJpbmcgcE1zZywgVGhyb3dhYmxlIHBDYXVzZSkgew0KCQkJ
c3VwZXIocE1zZywgcENhdXNlKTsNCgkJfQ0KDQoJCXB1YmxpYyBFcnJvckhhbmRsaW5nRXhjZXB0
aW9uKFN0cmluZyBwTXNnKSB7DQoJCQlzdXBlcihwTXNnKTsNCgkJfQ0KDQoJCXB1YmxpYyBFcnJv
ckhhbmRsaW5nRXhjZXB0aW9uKFRocm93YWJsZSBwQ2F1c2UpIHsNCgkJCXN1cGVyKHBDYXVzZSk7
DQoJCX0NCgl9DQoNCglwdWJsaWMgc3RhdGljIGNsYXNzIEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyB7
DQoJCS8vIE9sZCByZXByZXNlbnRhdGlvbiBvZiBFeGNlcHRpb25IYW5kbGluZ0luZm8gKGRlcHJl
Y2F0ZWQpDQoJCXByaXZhdGUgZmluYWwgTGlzdDxTdHJpbmc+IHNlcnZpY2VOYW1lcyA9IG5ldyBB
cnJheUxpc3Q8PigpOw0KCQlwcml2YXRlIGZpbmFsIFN0cmluZyAgZXJyb3JUb0JlVGhyb3duLCB0
eXBlLCBlcnJvckNvZGUsIGV4Y2VwdGlvblR5cGUsIG1heFJldHJ5QXR0ZW1wdHM7DQoJCXByaXZh
dGUgZmluYWwgYm9vbGVhbiBwcmludEJ1c2luZXNzT2JqZWN0Ow0KCQlwdWJsaWMgRXhjZXB0aW9u
SGFuZGxpbmdJbmZvKFN0cmluZyBwRXJyb3JUb0JlVGhyb3duLCBTdHJpbmcgcFR5cGUsIFN0cmlu
ZyBwRXJyb3JDb2RlLA0KCQkJCSAJCQkJCSBTdHJpbmcgcEV4Y2VwdGlvblR5cGUsIFN0cmluZyBw
TWF4UmV0cnlBdHRlbXB0cywNCgkJCQkgCQkJCQkgYm9vbGVhbiBwUHJpbnRCdXNpbmVzc09iamVj
dCkgew0KCQkJZXJyb3JUb0JlVGhyb3duID0gcEVycm9yVG9CZVRocm93bjsNCgkJCXR5cGUgPSBw
VHlwZTsNCgkJCWVycm9yQ29kZSA9IHBFcnJvckNvZGU7DQoJCQlleGNlcHRpb25UeXBlID0gcEV4
Y2VwdGlvblR5cGU7DQoJCQltYXhSZXRyeUF0dGVtcHRzID0gcE1heFJldHJ5QXR0ZW1wdHM7DQoJ
CQlwcmludEJ1c2luZXNzT2JqZWN0ID0gcFByaW50QnVzaW5lc3NPYmplY3Q7DQoJCX0NCg0KCQlw
dWJsaWMgTGlzdDxTdHJpbmc+IGdldEhhbmRsaW5nU2VydmljZXMoKSB7DQoJCQlyZXR1cm4gc2Vy
dmljZU5hbWVzOw0KCQl9DQoNCgkJcHVibGljIHZvaWQgYWRkU2VydmljZU5hbWUoU3RyaW5nIHBT
ZXJ2aWNlTmFtZSkgew0KCQkJc2VydmljZU5hbWVzLmFkZChwU2VydmljZU5hbWUpOw0KCQl9DQoN
CgkJcHVibGljIFN0cmluZyBnZXRFcnJvclRvQmVUaHJvd24oKSB7DQoJCQlyZXR1cm4gZXJyb3JU
b0JlVGhyb3duOw0KCQl9DQoNCgkJcHVibGljIFN0cmluZyBnZXRUeXBlKCkgew0KCQkJcmV0dXJu
IHR5cGU7DQoJCX0NCg0KCQlwdWJsaWMgU3RyaW5nIGdldEVycm9yQ29kZSgpIHsNCgkJCXJldHVy
biBlcnJvckNvZGU7DQoJCX0NCg0KCQlwdWJsaWMgU3RyaW5nIGdldEV4Y2VwdGlvblR5cGUoKSB7
DQoJCQlyZXR1cm4gZXhjZXB0aW9uVHlwZTsNCgkJfQ0KDQoJCXB1YmxpYyBTdHJpbmcgZ2V0TWF4
UmV0cnlBdHRlbXB0cygpIHsNCgkJCXJldHVybiBtYXhSZXRyeUF0dGVtcHRzOw0KCQl9DQoNCgkJ
cHVibGljIGJvb2xlYW4gaXNQcmludEJ1c2luZXNzT2JqZWN0KCkgew0KCQkJcmV0dXJuIHByaW50
QnVzaW5lc3NPYmplY3Q7DQoJCX0NCg0KCQlAT3ZlcnJpZGUNCgkJcHVibGljIFN0cmluZyB0b1N0
cmluZygpIHsNCgkJCWZpbmFsIFN0cmluZ0J1aWxkZXIgc2IgPSBuZXcgU3RyaW5nQnVpbGRlcigp
Ow0KCQkJc2IuYXBwZW5kKHN1cGVyLnRvU3RyaW5nKCkpOw0KCQkJc2IuYXBwZW5kKCI6IGVycm9y
VG9CZVRocm93bj0gIik7DQoJCQlzYi5hcHBlbmQoZXJyb3JUb0JlVGhyb3duKTsNCgkJCXNiLmFw
cGVuZCgiLCB0eXBlPSIpOw0KCQkJc2IuYXBwZW5kKHR5cGUpOw0KCQkJc2IuYXBwZW5kKCJlcnJv
ckNvZGU9Iik7DQoJCQlzYi5hcHBlbmQoZXJyb3JDb2RlKTsNCgkJCXNiLmFwcGVuZCgiLCBleGNl
cHRpb25UeXBlPSIpOw0KCQkJc2IuYXBwZW5kKGV4Y2VwdGlvblR5cGUpOw0KCQkJc2IuYXBwZW5k
KCIsIG1heFJldHJ5QXR0ZW1wdHM9Iik7DQoJCQlzYi5hcHBlbmQobWF4UmV0cnlBdHRlbXB0cyk7
DQoJCQlzYi5hcHBlbmQoIiwgcHJpbnRCdXNpbmVzc09iamVjdD0iKTsNCgkJCXNiLmFwcGVuZChw
cmludEJ1c2luZXNzT2JqZWN0KTsNCgkJCXNiLmFwcGVuZCgiLCBzZXJ2aWNlTmFtZXM9Iik7DQoJ
CQkvLyBUT0RPOg0KCQkJLy9zYi5hcHBlbmQoU3RyaW5ncy5hc1N0cmluZyhzZXJ2aWNlTmFtZXMp
KTsNCgkJCXJldHVybiBzYi50b1N0cmluZygpOw0KCQl9DQoJCQ0KCX0NCgkNCgkvKioNCgkgKiBF
eHRyYWN0IGhhbmRsaW5ncyBmb3IgYW4gZXJyb3IgYXQgYSBsb2NhdGlvbiBmcm9tIGEgZ2l2ZW4g
ZXhjZXB0aW9uDQoJICogaGFuZGxpbmcgZGVmaW5pdGlvbg0KCSAqIA0KCSAqIEBwYXJhbSBwRXJy
b3JIYW5kbGluZw0KCSAqICAgICAgICAgICAgZGVmaW5pdGlvbiBhcyBET00gZG9jdW1lbnQgdG8g
dXNlIGZvciBleHRyYWN0aW9uDQoJICogQHBhcmFtIHBMb2NhdGlvblhQYXRoDQoJICogICAgICAg
ICAgICBlcnJvciBsb2NhdGlvbiBhcyBYUEFUSA0KCSAqIEBwYXJhbSBwRXhjZXB0aW9uVHlwZQ0K
CSAqICAgICAgICAgICAgZXJyb3IgdHlwZSBhcyBTdHJpbmcNCgkgKiBAcGFyYW0gY3VycmVudENh
bGxlclR5cGUNCgkgKiAgICAgICAgICAgIGNhbGxlciB0eXBlIGFzIFN0cmluZwkNCgkgKiBAcGFy
YW0gY3VycmVudEVycm9yTWVzc2FnZQ0KCSAqICAgICAgICAgICAgb3JpZ2luYWwgZXJyb3IgYXMg
U3RyaW5nIA0KCSAqIEByZXR1cm4gYWxsIGZvdW5kIGhhbmRsaW5ncyBmb3IgdGhlIGdpdmVuIGVy
cm9yIGFzIGFuIGFycmF5IGxpc3QsIGVtcHR5DQoJICogICAgICAgICBsaXN0IGluIGNhc2Ugb2Yg
bm8gZm91bmQgZXJyb3INCgkgKiBAdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24NCgkgKi8NCglAU3Vw
cHJlc3NXYXJuaW5ncygidW5jaGVja2VkIikNCglwcml2YXRlIHN0YXRpYyBFeGNlcHRpb25IYW5k
bGluZ0luZm8gZ2V0SGFuZGxpbmdzRm9yTG9jYXRpb24oDQoJCQlEb2N1bWVudCBwRXJyb3JIYW5k
bGluZywgU3RyaW5nIHBMb2NhdGlvblhQYXRoLA0KCQkJU3RyaW5nIHBFeGNlcHRpb25UeXBlLCBT
dHJpbmcgY3VycmVudENhbGxlclR5cGUsIFN0cmluZyBjdXJyZW50RXJyb3JNZXNzYWdlKQ0KCQkJ
dGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gew0KCQlsb2dEZWJ1ZygiZ2V0SGFuZGxpbmdzRm9yTG9j
YXRpb246IC0tPiAiICsgcExvY2F0aW9uWFBhdGggKyAiLCAiICsgcEV4Y2VwdGlvblR5cGUgKyAi
LCAiICsgY3VycmVudENhbGxlclR5cGUgKyAiLCAiICsgY3VycmVudEVycm9yTWVzc2FnZSk7DQoN
CgkJLy8gZ2V0IGV4Y2VwdGlvbiBsaXN0IGZvciBsb2NhdGlvbg0KCQlMaXN0PEVsZW1lbnQ+IGV4
Y2VwdGlvbk5vZGVzID0gbnVsbDsNCgkJdHJ5IHsNCgkJCWV4Y2VwdGlvbk5vZGVzID0gKExpc3Q8
RWxlbWVudD4pIFhQYXRoLnNlbGVjdE5vZGVzKHBFcnJvckhhbmRsaW5nLCBwTG9jYXRpb25YUGF0
aCk7DQoJCX0gDQoJCWNhdGNoIChKRE9NRXhjZXB0aW9uIGUpIHsNCgkJCWxvZ0Vycm9yKCJKRE9N
IEVycm9yIGR1cmluZyBleHRyYWN0aW9uIG9mIGVycm9yIHR5cGVzIGZyb20gZXhjZXB0aW9uIGhh
bmRsaW5nIGRlZmluaXRpb246ICIgKyBlLmdldE1lc3NhZ2UoKSk7DQoJCQlsb2dEZWJ1ZygiZ2V0
SGFuZGxpbmdzRm9yTG9jYXRpb246IDwtLSBudWxsIChKRE9NRXhjZXB0aW9uOiAiICsgZS5nZXRN
ZXNzYWdlKCkgKyAiKSIpOw0KCQkJcmV0dXJuIG51bGw7DQoJCX0NCiAgICAgICAgLy8gY2hlY2sg
ZXhjZXB0aW9uIG5vZGVzIHNhbml0eQ0KCQlpZiAoZXhjZXB0aW9uTm9kZXMgPT0gbnVsbCB8fCBl
eGNlcHRpb25Ob2Rlcy5pc0VtcHR5KCkpIHsNCgkJCWxvZ0RlYnVnKCJnZXRIYW5kbGluZ3NGb3JM
b2NhdGlvbjogPC0tIG51bGwgKE5vIGV4Y2VwdGlvbk5vZGVzKSIpOw0KCQkJcmV0dXJuIG51bGw7
DQoJCX0JCQkNCgkJDQoJCS8vIGV4dHJhY3QgZXhjZXB0aW9ucyBmcm9tIGxpc3QsIGlmIGxvY2F0
aW9uIGV4aXN0cyBhbmQgZXhjZXB0aW9uDQoJCS8vIGRlZmluaXRpb25zIGFyZSBjb250YWluZWQN
CgkJLy8gaXRlcmF0aW9uIG92ZXIgYWxsIGRlZmluZWQgZXhjZXB0aW9ucyBpbiBsb2NhdGlvbg0K
CQlFeGNlcHRpb25IYW5kbGluZ0luZm8gZXhjZXB0aW9uSGFuZGxpbmdJbmZvID0gbnVsbDsNCgkJ
RWxlbWVudCBleGNlcHRpb25IYW5kbGluZ0VsZW1lbnQgPSBudWxsOw0KCQlmb3IgKEVsZW1lbnQg
ZXhjZXB0aW9uTm9kZSA6IGV4Y2VwdGlvbk5vZGVzKSB7DQoJCQlib29sZWFuIGlzRXJyb3JNZXNz
YWdlQ29udGFpbnNDaGVja1RydWUgPSBmYWxzZTsNCgkJCWZpbmFsIFN0cmluZyBlcnJvck1lc3Nh
Z2VDb250YWluc0Zyb21EZWZpbml0aW9uID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1
ZShFSERfQVRUUklCVVRFX0VSUk9SX01FU1NBR0VfQ09OVEFJTlMpOw0KCQkJaWYgKGVycm9yTWVz
c2FnZUNvbnRhaW5zRnJvbURlZmluaXRpb24gPT0gbnVsbCB8fA0KCQkJCShjdXJyZW50RXJyb3JN
ZXNzYWdlICE9IG51bGwgJiYNCgkJCQllcnJvck1lc3NhZ2VDb250YWluc0Zyb21EZWZpbml0aW9u
ICE9IG51bGwgJiYNCgkJCQljdXJyZW50RXJyb3JNZXNzYWdlLmNvbnRhaW5zKGVycm9yTWVzc2Fn
ZUNvbnRhaW5zRnJvbURlZmluaXRpb24pKSkgDQoJCQl7DQoJCQkJaXNFcnJvck1lc3NhZ2VDb250
YWluc0NoZWNrVHJ1ZSA9IHRydWU7DQoJCQl9DQoNCgkJCS8vIENoZWNrIGZvciBvcHRpb25hbCBh
dHRyaWJ1dCBlcnJvck1lc3NhZ2VSZWdleDoNCgkJCWJvb2xlYW4gaXNFcnJvck1lc3NhZ2VSZWdl
eENoZWNrVHJ1ZSA9IGZhbHNlOw0KCQkJZmluYWwgU3RyaW5nIGVycm9yTWVzc2FnZVJlZ2V4RnJv
bURlZmluaXRpb24gPSBleGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9BVFRSSUJV
VEVfRVJST1JfTUVTU0FHRV9SRUdFWF9JRCk7DQoJCQlpZiAoZXJyb3JNZXNzYWdlUmVnZXhGcm9t
RGVmaW5pdGlvbiA9PSBudWxsIHx8DQoJCQkJKGN1cnJlbnRFcnJvck1lc3NhZ2UgIT0gbnVsbCAm
Jg0KCQkJCWVycm9yTWVzc2FnZVJlZ2V4RnJvbURlZmluaXRpb24gIT0gbnVsbCAmJg0KCQkJCWN1
cnJlbnRFcnJvck1lc3NhZ2UubWF0Y2hlcyhlcnJvck1lc3NhZ2VSZWdleEZyb21EZWZpbml0aW9u
KSkpIA0KCQkJew0KCQkJCWlzRXJyb3JNZXNzYWdlUmVnZXhDaGVja1RydWUgPSB0cnVlOw0KCQkJ
fQ0KCQkJDQoJCQkvLyBDaGVjayBmb3Igb3B0aW9uYWwgYXR0cmlidXQgY2FsbGVyVHlwZToNCgkJ
CWJvb2xlYW4gaXNDYWxsZXJUeXBlQ2hlY2tUcnVlID0gZmFsc2U7DQoJCQlmaW5hbCBTdHJpbmcg
Y2FsbGVyVHlwZUZyb21EZWZpbml0aW9uID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1
ZShFSERfQVRUUklCVVRFX0VSUk9SX0NBTExFUl9UWVBFX0lEKTsNCgkJCWlmIChjYWxsZXJUeXBl
RnJvbURlZmluaXRpb24gPT0gbnVsbCB8fA0KCQkJCShjdXJyZW50Q2FsbGVyVHlwZSAhPSBudWxs
ICYmDQoJCQkJY2FsbGVyVHlwZUZyb21EZWZpbml0aW9uICE9IG51bGwgJiYNCgkJCQljdXJyZW50
Q2FsbGVyVHlwZS5lcXVhbHMoY2FsbGVyVHlwZUZyb21EZWZpbml0aW9uKSkpIA0KCQkJew0KCQkJ
CWlzQ2FsbGVyVHlwZUNoZWNrVHJ1ZSA9IHRydWU7DQoJCQl9DQoJCQkNCgkJCS8vIGlmIGRlZmlu
ZWQgZXhjZXB0aW9uIHR5cGUgZXF1YWxzIGV4Y2VwdGlvbiwgc2V0IGhhbmRsaW5nIGFuZA0KCQkJ
Ly8gZXhpdCBsb29wDQoJCQlmaW5hbCBTdHJpbmcgZXhjZXB0aW9uVHlwZUZyb21EZWZpbml0aW9u
ID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX0VSUk9SX1RZ
UEVfSUQpOw0KCQkJaWYgKGV4Y2VwdGlvblR5cGVGcm9tRGVmaW5pdGlvbi5lcXVhbHMocEV4Y2Vw
dGlvblR5cGUpICYmIGlzRXJyb3JNZXNzYWdlQ29udGFpbnNDaGVja1RydWUgJiYgaXNFcnJvck1l
c3NhZ2VSZWdleENoZWNrVHJ1ZSAmJiBpc0NhbGxlclR5cGVDaGVja1RydWUpIHsNCgkJCQlleGNl
cHRpb25IYW5kbGluZ0luZm8gPSBnZXRSZXRWYWwoZXhjZXB0aW9uTm9kZSwgcEV4Y2VwdGlvblR5
cGUpOw0KCQkJCWV4Y2VwdGlvbkhhbmRsaW5nRWxlbWVudCA9IGV4Y2VwdGlvbk5vZGU7DQoJCQkJ
YnJlYWs7DQoJCQl9CQ0KCQkJICANCgkJCS8vIGlmIGdlbmVyaWMgaGFuZGxpbmcgaXMgYWxsb3dl
ZCBhbmQgZGVmaW5lZCAodHlwZT0iYWxsIiksIHNldCAoY2FjaGUpDQoJCQkvLyBnZW5lcmljIGhh
bmRsaW5nDQoJCQllbHNlIGlmIChleGNlcHRpb25UeXBlRnJvbURlZmluaXRpb24uZXF1YWxzKEVI
RF9WQUxVRV9HRU5FUklDX0VSUk9SX1RZUEVfSUQpICYmIGlzRXJyb3JNZXNzYWdlQ29udGFpbnND
aGVja1RydWUgJiYgaXNFcnJvck1lc3NhZ2VSZWdleENoZWNrVHJ1ZSAmJiBpc0NhbGxlclR5cGVD
aGVja1RydWUpIHsNCgkJCQlleGNlcHRpb25IYW5kbGluZ0luZm8gPSBnZXRSZXRWYWwoZXhjZXB0
aW9uTm9kZSwgcEV4Y2VwdGlvblR5cGUpOw0KCQkJCWV4Y2VwdGlvbkhhbmRsaW5nRWxlbWVudCA9
IGV4Y2VwdGlvbk5vZGU7DQoJCQkJYnJlYWs7DQoJCQl9DQoJCX0NCg0KCQlpZiAoZXhjZXB0aW9u
SGFuZGxpbmdFbGVtZW50ID09IG51bGwpIHsNCgkJCXJldHVybiBudWxsOw0KCQl9IGVsc2Ugew0K
CQkJLy8gY2hlY2sgaGFuZGxpbmcgbm9kZXMgc2FuaXR5DQoJCQlmb3IgKE9iamVjdCBuIDogZXhj
ZXB0aW9uSGFuZGxpbmdFbGVtZW50LmdldENoaWxkcmVuKEVIRF9BVFRSSUJVVEVfSEFORExJTkcp
KSB7DQoJCQkJCWV4Y2VwdGlvbkhhbmRsaW5nSW5mby5hZGRTZXJ2aWNlTmFtZSgoKEVsZW1lbnQp
IG4pLmdldFRleHQoKSk7DQoJCQl9DQoNCgkJCWxvZ0RlYnVnKCJnZXRIYW5kbGluZ3NGb3JMb2Nh
dGlvbjogPC0tICIgKyBleGNlcHRpb25IYW5kbGluZ0luZm8pOw0KCQkJcmV0dXJuIGV4Y2VwdGlv
bkhhbmRsaW5nSW5mbzsNCgkJfQ0KCQkNCgl9DQoJDQoJcHJpdmF0ZSBzdGF0aWMgRXhjZXB0aW9u
SGFuZGxpbmdJbmZvIGdldFJldFZhbChFbGVtZW50IGV4Y2VwdGlvbk5vZGUsIFN0cmluZyBleGNl
cHRpb25UeXBlKSB7CQ0KCQlmaW5hbCBTdHJpbmcgZXJyb3JUb0JlVGhyb3duID0gZXhjZXB0aW9u
Tm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX0VSUk9SX1RPX0JFX1RIUk9XTl9J
RCk7DQoJCWZpbmFsIFN0cmluZyB0eXBlID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1
ZShFSERfQVRUUklCVVRFX0VSUk9SX1RZUEVfSUQpOw0KCQlmaW5hbCBTdHJpbmcgZXhjZXB0aW9u
SGFuZGxpbmdJZCA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVU
RV9FUlJPUl9IQU5ETElOR19JRF9JRCk7DQoJCWZpbmFsIFN0cmluZyBtYXhSZXRyeUF0dGVtcHRz
ID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX01BWF9SRVRS
WV9BVFRFTVBUUyk7DQoJCWZpbmFsIFN0cmluZyBwcmludEJ1c2luZXNzT2JqZWN0U3RyID0gZXhj
ZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfUFJJTlRfQlVTSU5FU1NfT0JKRUNUX0lE
KTsNCgkJZmluYWwgYm9vbGVhbiBwcmludEJ1c2luZXNzT2JqZWN0ID0gcHJpbnRCdXNpbmVzc09i
amVjdFN0ciA9PSBudWxsID8gZmFsc2UgOiBCb29sZWFuLnBhcnNlQm9vbGVhbihwcmludEJ1c2lu
ZXNzT2JqZWN0U3RyKTsNCgkJcmV0dXJuIG5ldyBFeGNlcHRpb25IYW5kbGluZ0luZm8oZXJyb3JU
b0JlVGhyb3duLCB0eXBlLCBleGNlcHRpb25IYW5kbGluZ0lkLCBleGNlcHRpb25UeXBlLCBtYXhS
ZXRyeUF0dGVtcHRzLCBwcmludEJ1c2luZXNzT2JqZWN0KTsNCgl9DQoJDQoNCglwcml2YXRlIHN0
YXRpYyBJRGF0YSBidWlsZENvbXBhY3RFcnJvckluZm8oU3RyaW5nIHBFcnJvckxvY2F0aW9uLCBT
dHJpbmcgZmxvd1N0ZXApIHsNCgkJSURhdGEgY29tcGFjdEVycm9ySW5mbyA9IElEYXRhRmFjdG9y
eS5jcmVhdGUoKTsNCgkJSURhdGFDdXJzb3IgY29tcGFjdEVycm9ySW5mb0N1cnNvciA9IGNvbXBh
Y3RFcnJvckluZm8uZ2V0Q3Vyc29yKCk7DQoNCgkJSURhdGFVdGlsLnB1dChjb21wYWN0RXJyb3JJ
bmZvQ3Vyc29yLCBDT01QQUNUX0VSUk9SX0xPQ0FUSU9OX0lELCBwRXJyb3JMb2NhdGlvbik7DQoJ
CUlEYXRhVXRpbC5wdXQoY29tcGFjdEVycm9ySW5mb0N1cnNvciwgQ09NUEFDVF9FUlJPUl9GTE9X
X1NURVAsIGZsb3dTdGVwKTsNCg0KCQljb21wYWN0RXJyb3JJbmZvQ3Vyc29yLmRlc3Ryb3koKTsN
Cg0KCQlyZXR1cm4gY29tcGFjdEVycm9ySW5mbzsNCgl9DQoJCQ0KCUBTdXBwcmVzc1dhcm5pbmdz
KCJyYXd0eXBlcyIpDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTlNTZXJ2aWNlIGdldEN1cnJlbnRU
b3BMZXZlbFNlcnZpY2UoKSB7DQoJCU5TU2VydmljZSB0b3BMZXZlbFNlcnZpY2VOYW1lID0gbnVs
bDsNCgkJSW52b2tlU3RhdGUgc3RhdGUgPSBJbnZva2VTdGF0ZS5nZXRDdXJyZW50U3RhdGUoKTsN
CgkJaWYgKHN0YXRlICE9IG51bGwpIHsNCgkJCVN0YWNrIGNhbGxTdGFjayA9IHN0YXRlLmdldENh
bGxTdGFjaygpOw0KCQkJaWYgKGNhbGxTdGFjayAhPSBudWxsICYmIGNhbGxTdGFjay5zaXplKCkg
PiAwKSB7DQoJCQkJdG9wTGV2ZWxTZXJ2aWNlTmFtZSA9IChOU1NlcnZpY2UpIGNhbGxTdGFjay5l
bGVtZW50QXQoMCk7DQoJCQl9DQoJCX0NCgkJcmV0dXJuIHRvcExldmVsU2VydmljZU5hbWU7DQoJ
fQ0KCQ0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBnZXRNZXNzYWdlVUlEKElEYXRhIG1l
dGFEYXRhKSB7DQoJCWlmKG1ldGFEYXRhICE9IG51bGwpIHsNCgkJCUlEYXRhTWFwIG1ldGFEYXRh
TWFwID0gbmV3IElEYXRhTWFwKG1ldGFEYXRhKTsNCgkJCXJldHVybiBtZXRhRGF0YU1hcC5nZXRB
c1N0cmluZyhVSURfSUQpOw0KCQl9DQoJCXJldHVybiBudWxsOw0KCX0NCg0KCXB1YmxpYyBzdGF0
aWMgdm9pZCBpbml0SGFuZGxpbmdzKFVSTCBwVXJsLCBTQVhCdWlsZGVyIHBCdWlsZGVyKSB7DQoJ
CWZpbmFsIFNBWEJ1aWxkZXIgYnVpbGRlcjsNCgkJaWYgKHBCdWlsZGVyID09IG51bGwpIHsNCgkJ
CWJ1aWxkZXIgPSBuZXcgU0FYQnVpbGRlcigpOw0KCQl9IGVsc2Ugew0KCQkJYnVpbGRlciA9IHBC
dWlsZGVyOw0KCQl9DQoJCWZpbmFsIERvY3VtZW50IGRvYyA9IGxvYWRIYW5kbGluZ3MocFVybCwg
YnVpbGRlcik7DQoJCXN5bmNocm9uaXplZChleGNlcHRpb25IYW5kbGluZ0xvY2spIHsNCgkJCV9l
eGNlcHRpb25IYW5kbGluZyA9IGRvYzsNCgkJfQ0KCX0NCgkNCglwcml2YXRlIHN0YXRpYyBEb2N1
bWVudCBsb2FkSGFuZGxpbmdzKFVSTCBwRmlsZSwgU0FYQnVpbGRlciBwQnVpbGRlcikgew0KCQkv
LyBMb2FkIGV4Y2VwdGlvbiBoYW5kbGluZyBkZWZpbml0aW9uIGZpbGUNCgkJDQoJCXRyeSB7DQoJ
CQlmaW5hbCBEb2N1bWVudCBlaGQgPSBwQnVpbGRlci5idWlsZChwRmlsZSk7DQoJCQ0KCQkJbG9n
SW5mbygiU3VjY2Vzc2Z1bGx5IGluaXRpYWxpemVkIGVycm9yIGhhbmRsaW5nIik7DQoJCQlyZXR1
cm4gZWhkOw0KCQl9IA0KCQljYXRjaCAoSkRPTUV4Y2VwdGlvbiBlKSB7DQoJCQlsb2dFcnJvcigi
SkRPTSBFcnJvciBkdXJpbmcgaW5pdGlhbGl6YXRpb24gb2YgZXJyb3IgaGFuZGxpbmc6ICIgKyBl
LmdldE1lc3NhZ2UoKSk7DQoJCQl0aHJvdyBuZXcgVW5kZWNsYXJlZFRocm93YWJsZUV4Y2VwdGlv
bihlKTsNCgkJfSANCgkJY2F0Y2ggKElPRXhjZXB0aW9uIGUpIHsNCgkJCWxvZ0Vycm9yKCJJTyBF
cnJvciBkdXJpbmcgaW5pdGlhbGl6YXRpb24gb2YgZXJyb3IgaGFuZGxpbmc6ICIgKyBlLmdldE1l
c3NhZ2UoKSk7DQoJCQl0aHJvdyBuZXcgVW5kZWNsYXJlZFRocm93YWJsZUV4Y2VwdGlvbihlKTsN
CgkJfQ0KCX0NCg0KDQoJcHJpdmF0ZSBzdGF0aWMgU3RyaW5nIGFzU3RyaW5nKFN0cmluZ1tdIHRl
bXBQYXJ0cykgew0KCQlTdHJpbmdCdWlsZGVyIGJ1aWxkZXIgPSBuZXcgU3RyaW5nQnVpbGRlcigp
Ow0KCQlmb3IgKFN0cmluZyBzdHJpbmcgOiB0ZW1wUGFydHMpIHsNCgkJCWJ1aWxkZXIuYXBwZW5k
KHN0cmluZykuYXBwZW5kKCIsIik7DQoJCX0NCgkJcmV0dXJuIGJ1aWxkZXIudG9TdHJpbmcoKTsN
Cgl9DQoNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgTE9HX1NWQ19QQVRIID0gInd4LnJl
c2lsaWVuY2UuaW1wbC5sb2dFcnJvciI7DQoNCglwdWJsaWMgc3RhdGljIHZvaWQgbG9nSW5mbyhT
dHJpbmcgbWVzc2FnZSkgew0KCQlsb2dJbXBsKG1lc3NhZ2UsICJJbmZvIik7DQoJfQ0KCQ0KCXB1
YmxpYyBzdGF0aWMgdm9pZCBsb2dXYXJuKFN0cmluZyBtZXNzYWdlKSB7DQoJCWxvZ0ltcGwobWVz
c2FnZSwgIldhcm4iKTsNCgl9DQoJDQoJcHVibGljIHN0YXRpYyB2b2lkIGxvZ0Vycm9yKFN0cmlu
ZyBtZXNzYWdlKSB7DQoJCWxvZ0ltcGwobWVzc2FnZSwgIkVycm9yIik7DQoJfQ0KDQoJcHVibGlj
IHN0YXRpYyB2b2lkIGxvZ1RyYWNlKFN0cmluZyBtZXNzYWdlKSB7DQoJCWxvZ0ltcGwobWVzc2Fn
ZSwgIlRyYWNlIik7DQoJfQ0KCQ0KCXB1YmxpYyBzdGF0aWMgdm9pZCBsb2dEZWJ1ZyhTdHJpbmcg
bWVzc2FnZSkgew0KCQlsb2dJbXBsKG1lc3NhZ2UsICJEZWJ1ZyIpOw0KCX0NCgkNCglwdWJsaWMg
c3RhdGljIHZvaWQgbG9nRmF0YWwoU3RyaW5nIG1lc3NhZ2UpIHsNCgkJbG9nSW1wbChtZXNzYWdl
LCAiRmF0YWwiKTsNCgl9DQoJDQoJcHJpdmF0ZSBzdGF0aWMgdm9pZCBsb2dJbXBsKFN0cmluZyBt
ZXNzYWdlLCBTdHJpbmcgbGV2ZWwpIHsNCgkJSURhdGEgaW5wdXQgPSBJRGF0YUZhY3RvcnkuY3Jl
YXRlKCk7DQoJCUlEYXRhTWFwIGlucHV0TWFwID0gbmV3IElEYXRhTWFwKGlucHV0KTsNCgkJaW5w
dXRNYXAucHV0KCJtZXNzYWdlIiwgbWVzc2FnZSk7DQoJCWlucHV0TWFwLnB1dCgiZnVuY3Rpb24i
LCBXWF9SRVNJTElFTkNFX0VSUk9SKTsNCgkJaW5wdXRNYXAucHV0KCJsZXZlbCIsIGxldmVsKTsN
CgkJDQoJCXRyeSB7DQoJCQlTZXJ2aWNlLmRvSW52b2tlKExPR19TVkNfUEFUSCwgImxvZyIsIGlu
cHV0KTsNCgkJfSANCgkJY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7DQoJCX0NCgl9DQoJDQoJLy8gKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKg0KCS8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLVhNTCBOT0RFIE5BTUUgREVGSU5JVElP
TlMtLS0tLS0tLS0tLS0tLS0tLS0tLS0NCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3RyaW5nIEVIRF9OT0RFX0RPQ19ST09UX0lEID0gImV4Y2VwdGlvbkhhbmRsaW5nIjsN
Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX05PREVfR0xPQkFMX0VSUk9SX1RZUEVf
SUQgPSAiZ2xvYmFsRXhjZXB0aW9uIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhE
X05PREVfRVJST1JfTE9DQVRJT05fSUQgPSAibG9jYXRpb24iOw0KCXByaXZhdGUgc3RhdGljIGZp
bmFsIFN0cmluZyBFSERfTk9ERV9FUlJPUl9UWVBFX0lEID0gImV4Y2VwdGlvbiI7DQoNCgkvLyAq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLVhNTCBOT0RFIEFUVFJJQlVURSBERUZJ
TklUSU9OUy0tLS0tLS0tLS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCglwcml2YXRlIHN0YXRp
YyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9FUlJPUl9UWVBFX0lEID0gInR5cGUiOw0KCXBy
aXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0VSUk9SX0NBTExFUl9UWVBF
X0lEID0gImNhbGxlclR5cGUiOwkJDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9B
VFRSSUJVVEVfRVJST1JfTUVTU0FHRV9DT05UQUlOUyA9ICJlcnJvck1lc3NhZ2VDb250YWlucyI7
CQkNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9FUlJPUl9NRVNT
QUdFX1JFR0VYX0lEID0gImVycm9yTWVzc2FnZVJlZ2V4IjsJCQ0KCXByaXZhdGUgc3RhdGljIGZp
bmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0xPQ0FUSU9OX05BTUVfSUQgPSAibmFtZSI7DQoJcHJp
dmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfRVJST1JfVE9fQkVfVEhST1dO
X0lEID0gImVycm9yVG9CZVRocm93biI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVI
RF9BVFRSSUJVVEVfRVJST1JfSEFORExJTkdfSURfSUQgPSAiZXhjZXB0aW9uSGFuZGxpbmdJZCI7
DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfSEFORExJTkc9ICJo
YW5kbGluZyI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfTUFY
X1JFVFJZX0FUVEVNUFRTID0gIm1heFJldHJ5QXR0ZW1wdHMiOw0KCXByaXZhdGUgc3RhdGljIGZp
bmFsIFN0cmluZyBFSERfQVRUUklCVVRFX1JFVFJZX0NPVU5UID0gInJldHJ5Q291bnQiOw0KCXBy
aXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0ZVTkNUSU9OID0gIkBXeFJl
c2lsaWVuY2UubG9nZ2luZy5mdW5jdGlvbkAiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmlu
ZyBFSERfUFJJTlRfQlVTSU5FU1NfT0JKRUNUX0lEID0gInByaW50QnVzaW5lc3NPYmplY3QiOw0K
DQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKg0KCS8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLVhNTCBOT0RFIFZBTFVF
IERFRklOSVRJT05TLS0tLS0tLS0tLS0tLS0tLS0tLS0NCgkvLyAqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9WQUxVRV9HRU5FUklDX0VSUk9SX1RZUEVfSUQgPSAi
YWxsIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX1ZBTFVFX0dMT0JBTF9FUlJP
Ul9IQU5ETElOR19JRCA9ICJnbG9iYWwiOw0KDQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCS8vIC0tLS0tLS0t
LS0tLS0tLS0tLUlOUFVUIEVSUk9SIEZJRUxEIElEIERFRklOSVRJT05TLS0tLS0tLS0tLS0tLS0t
LS0NCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lO
Rk9fSUQgPSAiZXhjZXB0aW9uSW5mbyI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVY
Q0xVREVfU0VSVklDRSA9ICJAV3hSZXNpbGllbmNlLmVycm9ySGFuZGxpbmcuZXhjbHVkZVNlcnZp
Y2VGcm9tRXJyb3JIYW5kbGluZ0AiOw0KCQ0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBF
UlJPUl9JTkZPX0VSUk9SID0gImVycm9yIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcg
RVJST1JfSU5GT19FUlJPUl9UWVBFID0gImVycm9yVHlwZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgU3RyaW5nIEVSUk9SX0lORk9fQ0FMTF9TVEFDS19TRVJWSUNFID0gInNlcnZpY2UiOw0KCXBy
aXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0NBTExfU1RBQ0tfRkxPV19TVEVQ
ID0gImZsb3dTdGVwIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfSU5GT19D
QUxMX1NUQUNLID0gImNhbGxTdGFjayI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVS
Uk9SX0lORk9fRVJST1JfRFVNUCA9ICJlcnJvckR1bXAiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFs
IFN0cmluZyBFUlJPUl9JTkZPX1RJTUUgPSAidGltZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwg
U3RyaW5nIEVSUk9SX0lORk9fTkVTVEVEX0VSUk9SX0lEID0gIm5lc3RlZEVycm9ySW5mbyI7DQoN
Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgR0VORVJJQ19WQUxVRV9NQVBfSUQgPSAiZ2Vu
ZXJpY1ZhbHVlTWFwIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgR0VORVJJQ19FUlJP
Ul9NRVNTQUdFX0lEID0gImdlbmVyaWNFcnJvck1lc3NhZ2UiOw0KDQoJLy8gKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0K
CS8vIC0tLS0tLS0tLS0tLS0tT1VUUFVUIEhBTkRMRUQgRVJST1IgRklFTEQgSUQgREVGSU5JVElP
TlMtLS0tLS0tLS0tLS0NCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3Ry
aW5nIEhBTkRMRURfRVJST1JfSU5GT19JRCA9ICJoYW5kbGVkRXJyb3JJbmZvIjsNCgkNCglwcml2
YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX1JPT1RfSUQgPSAidG9w
U2VydmljZUVycm9yIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJP
Ul9JTkZPX0hBTkRMRURfSUQgPSAiaGFuZGxlZFNlcnZpY2VFcnJvciI7DQoJcHJpdmF0ZSBzdGF0
aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19BUFBMSUNBVElPTl9TRVJWSUNFX0lE
ID0gImFwcGxpY2F0aW9uU2VydmljZUVycm9yIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJp
bmcgSEFORExFRF9FUlJPUl9JTkZPX09SSUdJTl9JRCA9ICJyb290U2VydmljZUVycm9yIjsNCg0K
CXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fSEFORExJTkdf
TE9DQVRJT05fSUQgPSAiaGFuZGxpbmdMb2NhdGlvbiI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwg
U3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19IQU5ETElOR19UWVBFX0lEID0gImhhbmRsaW5nVHlw
ZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19ERVBU
SF9JRCA9ICJlcnJvckRlcHRoIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExF
RF9FUlJPUl9JTkZPX0VSUk9SX0NPREUgPSAiZXJyb3JDb2RlIjsNCglwcml2YXRlIHN0YXRpYyBm
aW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0NBTExfU1RBQ0sgPSAiY2FsbFN0YWNrIjsN
Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0VSUk9SX0RV
TVAgPSAiZXJyb3JEdW1wIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9F
UlJPUl9JTkZPX1RJTUUgPSAidGltZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhB
TkRMRURfRVJST1JfSU5GT19QSVBFTElORSA9ICJwaXBlbGluZSI7DQoNCglwcml2YXRlIHN0YXRp
YyBmaW5hbCBTdHJpbmcgRVJST1JfTVNHX0lEID0gImVycm9yTWVzc2FnZSI7DQoJcHJpdmF0ZSBz
dGF0aWMgZmluYWwgU3RyaW5nIENPTVBBQ1RfRVJST1JfTE9DQVRJT05fSUQgPSAiZXJyb3JMb2Nh
dGlvbiI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIENPTVBBQ1RfRVJST1JfRkxPV19T
VEVQID0gImVycm9yRmxvd1N0ZXAiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJP
Ul9UWVBFX0lEID0gImVycm9yVHlwZSI7DQoNCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0t
LS0tLS0tLS0tLUdFTkVSSUMgRE9DIEZJRUxEIElEIERFRklOSVRJT05TLS0tLS0tLS0tLS0tLS0t
LQ0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgQlVTSU5FU1Nf
RE9DX0lEID0gImJ1c2luZXNzT2JqZWN0IjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcg
UFJJTlRfQlVTSU5FU1NfT0JKRUNUX0lEID0gInByaW50QnVzaW5lc3NPYmplY3QiOw0KDQoJLy8g
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKg0KCS8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tRVhDRVBUSU9OIEhBTkRMSU5HIERF
RklOSVRJT04tLS0tLS0tLS0tLS0tLS0tLS0NCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJcHJpdmF0ZSBzdGF0
aWMgZmluYWwgU3RyaW5nIE1FVEFEQVRBX0lEID0gInd4TWV0YURhdGEiOw0KCXByaXZhdGUgc3Rh
dGljIGZpbmFsIFN0cmluZyBMT0dHSU5HX0ZVTkNUSU9OID0gIkBXeFJlc2lsaWVuY2UubG9nZ2lu
Zy5mdW5jdGlvbkAiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBVSURfSUQgPSAidXVp
ZCI7DQoNCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1FWENFUFRJT04g
SEFORExJTkcgREVGSU5JVElPTi0tLS0tLS0tLS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCglw
cml2YXRlIHN0YXRpYyBEb2N1bWVudCBfZXhjZXB0aW9uSGFuZGxpbmc7DQoJcHJpdmF0ZSBzdGF0
aWMgZmluYWwgT2JqZWN0IGV4Y2VwdGlvbkhhbmRsaW5nTG9jayA9IG5ldyBPYmplY3QoKTsNCglw
cml2YXRlIHN0YXRpYyBFeGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyIF9leGNlcHRpb25IYW5kbGlu
Z0xpc3RlbmVyOw0KCXByaXZhdGUgc3RhdGljIENhbGxlclR5cGVTdXBwbGllciBERUZBVUxUX0NB
TExFUl9UWVBFX1NVUFBMSUVSID0gbmV3IENhbGxlclR5cGVTdXBwbGllcigpIHsNCgkJQE92ZXJy
aWRlDQoJCXB1YmxpYyBTdHJpbmcgZ2V0KCkgew0KCQkJcmV0dXJuIGdldENhbGxlclR5cGVCeUNh
bGxpbmdTZXJ2aWNlKCk7DQoJCX0NCgl9Ow0KCXByaXZhdGUgc3RhdGljIENhbGxlclR5cGVTdXBw
bGllciBjYWxsZXJUeXBlU3VwcGxpZXIgPSBudWxsOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIE9i
amVjdCBjYWxsZXJUeXBlU3VwcGxpZXJMb2NrID0gbmV3IE9iamVjdCgpOw0KCXByaXZhdGUgc3Rh
dGljIGZpbmFsIE9iamVjdCBleGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyTG9jayA9IG5ldyBPYmpl
Y3QoKTsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBPYmplY3QgY3JlYXRlU3VtbWFyaXplZEV4Y2Vw
dGlvbkhhbmRsaW5nTG9jayA9IG5ldyBPYmplY3QoKTsNCgkvLyAqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJLy8gLS0t
LS0tLS0tLS0tLS0tLS0tLS1JTlBVVCBHRVQgVkFMVUUgREVGSU5JVElPTi0tLS0tLS0tLS0tLS0t
LS0tLS0tLQ0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgTUFY
X1JFVFJZX0FUVEVNUFRTX0JFRk9SRV9DQU5DRUxfUkVUUlkgPSAibWF4UmV0cnlBdHRlbXB0c0Jl
Zm9yZUNhbmNlbFJldHJ5IjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgQlJFQUtfUkVU
UllfTE9PUCA9ICJicmVhay5yZXRyeS5sb29wLmZvci4iOw0KCS8vICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCgkvLyAt
LS0tLS0tLS0tLS0tLS0tLS0tLUVSUk9SIFZBTFVFIERFRklOSVRJT04tLS0tLS0tLS0tLS0tLS0t
LS0tLS0NCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9S
X1RSQU5TSUVOVCA9ICJUUkFOU0lFTlQiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBF
UlJPUl9GQVRBTCA9ICJGQVRBTCI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9S
X05PTkUgPSAiTk9ORSI7CQ0KCQ0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBTVU1NQVJJ
WkVEX0VYQ0VQVElPTl9IQU5ETElOR19GSUxFID0gIkV4Y2VwdGlvbkhhbmRsaW5nU3VtbWFyaXpl
ZC54bWwiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFWENFUFRJT05fSEFORExJTkdf
WFNEX0ZJTEUgPSAiRXhjZXB0aW9uSGFuZGxpbmcueHNkIjsNCglwcml2YXRlIHN0YXRpYyBmaW5h
bCBTdHJpbmcgV1hfUkVTSUxJRU5DRSA9ICJXeFJlc2lsaWVuY2UiOw0KCXByaXZhdGUgc3RhdGlj
IGZpbmFsIFN0cmluZyBXWF9SRVNJTElFTkNFX0VSUk9SID0gIld4UmVzaWxpZW5jZS5FcnJvciI7
DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0hBTkRMSU5HX1hNTF9GSUxFID0g
IkV4Y2VwdGlvbkhhbmRsaW5nLnhtbCI7DQoNCg0KCQ0KCQ0KCQ0KCQ0KCQ0KCQ0KCQ0KCQ0K</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>com.softwareag.util.IDataMap</value>
    <value>com.wm.app.audit.IAuditRuntime</value>
    <value>wx.resilience.impl.ErrorInfo</value>
    <value>wx.resilience.impl.SummarizedExceptionHandlingHandler</value>
    <value>wx.resilience.impl.SummarizedExceptionHandlingHandler.Creator</value>
    <value>wx.resilience.impl.Exceptions</value>
    <value>wx.resilience.impl.Paths</value>
    <value>com.wm.lang.ns.NSName</value>
    <value>java.io.File</value>
    <value>java.io.IOException</value>
    <value>java.util.*</value>
    <value>javax.xml.transform.Source</value>
    <value>javax.xml.transform.stream.StreamSource</value>
    <value>javax.xml.validation.Schema</value>
    <value>javax.xml.validation.SchemaFactory</value>
    <value>javax.xml.validation.Validator</value>
    <value>org.jdom.Document</value>
    <value>org.jdom.Element</value>
    <value>org.jdom.JDOMException</value>
    <value>org.jdom.input.SAXBuilder</value>
    <value>org.jdom.xpath.XPath</value>
    <value>org.xml.sax.SAXException</value>
    <value>com.wm.app.b2b.server.*</value>
    <value>java.lang.reflect.UndeclaredThrowableException</value>
    <value>java.net.URL</value>
    <value>java.nio.file.Path</value>
    <value>com.wm.lang.ns.NSService</value>
  </array>
</Values>
