<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">QEZ1bmN0aW9uYWxJbnRlcmZhY2UNCnB1YmxpYyBzdGF0aWMgaW50ZXJmYWNlIEVycm9ySGFuZGxp
bmdMaXN0ZW5lciB7DQoJcHVibGljIHZvaWQgYWNjZXB0KFN0cmluZyBwU2VydmljZU5hbWUsIElE
YXRhIHBQaXBlbGluZSk7DQp9DQoNCkBGdW5jdGlvbmFsSW50ZXJmYWNlDQpwdWJsaWMgc3RhdGlj
IGludGVyZmFjZSBDYWxsZXJUeXBlU3VwcGxpZXIgew0KCXB1YmxpYyBTdHJpbmcgZ2V0KCk7DQp9
DQoNCnByaXZhdGUgc3RhdGljIFBhdGggY3JlYXRlU3VtbWFyaXplZEVycm9ySGFuZGxpbmcoKSB0
aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7DQoJc3luY2hyb25pemVkKGNyZWF0ZVN1bW1hcml6ZWRF
cnJvckhhbmRsaW5nTG9jaykgew0KCQlyZXR1cm4gY3JlYXRlU3VtbWFyaXplZEVycm9ySGFuZGxp
bmcoU1VNTUFSSVpFRF9FUlJPUl9IQU5ETElOR19GSUxFKTsNCgl9DQp9DQpwcml2YXRlIHN0YXRp
YyBQYXRoIGNyZWF0ZVN1bW1hcml6ZWRFcnJvckhhbmRsaW5nKFN0cmluZyBwRmlsZU5hbWUpDQoJ
CXRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsNCglGaWxlIElTRGlyID0gU2VydmVyQVBJLmdldFNl
cnZlckNvbmZpZ0RpcigpLmdldFBhcmVudEZpbGUoKTsNCglGaWxlIElTUGFja2FnZXMgPSBuZXcg
amF2YS5pby5GaWxlKElTRGlyLCAicGFja2FnZXMiKTsNCglmaW5hbCBQYXRoIGNvbmZpZ0RpciA9
IFNlcnZlckFQSS5nZXRQYWNrYWdlQ29uZmlnRGlyKFdYX1JFU0lMSUVOQ0UpLnRvUGF0aCgpOw0K
CWZpbmFsIFBhdGggb3V0cHV0RmlsZSA9IGNvbmZpZ0Rpci5yZXNvbHZlKHBGaWxlTmFtZSk7DQoJ
UGF0aHMuYXNzZXJ0UGFyZW50RGlyRXhpc3RzKG91dHB1dEZpbGUpOw0KDQoJdHJ5IHsNCgkJdHJ5
IChDcmVhdG9yIGNyZWF0b3IgPSBTdW1tYXJpemVkRXJyb3JIYW5kbGluZ0hhbmRsZXIubmV3Q3Jl
YXRvcihvdXRwdXRGaWxlKSkgew0KCQkJZm9yIChGaWxlIHBhY2thZ2VEaXIgOiBJU1BhY2thZ2Vz
Lmxpc3RGaWxlcygpKSB7DQoJCQkJaWYgKHBhY2thZ2VEaXIuaXNEaXJlY3RvcnkoKSkgew0KCQkJ
CQlmaW5hbCBTdHJpbmcgcGFja2FnZU5hbWUgPSBwYWNrYWdlRGlyLmdldE5hbWUoKTsNCgkJCQkJ
aWYgKHBhY2thZ2VOYW1lLnN0YXJ0c1dpdGgoIldtIikpIHsNCgkJCQkJCWNvbnRpbnVlOw0KCQkJ
CQl9DQoJCQkJCWZpbmFsIEZpbGUgcGFja2FnZUNmZ0RpciA9IG5ldyBGaWxlKHBhY2thZ2VEaXIs
ICJjb25maWciKTsNCgkJCQkJaWYgKHBhY2thZ2VDZmdEaXIuaXNEaXJlY3RvcnkoKSkgew0KCQkJ
CQkJZmluYWwgRmlsZSBwYWNrYWdlRWhkRmlsZSA9IG5ldyBGaWxlKHBhY2thZ2VDZmdEaXIsIEVS
Uk9SX0hBTkRMSU5HX1hNTF9GSUxFKTsNCgkJCQkJCWlmIChwYWNrYWdlRWhkRmlsZS5pc0ZpbGUo
KSkgew0KCQkJCQkJCWNyZWF0b3IucGFyc2UocGFja2FnZUVoZEZpbGUsIHBhY2thZ2VOYW1lKTsN
CgkJCQkJCX0NCgkJCQkJfQ0KCQkJCX0NCgkJCX0NCgkJfQ0KCQl2YWxpZGF0ZVhNTCgpOw0KCX0g
Y2F0Y2ggKEV4Y2VwdGlvbiBlKSB7DQoJCUxvZy5sb2dFcnJvcigiRXJyb3IgZHVyaW5nIHBhcnNp
bmcgb2Ygc3VtbWFyaXplZEV4Y2VwdGlvbkhhbmRsaW5nRGVmaW5pdGlvbjogIiArIGUuZ2V0TWVz
c2FnZSgpKTsNCgkJdGhyb3cgRXhjZXB0aW9ucy5zaG93KGUsIFNlcnZpY2VFeGNlcHRpb24uY2xh
c3MpOw0KCX0NCglyZXR1cm4gb3V0cHV0RmlsZTsNCn0NCg0KcHJpdmF0ZSBzdGF0aWMgZmluYWwg
RXJyb3JIYW5kbGluZ0xpc3RlbmVyIERFRkFVTFRfRVJST1JfSEFORExFUiA9IG5ldyBFcnJvckhh
bmRsaW5nTGlzdGVuZXIoKSB7DQoJcHVibGljIHZvaWQgYWNjZXB0KFN0cmluZyBzLCBJRGF0YSBk
KSB7DQoJCUxvZy5sb2dEZWJ1ZygiRGVmYXVsdEVycm9ySGFuZGxlcjogLS0+ICIgKyBzKTsNCgkJ
dHJ5IHsNCgkJCVNlcnZpY2UuZG9JbnZva2UoTlNOYW1lLmNyZWF0ZShzKSwgZCk7DQoJCX0gY2F0
Y2ggKEV4Y2VwdGlvbiBlKSB7DQoJCQlMb2cubG9nRGVidWcoIkRlZmF1bHRFcnJvckhhbmRsZXI6
ICIgKyBlLmdldENsYXNzKCkuZ2V0TmFtZSgpICsgIiwgIiArIGUuZ2V0TWVzc2FnZSgpKTsNCgkJ
CXRocm93IG5ldyBVbmRlY2xhcmVkVGhyb3dhYmxlRXhjZXB0aW9uKGUpOw0KCQl9DQoJCUxvZy5s
b2dEZWJ1ZygiRGVmYXVsdEVycm9ySGFuZGxlcjogPC0tIik7DQoJfQ0KfTsNCnByaXZhdGUgc3Rh
dGljIEVycm9ySGFuZGxpbmdMaXN0ZW5lciBnZXRFcnJvckhhbmRsZXIoKSB7DQoJc3luY2hyb25p
emVkIChlcnJvckhhbmRsaW5nTGlzdGVuZXJMb2NrKSB7DQoJCWlmIChfZXJyb3JIYW5kbGluZ0xp
c3RlbmVyID09IG51bGwpIHsNCgkJCXJldHVybiBERUZBVUxUX0VSUk9SX0hBTkRMRVI7DQoJCX0g
ZWxzZSB7DQoJCQlyZXR1cm4gX2Vycm9ySGFuZGxpbmdMaXN0ZW5lcjsNCgkJfQ0KCX0NCn0NCnB1
YmxpYyBzdGF0aWMgdm9pZCBzZXRFcnJvckhhbmRsZXIoRXJyb3JIYW5kbGluZ0xpc3RlbmVyIHBF
cnJvckhhbmRsaW5nTGlzdGVuZXIpIHsNCglzeW5jaHJvbml6ZWQgKGVycm9ySGFuZGxpbmdMaXN0
ZW5lckxvY2spIHsNCgkJX2Vycm9ySGFuZGxpbmdMaXN0ZW5lciA9IHBFcnJvckhhbmRsaW5nTGlz
dGVuZXI7DQoJfQ0KfQ0KcHJpdmF0ZSBzdGF0aWMgdm9pZCBpbnZva2VFcnJvckhhbmRsZXIoSURh
dGEgcEhhbmRsaW5nU2VydmljZUlucHV0LA0KCQlmaW5hbCBTdHJpbmcgcFNlcnZpY2VOYW1lKSB0
aHJvd3MgRXhjZXB0aW9uIHsNCglMb2cubG9nRGVidWcoImludm9rZUVycm9ySGFuZGxlcjogLS0+
ICIpOw0KCWZpbmFsIEVycm9ySGFuZGxpbmdMaXN0ZW5lciBlaGwgPSBnZXRFcnJvckhhbmRsZXIo
KTsNCglMb2cubG9nRGVidWcoImludm9rZUVycm9ySGFuZGxlcjogZWg9IiArIGVobCk7DQoJZWhs
LmFjY2VwdChwU2VydmljZU5hbWUsIHBIYW5kbGluZ1NlcnZpY2VJbnB1dCk7DQoJTG9nLmxvZ0Rl
YnVnKCJpbnZva2VFcnJvckhhbmRsZXI6IDwtLSIpOw0KDQoJLy8gLS0tIDw8SVMtRU5EPj4gLS0t
DQp9DQoNCnByaXZhdGUgc3RhdGljIERvY3VtZW50IGdldGVycm9ySGFuZGxpbmdzKCkgdGhyb3dz
IFNlcnZpY2VFeGNlcHRpb24gew0KCXN5bmNocm9uaXplZChlcnJvckhhbmRsaW5nTG9jaykgew0K
CQlpZiAoX2Vycm9ySGFuZGxpbmcgIT0gbnVsbCkgew0KCQkJcmV0dXJuIF9lcnJvckhhbmRsaW5n
Ow0KCQl9DQoJfQ0KCWluaXRpYWxpemVFcnJvckhhbmRsaW5ncyhudWxsKTsNCglzeW5jaHJvbml6
ZWQgKGVycm9ySGFuZGxpbmdMb2NrKSB7DQoJCWlmIChfZXJyb3JIYW5kbGluZyA9PSBudWxsKSB7
DQoJCQl0aHJvdyBuZXcgSWxsZWdhbFN0YXRlRXhjZXB0aW9uKCJVbmFibGUgdG8gaW5pdGlhbGl6
ZSBlcnJvckhhbmRsaW5nLiBEaWQgeW91IGFzc2VtYmxlIGl0PyIpOw0KCQl9IGVsc2Ugew0KCQkJ
cmV0dXJuIF9lcnJvckhhbmRsaW5nOw0KCQl9DQoJfQ0KfQ0KDQpwcml2YXRlIHN0YXRpYyBTdHJp
bmcgZ2V0Q2FsbGVyVHlwZSgpIHsNCglDYWxsZXJUeXBlU3VwcGxpZXIgY3RzOyANCglzeW5jaHJv
bml6ZWQgKGNhbGxlclR5cGVTdXBwbGllckxvY2spIHsNCgkJY3RzID0gY2FsbGVyVHlwZVN1cHBs
aWVyOw0KCX0NCglpZiAoY3RzID09IG51bGwpIHsNCgkJY3RzID0gREVGQVVMVF9DQUxMRVJfVFlQ
RV9TVVBQTElFUjsNCgl9DQoJcmV0dXJuIGN0cy5nZXQoKTsNCn0NCg0KcHVibGljIHN0YXRpYyB2
b2lkIHNldENhbGxlclR5cGVTdXBwbGllcihDYWxsZXJUeXBlU3VwcGxpZXIgcFN1cHBsaWVyKSB7
DQoJc3luY2hyb25pemVkIChjYWxsZXJUeXBlU3VwcGxpZXJMb2NrKSB7DQoJCWNhbGxlclR5cGVT
dXBwbGllciA9IHBTdXBwbGllcjsNCgl9DQp9DQoNCnByaXZhdGUgc3RhdGljIFN0cmluZyBnZXRD
YWxsZXJUeXBlQnlDYWxsaW5nU2VydmljZSgpIHsNCglJRGF0YSBpbnB1dCA9IG51bGw7DQoJU3Ry
aW5nIHR5cGUgPSAiIjsNCgkvLyBvdXRwdXQNCglJRGF0YSBvdXRwdXQgPSBJRGF0YUZhY3Rvcnku
Y3JlYXRlKCk7DQoJdHJ5IHsNCgkJb3V0cHV0ID0gU2VydmljZS5kb0ludm9rZSggInd4LnJlc2ls
aWVuY2UuaW1wbC5jYWxsZXIiLCAiZ2V0Q2FsbGVyIiwgaW5wdXQgKTsNCgkJSURhdGFNYXAgb3V0
cHV0TWFwID0gbmV3IElEYXRhTWFwKG91dHB1dCk7DQoJCUlEYXRhTWFwIGNhbGxlck1hcCA9IG5l
dyBJRGF0YU1hcChvdXRwdXRNYXAuZ2V0QXNJRGF0YSgiY2FsbGVyIikpOw0KCQlyZXR1cm4gY2Fs
bGVyTWFwLmdldEFzU3RyaW5nKCJ0eXBlIik7DQoJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsNCgkJ
cmV0dXJuIHR5cGU7DQoJfQkNCn0NCg0KDQoJcHJpdmF0ZSBzdGF0aWMgU3RyaW5nIGdldENhbGxT
dGFja0FzSlNPTlN0cmluZyhBcnJheUxpc3Q8SURhdGFDdXJzb3I+IGVycm9ySW5mb0hpZXJhY2h5
KSB7DQoNCgkJSURhdGFbXSBjYWxsU3RhY2sgPSBJRGF0YVV0aWwuZ2V0SURhdGFBcnJheShlcnJv
ckluZm9IaWVyYWNoeS5nZXQoMCksIEVSUk9SX0lORk9fQ0FMTF9TVEFDSyk7DQoJCQ0KCQlTdHJp
bmcganNvblN0cmluZyA9ICIiOw0KCQkNCgkJaWYgKGNhbGxTdGFjayAhPSBudWxsKSB7DQoJCQkv
LyBpbnB1dA0KCQkJSURhdGEgaW5wdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJCQlJRGF0
YUN1cnNvciBpbnB1dEN1cnNvciA9IGlucHV0LmdldEN1cnNvcigpOw0KDQoJCQkvLyBkb2N1bWVu
dA0KCQkJSURhdGEgZG9jdW1lbnQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7DQoJCQlJRGF0YUN1
cnNvciBkb2N1bWVudEN1cnNvciA9IGRvY3VtZW50LmdldEN1cnNvcigpOw0KCQkJSURhdGFVdGls
LnB1dChkb2N1bWVudEN1cnNvciwgImNhbGxTdGFjayIsIGNhbGxTdGFjayk7DQoJCQlJRGF0YVV0
aWwucHV0KGlucHV0Q3Vyc29yLCAiZG9jdW1lbnQiLCBkb2N1bWVudCk7DQoJCQlJRGF0YVV0aWwu
cHV0KGlucHV0Q3Vyc29yLCAicHJldHR5UHJpbnQiLCAiZmFsc2UiKTsNCgkJCWlucHV0Q3Vyc29y
LmRlc3Ryb3koKTsNCg0KCQkJLy8gb3V0cHV0DQoJCQlJRGF0YSBvdXRwdXQgPSBJRGF0YUZhY3Rv
cnkuY3JlYXRlKCk7DQoJCQl0cnkgew0KCQkJCW91dHB1dCA9IFNlcnZpY2UuZG9JbnZva2UoInB1
Yi5qc29uIiwgImRvY3VtZW50VG9KU09OU3RyaW5nIiwgaW5wdXQpOw0KCQkJCUlEYXRhQ3Vyc29y
IG91dHB1dEN1cnNvciA9IG91dHB1dC5nZXRDdXJzb3IoKTsNCgkJCQlqc29uU3RyaW5nID0gSURh
dGFVdGlsLmdldFN0cmluZyhvdXRwdXRDdXJzb3IsICJqc29uU3RyaW5nIik7DQoJCQkJb3V0cHV0
Q3Vyc29yLmRlc3Ryb3koKTsNCgkJCX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7DQoJCQkJLy8gSXQg
aXMgcG9zc2libGUsIHRoYXQgdGhpcyBzZXJ2aWNlIGRvZXMgbm90IGV4aXN0cyAoV004LjIgZW52
aXJvbm1lbnRzL3N0b3JlcykuDQoJCQkJLy8gVHJ5IGFnYWluIHdpdGggU2VydmljZSBmcm9tIFdt
SlNPTiBwYWNrYWdlOg0KCQkJCS8vIFRoaXMgYmxvY2sgY2FuIGJlIGRlbGV0ZWQsIGlmIGV2ZXJ5
IGVudmlyb25tZW50IGlzIG9uIFdNOS4wIQ0KCQkJCXRyeSB7DQoJCQkJCW91dHB1dCA9IFNlcnZp
Y2UuZG9JbnZva2UoInB1Yi5qc29uIiwgImRvY3VtZW50VG9KU09OIiwgaW5wdXQpOw0KCQkJCQlJ
RGF0YUN1cnNvciBvdXRwdXRDdXJzb3IgPSBvdXRwdXQuZ2V0Q3Vyc29yKCk7DQoJCQkJCWpzb25T
dHJpbmcgPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKG91dHB1dEN1cnNvciwgImpzb24iKTsNCgkJCQkJ
b3V0cHV0Q3Vyc29yLmRlc3Ryb3koKTsNCgkJCQl9IGNhdGNoIChFeGNlcHRpb24gaW5uZXJFeCkg
ew0KCQkJCX0NCgkJCX0NCgkJfQ0KCQkNCgkJcmV0dXJuIGpzb25TdHJpbmc7DQoJfQ0KCQ0KCXBy
aXZhdGUgc3RhdGljIEhhc2hNYXA8U3RyaW5nLCBTdHJpbmc+IGNyZWF0ZUdlbmVyaWNWYWx1ZU1h
cChFeGNlcHRpb25IYW5kbGluZ0luZm8gaGFuZGxpbmcsIGJvb2xlYW4gYnJlYWtSZXRyeUxvb3Ap
IHsNCgkJSGFzaE1hcDxTdHJpbmcsIFN0cmluZz4gZ2VuZXJpY1ZhbHVlTWFwID0gbmV3IEhhc2hN
YXA8U3RyaW5nLCBTdHJpbmc+KCk7DQoNCgkJLy8gZXZhbHVhdGUgZXJyb3JUb0JlVGhyb3duOg0K
CQlTdHJpbmcgZXJyb3JUb0JlVGhyb3duID0gaGFuZGxpbmcuZ2V0RXJyb3JUb0JlVGhyb3duKCk7
DQoJCQ0KCQlpbnQgcmV0cnlDb3VudCA9IGdldFJldHJ5Q291bnQoKTsNCgkJZ2VuZXJpY1ZhbHVl
TWFwLnB1dChFSERfQVRUUklCVVRFX1JFVFJZX0NPVU5ULCBTdHJpbmcudmFsdWVPZihyZXRyeUNv
dW50KSk7DQoNCgkJU3RyaW5nIG1heFJldHJ5QXR0ZW1wdHNTdHJpbmcgPSBoYW5kbGluZy5nZXRN
YXhSZXRyeUF0dGVtcHRzKCk7DQoJCUludGVnZXIgbWF4UmV0cnlBdHRlbXB0cyA9IG51bGw7DQoJ
CXRyeSB7DQoJCQltYXhSZXRyeUF0dGVtcHRzID0gSW50ZWdlci52YWx1ZU9mKG1heFJldHJ5QXR0
ZW1wdHNTdHJpbmcpOw0KCQl9IGNhdGNoIChOdW1iZXJGb3JtYXRFeGNlcHRpb24gbmZlKSB7DQoJ
CX0JCQkJCQkNCgkJDQoJCWludCBtYXhSZXRyeUF0dGVtcHRzRGVmYXVsdCA9IDA7DQoJCVN0cmlu
ZyBtYXhSZXRyeUF0dGVtcHRzRGVmYXVsdFN0cmluZyA9IGdldFZhbHVlQ29uZigNCgkJCQlNQVhf
UkVUUllfQVRURU1QVFNfREVGQVVMVCwgUEFDS0FHRV9MQ0xfRVJST1IsICJ0cnVlIiwNCgkJCQki
IiwgIiIsICIiLCAiIik7CQkNCgkJdHJ5IHsNCgkJCW1heFJldHJ5QXR0ZW1wdHNEZWZhdWx0ID0g
SW50ZWdlci52YWx1ZU9mKG1heFJldHJ5QXR0ZW1wdHNEZWZhdWx0U3RyaW5nKTsNCgkJfSBjYXRj
aCAoTnVtYmVyRm9ybWF0RXhjZXB0aW9uIG5mZSkge30NCg0KCQlpbnQgbWF4UmV0cnlBdHRlbXB0
c0JlZm9yZUFib3J0ID0gMDsNCgkJU3RyaW5nIG1heFJldHJ5QXR0ZW1wdHNCZWZvcmVDYW5jZWxS
ZXRyeVN0cmluZyA9IGdldFZhbHVlQ29uZigNCgkJCQlNQVhfUkVUUllfQVRURU1QVFNfQkVGT1JF
X0NBTkNFTF9SRVRSWSwgUEFDS0FHRV9MQ0xfRVJST1IsICJ0cnVlIiwNCgkJCQkiIiwgIiIsICIi
LCAiIik7CQkNCgkJdHJ5IHsNCgkJCW1heFJldHJ5QXR0ZW1wdHNCZWZvcmVBYm9ydCA9IEludGVn
ZXIudmFsdWVPZihtYXhSZXRyeUF0dGVtcHRzQmVmb3JlQ2FuY2VsUmV0cnlTdHJpbmcpOw0KCQl9
IGNhdGNoIChOdW1iZXJGb3JtYXRFeGNlcHRpb24gbmZlKSB7fQ0KDQoJCS8vIERldGVybWluZSBl
cnJvclRvQmVUaHJvd24gYW5kIG1heFJldHJ5QXR0ZW1wdHMgYWNjb3JkaW5nIHRvIHJldHJ5IGNv
bmZpZ3VyYXRpb246DQoJCWlmIChicmVha1JldHJ5TG9vcCkgew0KCQkJZ2VuZXJpY1ZhbHVlTWFw
LnB1dChFSERfQVRUUklCVVRFX1JFVFVSTl9WQUxVRV9JRCwgQ09OVElOVUUuZXF1YWxzKGVycm9y
VG9CZVRocm93bik/Q09OVElOVUU6QUJPUlQpOw0KCQkJZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERf
QVRUUklCVVRFX01BWF9SRVRSWV9BVFRFTVBUUywgU3RyaW5nLnZhbHVlT2YocmV0cnlDb3VudCkp
Ow0KCQl9IGVsc2UgaWYgKG1heFJldHJ5QXR0ZW1wdHMgIT0gbnVsbCAmJiBtYXhSZXRyeUF0dGVt
cHRzID09IC0xICYmIHJldHJ5Q291bnQgPCBtYXhSZXRyeUF0dGVtcHRzQmVmb3JlQWJvcnQpIHsN
CgkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9SRVRVUk5fVkFMVUVfSUQsIFJF
VFJZKTsNCgkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9NQVhfUkVUUllfQVRU
RU1QVFMsIG1heFJldHJ5QXR0ZW1wdHNCZWZvcmVDYW5jZWxSZXRyeVN0cmluZyk7DQoJCX0gZWxz
ZSB7DQoJCQlpZiAobWF4UmV0cnlBdHRlbXB0cyAhPSBudWxsICYmIHJldHJ5Q291bnQgPCBtYXhS
ZXRyeUF0dGVtcHRzKSB7DQoJCQkJZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX1JF
VFVSTl9WQUxVRV9JRCwgUkVUUlkpOw0KCQkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJ
QlVURV9NQVhfUkVUUllfQVRURU1QVFMsIG1heFJldHJ5QXR0ZW1wdHNTdHJpbmcpOw0KCQkJfSBl
bHNlIHsNCgkJCQkgaWYgKFJFVFJZLmVxdWFscyhlcnJvclRvQmVUaHJvd24pICYmIG1heFJldHJ5
QXR0ZW1wdHMgPT0gbnVsbCAmJiByZXRyeUNvdW50IDwgbWF4UmV0cnlBdHRlbXB0c0RlZmF1bHQp
IHsNCgkJCQkJIGdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9SRVRVUk5fVkFMVUVf
SUQsIFJFVFJZKTsNCgkJCQkJIGdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9NQVhf
UkVUUllfQVRURU1QVFMsIG1heFJldHJ5QXR0ZW1wdHNEZWZhdWx0U3RyaW5nKTsNCgkJCQkgfSBl
bHNlIHsNCgkJCQkJIGlmIChDT05USU5VRS5lcXVhbHMoZXJyb3JUb0JlVGhyb3duKSkgew0KCQkJ
CQkJIGdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVURV9SRVRVUk5fVkFMVUVfSUQsIENP
TlRJTlVFKTsNCgkJCQkJIH0gZWxzZSB7DQoJCQkJCQkgLy8gRmluYWwgYmVoYXZpb3IgZm9yIGFi
b3J0IGFuZCByZXRyeTogYWJvcnQNCgkJCQkJCSBnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRS
SUJVVEVfUkVUVVJOX1ZBTFVFX0lELCBBQk9SVCk7DQoJCQkJCSB9DQoJCQkJCSAvLyBtYXhSZXRy
eUF0dGVtcHRzIGlzIHJlYWNoZWQgb3Igd2FzIG5vdCBkZWZpbmVkICgtPiAwKQ0KCQkJCQkgU3Ry
aW5nIG1heFJldHJ5QXR0ZW1wdHNSZXN1bHQgPSBtYXhSZXRyeUF0dGVtcHRzICE9IG51bGwgPyBt
YXhSZXRyeUF0dGVtcHRzU3RyaW5nIDogIjAiOw0KCQkJCQkgZ2VuZXJpY1ZhbHVlTWFwLnB1dChF
SERfQVRUUklCVVRFX01BWF9SRVRSWV9BVFRFTVBUUywgbWF4UmV0cnlBdHRlbXB0c1Jlc3VsdCk7
DQoJCQkJIH0NCgkJCX0NCgkJfQ0KCQlyZXR1cm4gZ2VuZXJpY1ZhbHVlTWFwOw0KCX0NCgkNCgkv
KioNCgkgKiBGaWx0ZXJzIHRoZSBlcnJvciBoaWVyYXJjaHkgZm9yIHRoZSBkZWVwZXN0IHNlcnZp
Y2UgLS0+IHNob3dzDQoJICogaW4gd2hpY2ggc2VydmljZSBvZiBvdXIgY29kZSB0aGUgZXJyb3Ig
b2NjdXJlZA0KCSAqIA0KCSAqIEBwYXJhbSBoaWVyYWNoaWNhbEVycm9ySW5mbw0KCSAqIEByZXR1
cm4gdGhlIGxldmVsIG9mIHRoZSBkZWVwZXN0IHNlcnZpY2UgbmFtZQ0KCSAqLw0KCXByaXZhdGUg
c3RhdGljIGludCBnZXREZWVwZXN0QXBwbGljYXRpb25TZXJ2aWNlTGV2ZWwoQXJyYXlMaXN0PEVy
cm9ySW5mbz4gaGllcmFjaGljYWxFcnJvckluZm8pIHsNCgkJU3RyaW5nIHNlcnZpY2UgPSBudWxs
Ow0KCQlmb3IgKGludCBsZXZlbCA9IGhpZXJhY2hpY2FsRXJyb3JJbmZvLnNpemUoKSAtIDE7IGxl
dmVsID4gMDsgbGV2ZWwtLSkgew0KCQkJc2VydmljZSA9IGhpZXJhY2hpY2FsRXJyb3JJbmZvLmdl
dChsZXZlbCkuZ2V0U2VydmljZSgpOw0KCQkJLy8gY3JlYXRlIG9mIExpc3Qgb2YgRmxvd25hbWVz
IHRvIGlnbm9yZQ0KCQkJTGlzdDxTdHJpbmc+IGlnbm9yZUZsb3dzID0gQXJyYXlzLmFzTGlzdCgi
d3gucmVzaWxpZW5jZS5wdWIucmVzaWxpZW5jZTp0aHJvd0Vycm9yIiwNCgkJCQkJIAkJCQkJCQkJ
Ind4LnJlc2lsaWVuY2UucHViLnJlc2lsaWVuY2U6dGhyb3dFcnJvcklmTmVjZXNzYXJ5IiwgDQoJ
CQkJCQkJCQkJCQkJICJ3eC5yZXNpbGllbmNlLnB1Yi5yZXNpbGllbmNlOnBvc3RQcm9jZXNzRm9y
VG9wTGV2ZWxTZXJ2aWNlIik7DQoJCQkNCgkJCQ0KCQkJDQoJCQkNCgkJCQ0KCQkJaWYgKHNlcnZp
Y2UgIT0gbnVsbCAmJiANCgkJCQkhc2VydmljZS5zdGFydHNXaXRoKCJwdWIuIikgJiYNCgkJCQkh
c2VydmljZS5zdGFydHNXaXRoKCJ3bS4iKSAmJiANCgkJCQkhaWdub3JlRmxvd3MuY29udGFpbnMo
c2VydmljZSkNCgkJCSkgew0KCQkJCXJldHVybiBsZXZlbDsNCgkJCX0NCgkJfQ0KDQoJCXJldHVy
biAwOw0KCX0NCg0KCQ0KCS8qKg0KCSAqIExvZ3MgbWVzc2FnZSBmcm9tIGEgY2F0YWxvZy4NCgkg
KiANCgkgKiBAcGFyYW0gYUZhY2lsaXR5S2V5DQoJICogICAgICAgICAgICBkZWZpbmVzIHRoZSBm
YWNpbGl0eSBpbiB0aGUgY2F0YWxvZw0KCSAqIEBwYXJhbSBhTWVzc2FnZUtleQ0KCSAqICAgICAg
ICAgICAgY29ycmVzcG9uZHMgd2l0aCB0aGUgbWVzc2FnZSBrZXkgaW4gdGhlIGNhdGFsb2cNCgkg
KiBAcGFyYW0gYU1lc3NhZ2VQYXJhbXMNCgkgKiAgICAgICAgICAgIGlmIG1lc3NhZ2UgaW4gdGhl
IGNhdGFsb2cgaGFzIHBhcmFtZXRlcnMNCgkgKiBAdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24NCgkg
KiAgICAgICAgICAgICB0aHJvd24gaWYgdGhlIGxvZ2dpbmcgZmFpbGVkDQoJICovDQoJLypwcml2
YXRlIHN0YXRpYyB2b2lkIGxvZ01lc3NhZ2VGcm9tQ2F0YWxvZyhTdHJpbmcgYUZhY2lsaXR5S2V5
LCBTdHJpbmcgYU1lc3NhZ2VLZXksIFN0cmluZ1tdIGFNZXNzYWdlUGFyYW1zKSB7DQoJCS8vIGlu
cHV0DQoJCUlEYXRhIHRJbnB1dCA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsNCgkJSURhdGFDdXJz
b3IgaW5wdXRDdXJzb3IgPSB0SW5wdXQuZ2V0Q3Vyc29yKCk7DQoJCUlEYXRhVXRpbC5wdXQoaW5w
dXRDdXJzb3IsICJmYWNpbGl0eUtleSIsIGFGYWNpbGl0eUtleSk7DQoJCUlEYXRhVXRpbC5wdXQo
aW5wdXRDdXJzb3IsICJtZXNzYWdlS2V5IiwgYU1lc3NhZ2VLZXkpOw0KCQ0KCQkvLyBUaGVyZSBh
cmUgc29tZSBtZXNzYWdlIHBhcmFtcyBwcm92aWRlZA0KCQlpZiAoYU1lc3NhZ2VQYXJhbXMubGVu
Z3RoID4gMCkgew0KCQkJSURhdGFVdGlsLnB1dChpbnB1dEN1cnNvciwgIm1lc3NhZ2VQYXJhbXMi
LCBhTWVzc2FnZVBhcmFtcyk7DQoJCX0NCgkJaW5wdXRDdXJzb3IuZGVzdHJveSgpOw0KCQ0KCQl0
cnkgew0KCQkJU2VydmljZS5kb0ludm9rZSgid3gucmVzaWxpZW5jZS5pbXBsOiIsICJsb2dNZXNz
YWdlRnJvbUNhdGFsb2ciLCB0SW5wdXQpOw0KCQl9IA0KCQljYXRjaCAoRXhjZXB0aW9uIGUpIHsN
CgkJfQ0KCX0qLw0KDQoJDQoJcHJpdmF0ZSBzdGF0aWMgdm9pZCB2YWxpZGF0ZVhNTCgpIHRocm93
cyBTZXJ2aWNlRXhjZXB0aW9uIHsNCgkJTG9nLmxvZ0luZm8oIlZhbGlkYXRpbmcgdGhlIHN1bW1h
cml6ZWQgZXJyb3IgaGFuZGxpbmciKTsNCgkJRmlsZSB4bWxGaWxlID0gbmV3IEZpbGUoU2VydmVy
QVBJLmdldFBhY2thZ2VDb25maWdEaXIoV1hfUkVTSUxJRU5DRSkgKyAiLyIgKyBTVU1NQVJJWkVE
X0VSUk9SX0hBTkRMSU5HX0ZJTEUpOw0KCQlGaWxlIHNjaGVtYUZpbGUgPSBuZXcgRmlsZShTZXJ2
ZXJBUEkuZ2V0UGFja2FnZUNvbmZpZ0RpcihXWF9SRVNJTElFTkNFKSArICIvIiArIEVYQ0VQVElP
Tl9IQU5ETElOR19YU0RfRklMRSk7DQoJCQ0KCQl0cnkgew0KCQkJLy8gMS4gTG9va3VwIGEgZmFj
dG9yeSBmb3IgdGhlIFczQyBYTUwgU2NoZW1hIGxhbmd1YWdlDQoJCQlTY2hlbWFGYWN0b3J5IGZh
Y3RvcnkgPSBTY2hlbWFGYWN0b3J5Lm5ld0luc3RhbmNlKCJodHRwOi8vd3d3LnczLm9yZy8yMDAx
L1hNTFNjaGVtYSIpOw0KCQkJLy8gMi4gQ29tcGlsZSB0aGUgc2NoZW1hLg0KCQkJLy8gSGVyZSB0
aGUgc2NoZW1hIGlzIGxvYWRlZCBmcm9tIGEgamF2YS5pby5GaWxlLCBidXQgeW91IGNvdWxkIHVz
ZQ0KCQkJLy8gYSBqYXZhLm5ldC5VUkwgb3IgYSBqYXZheC54bWwudHJhbnNmb3JtLlNvdXJjZSBp
bnN0ZWFkLg0KCQkJU2NoZW1hIHNjaGVtYSA9IGZhY3RvcnkubmV3U2NoZW1hKHNjaGVtYUZpbGUp
OwkNCgkJCS8vIDMuIEdldCBhIHZhbGlkYXRvciBmcm9tIHRoZSBzY2hlbWEuDQoJCQlWYWxpZGF0
b3IgdmFsaWRhdG9yID0gc2NoZW1hLm5ld1ZhbGlkYXRvcigpOwkNCgkJCS8vIDQuIFBhcnNlIHRo
ZSBkb2N1bWVudCB5b3Ugd2FudCB0byBjaGVjay4NCgkJCVNvdXJjZSBzb3VyY2UgPSBuZXcgU3Ry
ZWFtU291cmNlKHhtbEZpbGUpOwkNCgkJCS8vIDUuIENoZWNrIHRoZSBkb2N1bWVudA0KCQkJdmFs
aWRhdG9yLnZhbGlkYXRlKHNvdXJjZSk7DQoJCQlMb2cubG9nSW5mbyh4bWxGaWxlLmdldE5hbWUo
KSArICIgaXMgdmFsaWQiKTsNCgkJfSANCgkJY2F0Y2ggKFNBWEV4Y2VwdGlvbnxJT0V4Y2VwdGlv
biBleCkgew0KCQkJU3RyaW5nIG1lc3NhZ2UgPSB4bWxGaWxlLmdldE5hbWUoKSArICIgaXMgbm90
IHZhbGlkIGJlY2F1c2UgXG4iICsgZXguZ2V0TWVzc2FnZSgpOw0KCQkJZmluYWwgU2VydmljZUV4
Y2VwdGlvbiBzZSA9IG5ldyBTZXJ2aWNlRXhjZXB0aW9uKG1lc3NhZ2UpOw0KCQkJc2UuaW5pdENh
dXNlKGV4KTsNCgkJCXRocm93IHNlOw0KCQl9CQ0KCX0NCg0KCXByaXZhdGUgc3RhdGljIFN0cmlu
ZyBnZXRWYWx1ZUNvbmYoU3RyaW5nIGtleSwgU3RyaW5nIHd4Q29uZmlnUGtnTmFtZSwNCgkJCVN0
cmluZyBub1NlcnZpY2VFeGNlcHRpb24sIFN0cmluZyBzdWJzdGl0dXRlVmFyaWFibGVzLA0KCQkJ
U3RyaW5nIGlnbm9yZUdsb2JhbFZhbHVlcywgU3RyaW5nIHNjYW5BbGxDb25maWd1cmF0aW9ucywN
CgkJCVN0cmluZyBub1ZhcmlhYmxlSW50ZXJwb2xhdGlvbikgew0KCQlTdHJpbmcgcHJvcGVydHlW
YWx1ZSA9ICIgIjsNCgkJLy8gaW5wdXQNCgkJSURhdGEgY29uZmlnUGFyYW0gPSBJRGF0YUZhY3Rv
cnkuY3JlYXRlKCk7DQoJCUlEYXRhQ3Vyc29yIGNvbmZpZ1BhcmFtQ3Vyc29yID0gY29uZmlnUGFy
YW0uZ2V0Q3Vyc29yKCk7DQoJCUlEYXRhVXRpbC5wdXQoY29uZmlnUGFyYW1DdXJzb3IsICJrZXki
LCBrZXkpOw0KCQlJRGF0YVV0aWwucHV0KGNvbmZpZ1BhcmFtQ3Vyc29yLCAid3hDb25maWdQa2dO
YW1lIiwgd3hDb25maWdQa2dOYW1lKTsNCgkJSURhdGFVdGlsLnB1dChjb25maWdQYXJhbUN1cnNv
ciwgIm5vU2VydmljZUV4Y2VwdGlvbiIsDQoJCQkJbm9TZXJ2aWNlRXhjZXB0aW9uKTsNCgkJY29u
ZmlnUGFyYW1DdXJzb3IuZGVzdHJveSgpOw0KCQ0KCQkvLyBvdXRwdXQNCgkJSURhdGEgY29uZmln
T3V0cHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOw0KCQl0cnkgew0KCQkJY29uZmlnT3V0cHV0
ID0gU2VydmljZS5kb0ludm9rZSgid3guY29uZmlnLnB1YiIsICJnZXRWYWx1ZSIsDQoJCQkJCWNv
bmZpZ1BhcmFtKTsNCgkJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsNCgkJCXJldHVybiBwcm9wZXJ0
eVZhbHVlOw0KCQl9DQoJCUlEYXRhQ3Vyc29yIGNvbmZpZ091dHB1dEN1cnNvciA9IGNvbmZpZ091
dHB1dC5nZXRDdXJzb3IoKTsNCgkJcHJvcGVydHlWYWx1ZSA9IElEYXRhVXRpbA0KCQkJCS5nZXRT
dHJpbmcoY29uZmlnT3V0cHV0Q3Vyc29yLCAicHJvcGVydHlWYWx1ZSIpOw0KCQljb25maWdPdXRw
dXRDdXJzb3IuZGVzdHJveSgpOw0KCQlMb2cubG9nRGVidWcoImdldFZhbHVlQ29uZiBmb3IgIiAr
IGtleSArICIgcmV0dXJuczogIiArIHByb3BlcnR5VmFsdWUpOw0KCQlyZXR1cm4gcHJvcGVydHlW
YWx1ZTsNCgl9DQoJDQoJcHJpdmF0ZSBzdGF0aWMgaW50IGdldFJldHJ5Q291bnQoKSB7DQoJCUlE
YXRhIGlucHV0ID0gbnVsbDsNCgkJLy8gb3V0cHV0DQoJCUlEYXRhIG91dHB1dCA9IElEYXRhRmFj
dG9yeS5jcmVhdGUoKTsNCgkJdHJ5IHsNCgkJCW91dHB1dCA9IFNlcnZpY2UuZG9JbnZva2UoInB1
Yi5mbG93IiwgImdldFJldHJ5Q291bnQiLCBpbnB1dCk7DQoJCQlJRGF0YUN1cnNvciBvdXRwdXRD
dXJzb3IgPSBvdXRwdXQuZ2V0Q3Vyc29yKCk7DQoJCQlyZXR1cm4gSW50ZWdlci5wYXJzZUludChJ
RGF0YVV0aWwuZ2V0U3RyaW5nKG91dHB1dEN1cnNvciwgInJldHJ5Q291bnQiKSk7DQoJCX0gY2F0
Y2ggKEV4Y2VwdGlvbiBlKSB7DQoJCQlyZXR1cm4gMDsNCgkJfQ0KCX0NCgkNCgkvKioNCgkgKiBF
eHRyYWN0cyBhbiBlcnJvciBoaWVyYXJjaHkgZm9yIGEgZ2l2ZW4gZXJyb3IgaGllcmFyY2h5IChu
b3JtYWxseSBvbmx5DQoJICogZmlsbGVkIGJ5IG9uZSAocm9vdCkgZXJyb3IpLiBVc2VzIHRoZSBj
YWxsU3RhY2sgYW5kIHRoZSBkZWVwZXN0IGVycm9ySW5mbyB0byBidWlsZCBoaWVhcmNoeS4NCgkg
KiANCgkgKiBAcGFyYW0gcEVycm9ySGllcmFyY2h5DQoJICogICAgICAgICAgICAtIGFycmF5IGxp
c3Qgb2YgSURhdGFDdXJzb3JzIG9uIHB1Yi5ldmVudDpleGNlcHRpb25JbmZvDQoJICogQHJldHVy
biBmdWxsIGFycmF5IGxpc3QgYXJyYXkgbGlzdCBvZiBFcnJvckluZm8gb24NCgkgKiAgICAgICAg
IHB1Yi5ldmVudDpleGNlcHRpb25JbmZvLCBjb250YWluaW5nIGFsbCBlcnJvcnMgZnJvbSByb290
KDApIHRvDQoJICogICAgICAgICBvcmlnaW4gKHNpemUgb2YgYXJyYXkgbGlzdCkNCgkgKi8NCglw
cml2YXRlIHN0YXRpYyBBcnJheUxpc3Q8RXJyb3JJbmZvPiBleHRyYWN0RXJyb3JIaWVyYXJjaHko
QXJyYXlMaXN0PElEYXRhQ3Vyc29yPiBwRXJyb3JIaWVyYXJjaHkpIHsJDQoJCWlmIChwRXJyb3JI
aWVyYXJjaHkgPT0gbnVsbCkgew0KCQkJcmV0dXJuIG51bGw7DQoJCX0NCgkJDQoJCUlEYXRhQ3Vy
c29yIGRlZXBlc3ROZXN0ZWRFcnJvciA9IGdldERlZXBlc3ROZXN0ZWRFcnJvcihwRXJyb3JIaWVy
YXJjaHkpOw0KCQkNCgkJLy8gZ2V0IGNhbGxTdGFjayBvZiBlcnJvcjoNCgkJSURhdGFbXSBjYWxs
U3RhY2sgPSBJRGF0YVV0aWwuZ2V0SURhdGFBcnJheShwRXJyb3JIaWVyYXJjaHkuZ2V0KDApLCAi
Y2FsbFN0YWNrIik7DQoJCUFycmF5TGlzdDxFcnJvckluZm8+IGVycm9ySW5mb0xpc3QgPSBudWxs
Ow0KCQkNCgkJaWYgKGNhbGxTdGFjayAhPSBudWxsKSB7DQoJCQllcnJvckluZm9MaXN0ID0gbmV3
IEFycmF5TGlzdDxFcnJvckluZm8+KGNhbGxTdGFjay5sZW5ndGgpOw0KCQkJDQoJCQkvLyB1c2Ug
dGhlIGVycm9yIGFuZCBlcnJvclR5cGUgb2YgdGhlIGRlZXBlc3QgZXJyb3JJbmZvIHRvIGRldGVy
bWluZSB0aGUgZXJyb3IgYW5kIGVycm9yVHlwZSBvZiBlYWNoIGxldmVsOg0KCQkJU3RyaW5nIG5l
c3RlZEVycm9yVHlwZSA9IElEYXRhVXRpbC5nZXRTdHJpbmcoZGVlcGVzdE5lc3RlZEVycm9yLCBF
UlJPUl9JTkZPX0VSUk9SX1RZUEUpOw0KCQkJU3RyaW5nIG5lc3RlZEVycm9yID0gSURhdGFVdGls
LmdldFN0cmluZyhkZWVwZXN0TmVzdGVkRXJyb3IsIEVSUk9SX0lORk9fRVJST1IpOw0KDQoJCQkv
LyB0aGUgY2FsbHN0YWNrIGlzIG9yZGVyZWQgaW52ZXJzZSENCgkJCWZvciAoaW50IGkgPSBjYWxs
U3RhY2subGVuZ3RoIC0gMSA7IGkgPj0gMDsgaS0tKSB7DQoJCQkJLy8gdXNlIHRoZSBzZXJ2aWNl
IG5hbWVzIG9mIHRoZSBjYWxsc3RhY2s6DQoJCQkJSURhdGFDdXJzb3IgY2FsbFN0YWNrQ3Vyc29y
ID0gY2FsbFN0YWNrW2ldLmdldEN1cnNvcigpOw0KCQkJCVN0cmluZyBzZXJ2aWNlID0gSURhdGFV
dGlsLmdldFN0cmluZyhjYWxsU3RhY2tDdXJzb3IsIEVSUk9SX0lORk9fQ0FMTF9TVEFDS19TRVJW
SUNFKTsNCgkJCQlTdHJpbmcgZmxvd1N0ZXAgPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKGNhbGxTdGFj
a0N1cnNvciwgRVJST1JfSU5GT19DQUxMX1NUQUNLX0ZMT1dfU1RFUCk7DQoJCQkJaWYgKGZsb3dT
dGVwID09IG51bGwgfHwgZmxvd1N0ZXAuZXF1YWxzKCIiKSkgew0KCQkJCQlmbG93U3RlcCA9ICJu
LmEuIjsNCgkJCQl9DQoJCQkJDQoJCQkJZXJyb3JJbmZvTGlzdC5hZGQobmV3IEVycm9ySW5mbyhu
ZXN0ZWRFcnJvciwgbmVzdGVkRXJyb3JUeXBlLCBzZXJ2aWNlLCBmbG93U3RlcCkpOw0KCQkJfQ0K
CQl9DQoJCXJldHVybiBlcnJvckluZm9MaXN0Ow0KCX0NCgkNCgkvKioNCgkgKiBHZXRzIHRoZSBk
ZWVwZXN0IGVycm9yIGluIHRoZSBlcnJvciBoaWVyYXJjaHkNCgkgKiANCgkgKiBAcGFyYW0gcEVy
cm9ySGllcmFyY2h5DQoJICogICAgICAgICAgICAtIGFycmF5IGxpc3Qgb2YgSURhdGFDdXJzb3Jz
IG9uIHB1Yi5ldmVudDpleGNlcHRpb25JbmZvDQoJICogQHJldHVybiBjdXJzb3Igb2YgdGhlIGRl
ZXBlc3QgZXJyb3INCgkgKi8NCglwcml2YXRlIHN0YXRpYyBJRGF0YUN1cnNvciBnZXREZWVwZXN0
TmVzdGVkRXJyb3IoQXJyYXlMaXN0PElEYXRhQ3Vyc29yPiBwRXJyb3JIaWVyYXJjaHkpIHsJCQ0K
CQkNCgkJSURhdGFDdXJzb3IgbmVzdGVkRXJyb3IgPSBwRXJyb3JIaWVyYXJjaHkuZ2V0KDApOw0K
CQlJRGF0YUN1cnNvciBjdXJyZW50RXJyb3IgPSBudWxsOw0KCQlJRGF0YSBuZXN0ZWRFcnJvcklE
YXRhID0gbnVsbDsNCgkJZG8gew0KCQkJY3VycmVudEVycm9yID0gbmVzdGVkRXJyb3I7DQoJCQlu
ZXN0ZWRFcnJvcklEYXRhID0gSURhdGFVdGlsLmdldElEYXRhKGN1cnJlbnRFcnJvciwgRVJST1Jf
SU5GT19ORVNURURfRVJST1JfSUQpOw0KCQkJaWYgKG5lc3RlZEVycm9ySURhdGEgIT0gbnVsbCkg
ew0KCQkJCW5lc3RlZEVycm9yID0gbmVzdGVkRXJyb3JJRGF0YS5nZXRDdXJzb3IoKTsNCgkJCX0g
ZWxzZSB7DQoJCQkJbmVzdGVkRXJyb3IgPSBudWxsOw0KCQkJfQ0KCQl9IHdoaWxlIChuZXN0ZWRF
cnJvciAhPSBudWxsKTsNCg0KCQlyZXR1cm4gY3VycmVudEVycm9yOw0KDQoJfQkNCg0KCS8qcHVi
bGljIHN0YXRpYyBjbGFzcyBMb2cgew0KCQlwcml2YXRlIHN0YXRpYyBmaW5hbCBMb2cgSU5TVEFO
Q0UgPSBuZXcgTG9nKCk7DQoJCXByaXZhdGUgc3RhdGljIGZpbmFsIGJvb2xlYW4gbG9nZ2luZyA9
IGZhbHNlOw0KDQoJCXB1YmxpYyBzdGF0aWMgdm9pZCBpbml0KCkgew0KCQkJaWYgKGxvZ2dpbmcp
IHsNCgkJCQlJTlNUQU5DRS5pbml0V3JpdGVyKCk7DQoJCQl9DQoJCX0NCgkJcHVibGljIHN0YXRp
YyB2b2lkIHdyaXRlKFN0cmluZyBwTWVzc2FnZSkgew0KCQkJaWYgKGxvZ2dpbmcpIHsNCgkJCQlJ
TlNUQU5DRS5sb2cocE1lc3NhZ2UpOw0KCQkJfQ0KCQl9DQoJCXB1YmxpYyBzdGF0aWMgdm9pZCBj
bG9zZSgpIHsNCgkJCWlmIChsb2dnaW5nKSB7DQoJCQkJSU5TVEFOQ0UuY2xvc2VXcml0ZXIoKTsN
CgkJCX0NCgkJfQ0KCQlwdWJsaWMgc3RhdGljIGJvb2xlYW4gaXNMb2dnaW5nKCkgew0KCQkJcmV0
dXJuIGxvZ2dpbmc7DQoJCX0NCg0KCQlwcml2YXRlIGJvb2xlYW4gaW5pdGlhbGl6ZWQ7DQoJCXBy
aXZhdGUgdm9pZCBpbml0V3JpdGVyKCkgew0KCQkJaW5pdGlhbGl6ZWQgPSB0cnVlOw0KCQl9DQoJ
CXByaXZhdGUgdm9pZCBjbG9zZVdyaXRlcigpIHsNCgkJCWluaXRpYWxpemVkID0gZmFsc2U7DQoJ
CX0NCgkJcHJpdmF0ZSB2b2lkIGxvZyhTdHJpbmcgcE1lc3NhZ2UpIHsNCgkJCWlmIChpbml0aWFs
aXplZCkgew0KCQkJCS8vIFRPRE86DQoJCQkJLy9Mb2cubG9nVHJhY2VNZXNzYWdlKCJFSEYiLCBw
TWVzc2FnZSk7DQoJCQl9DQoJCX0NCgl9Ki8NCglwdWJsaWMgc3RhdGljIGNsYXNzIEVycm9ySGFu
ZGxpbmdFeGNlcHRpb24gZXh0ZW5kcyBSdW50aW1lRXhjZXB0aW9uIHsNCgkJcHJpdmF0ZSBzdGF0
aWMgZmluYWwgbG9uZyBzZXJpYWxWZXJzaW9uVUlEID0gLTM5NTAxMDA3NDE2MzY0Nzk2ODFMOw0K
DQoJCXB1YmxpYyBFcnJvckhhbmRsaW5nRXhjZXB0aW9uKFN0cmluZyBwTXNnLCBUaHJvd2FibGUg
cENhdXNlKSB7DQoJCQlzdXBlcihwTXNnLCBwQ2F1c2UpOw0KCQl9DQoNCgkJcHVibGljIEVycm9y
SGFuZGxpbmdFeGNlcHRpb24oU3RyaW5nIHBNc2cpIHsNCgkJCXN1cGVyKHBNc2cpOw0KCQl9DQoN
CgkJcHVibGljIEVycm9ySGFuZGxpbmdFeGNlcHRpb24oVGhyb3dhYmxlIHBDYXVzZSkgew0KCQkJ
c3VwZXIocENhdXNlKTsNCgkJfQ0KCX0NCg0KCXB1YmxpYyBzdGF0aWMgY2xhc3MgRXhjZXB0aW9u
SGFuZGxpbmdJbmZvIHsNCgkJLy8gT2xkIHJlcHJlc2VudGF0aW9uIG9mIEV4Y2VwdGlvbkhhbmRs
aW5nSW5mbyAoZGVwcmVjYXRlZCkNCgkJcHJpdmF0ZSBmaW5hbCBMaXN0PFN0cmluZz4gc2Vydmlj
ZU5hbWVzID0gbmV3IEFycmF5TGlzdDw+KCk7DQoJCXByaXZhdGUgZmluYWwgU3RyaW5nICBlcnJv
clRvQmVUaHJvd24sIHR5cGUsIGVycm9yQ29kZSwgZXhjZXB0aW9uVHlwZSwgbWF4UmV0cnlBdHRl
bXB0czsNCgkJcHJpdmF0ZSBmaW5hbCBib29sZWFuIHByaW50QnVzaW5lc3NPYmplY3Q7DQoJCXB1
YmxpYyBFeGNlcHRpb25IYW5kbGluZ0luZm8oU3RyaW5nIHBFcnJvclRvQmVUaHJvd24sIFN0cmlu
ZyBwVHlwZSwgU3RyaW5nIHBFcnJvckNvZGUsDQoJCQkJIAkJCQkJIFN0cmluZyBwRXhjZXB0aW9u
VHlwZSwgU3RyaW5nIHBNYXhSZXRyeUF0dGVtcHRzLA0KCQkJCSAJCQkJCSBib29sZWFuIHBQcmlu
dEJ1c2luZXNzT2JqZWN0KSB7DQoJCQllcnJvclRvQmVUaHJvd24gPSBwRXJyb3JUb0JlVGhyb3du
Ow0KCQkJdHlwZSA9IHBUeXBlOw0KCQkJZXJyb3JDb2RlID0gcEVycm9yQ29kZTsNCgkJCWV4Y2Vw
dGlvblR5cGUgPSBwRXhjZXB0aW9uVHlwZTsNCgkJCW1heFJldHJ5QXR0ZW1wdHMgPSBwTWF4UmV0
cnlBdHRlbXB0czsNCgkJCXByaW50QnVzaW5lc3NPYmplY3QgPSBwUHJpbnRCdXNpbmVzc09iamVj
dDsNCgkJfQ0KDQoJCXB1YmxpYyBMaXN0PFN0cmluZz4gZ2V0SGFuZGxpbmdTZXJ2aWNlcygpIHsN
CgkJCXJldHVybiBzZXJ2aWNlTmFtZXM7DQoJCX0NCg0KCQlwdWJsaWMgdm9pZCBhZGRTZXJ2aWNl
TmFtZShTdHJpbmcgcFNlcnZpY2VOYW1lKSB7DQoJCQlzZXJ2aWNlTmFtZXMuYWRkKHBTZXJ2aWNl
TmFtZSk7DQoJCX0NCg0KCQlwdWJsaWMgU3RyaW5nIGdldEVycm9yVG9CZVRocm93bigpIHsNCgkJ
CXJldHVybiBlcnJvclRvQmVUaHJvd247DQoJCX0NCg0KCQlwdWJsaWMgU3RyaW5nIGdldFR5cGUo
KSB7DQoJCQlyZXR1cm4gdHlwZTsNCgkJfQ0KDQoJCXB1YmxpYyBTdHJpbmcgZ2V0RXJyb3JDb2Rl
KCkgew0KCQkJcmV0dXJuIGVycm9yQ29kZTsNCgkJfQ0KDQoJCXB1YmxpYyBTdHJpbmcgZ2V0RXhj
ZXB0aW9uVHlwZSgpIHsNCgkJCXJldHVybiBleGNlcHRpb25UeXBlOw0KCQl9DQoNCgkJcHVibGlj
IFN0cmluZyBnZXRNYXhSZXRyeUF0dGVtcHRzKCkgew0KCQkJcmV0dXJuIG1heFJldHJ5QXR0ZW1w
dHM7DQoJCX0NCg0KCQlwdWJsaWMgYm9vbGVhbiBpc1ByaW50QnVzaW5lc3NPYmplY3QoKSB7DQoJ
CQlyZXR1cm4gcHJpbnRCdXNpbmVzc09iamVjdDsNCgkJfQ0KDQoJCUBPdmVycmlkZQ0KCQlwdWJs
aWMgU3RyaW5nIHRvU3RyaW5nKCkgew0KCQkJZmluYWwgU3RyaW5nQnVpbGRlciBzYiA9IG5ldyBT
dHJpbmdCdWlsZGVyKCk7DQoJCQlzYi5hcHBlbmQoc3VwZXIudG9TdHJpbmcoKSk7DQoJCQlzYi5h
cHBlbmQoIjogZXJyb3JUb0JlVGhyb3duPSAiKTsNCgkJCXNiLmFwcGVuZChlcnJvclRvQmVUaHJv
d24pOw0KCQkJc2IuYXBwZW5kKCIsIHR5cGU9Iik7DQoJCQlzYi5hcHBlbmQodHlwZSk7DQoJCQlz
Yi5hcHBlbmQoImVycm9yQ29kZT0iKTsNCgkJCXNiLmFwcGVuZChlcnJvckNvZGUpOw0KCQkJc2Iu
YXBwZW5kKCIsIHByb2plY3Q9Iik7DQoJCQlzYi5hcHBlbmQoIiwgZXhjZXB0aW9uVHlwZT0iKTsN
CgkJCXNiLmFwcGVuZChleGNlcHRpb25UeXBlKTsNCgkJCXNiLmFwcGVuZCgiLCBtYXhSZXRyeUF0
dGVtcHRzPSIpOw0KCQkJc2IuYXBwZW5kKG1heFJldHJ5QXR0ZW1wdHMpOw0KCQkJc2IuYXBwZW5k
KCIsIHByaW50QnVzaW5lc3NPYmplY3Q9Iik7DQoJCQlzYi5hcHBlbmQocHJpbnRCdXNpbmVzc09i
amVjdCk7DQoJCQlzYi5hcHBlbmQoIiwgc2VydmljZU5hbWVzPSIpOw0KCQkJLy8gVE9ETzoNCgkJ
CS8vc2IuYXBwZW5kKFN0cmluZ3MuYXNTdHJpbmcoc2VydmljZU5hbWVzKSk7DQoJCQlyZXR1cm4g
c2IudG9TdHJpbmcoKTsNCgkJfQ0KCQkNCgl9DQoJDQoJLyoqDQoJICogRXh0cmFjdCBoYW5kbGlu
Z3MgZm9yIGFuIGVycm9yIGF0IGEgbG9jYXRpb24gZnJvbSBhIGdpdmVuIGV4Y2VwdGlvbg0KCSAq
IGhhbmRsaW5nIGRlZmluaXRpb24NCgkgKiANCgkgKiBAcGFyYW0gcEVycm9ySGFuZGxpbmcNCgkg
KiAgICAgICAgICAgIGRlZmluaXRpb24gYXMgRE9NIGRvY3VtZW50IHRvIHVzZSBmb3IgZXh0cmFj
dGlvbg0KCSAqIEBwYXJhbSBwTG9jYXRpb25YUGF0aA0KCSAqICAgICAgICAgICAgZXJyb3IgbG9j
YXRpb24gYXMgWFBBVEgNCgkgKiBAcGFyYW0gcEV4Y2VwdGlvblR5cGUNCgkgKiAgICAgICAgICAg
IGVycm9yIHR5cGUgYXMgU3RyaW5nDQoJICogQHBhcmFtIGN1cnJlbnRDYWxsZXJUeXBlDQoJICog
ICAgICAgICAgICBjYWxsZXIgdHlwZSBhcyBTdHJpbmcJDQoJICogQHBhcmFtIGN1cnJlbnRFcnJv
ck1lc3NhZ2UNCgkgKiAgICAgICAgICAgIG9yaWdpbmFsIGVycm9yIGFzIFN0cmluZyANCgkgKiBA
cmV0dXJuIGFsbCBmb3VuZCBoYW5kbGluZ3MgZm9yIHRoZSBnaXZlbiBlcnJvciBhcyBhbiBhcnJh
eSBsaXN0LCBlbXB0eQ0KCSAqICAgICAgICAgbGlzdCBpbiBjYXNlIG9mIG5vIGZvdW5kIGVycm9y
DQoJICogQHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uDQoJICovDQoJQFN1cHByZXNzV2FybmluZ3Mo
InVuY2hlY2tlZCIpDQoJcHJpdmF0ZSBzdGF0aWMgRXhjZXB0aW9uSGFuZGxpbmdJbmZvIGdldEhh
bmRsaW5nc0ZvckxvY2F0aW9uKA0KCQkJRG9jdW1lbnQgcEVycm9ySGFuZGxpbmcsIFN0cmluZyBw
TG9jYXRpb25YUGF0aCwNCgkJCVN0cmluZyBwRXhjZXB0aW9uVHlwZSwgU3RyaW5nIGN1cnJlbnRD
YWxsZXJUeXBlLCBTdHJpbmcgY3VycmVudEVycm9yTWVzc2FnZSkNCgkJCXRocm93cyBTZXJ2aWNl
RXhjZXB0aW9uIHsNCgkJTG9nLmxvZ0RlYnVnKCJnZXRIYW5kbGluZ3NGb3JMb2NhdGlvbjogLS0+
ICIgKyBwTG9jYXRpb25YUGF0aCArICIsICIgKyBwRXhjZXB0aW9uVHlwZSArICIsICIgKyBjdXJy
ZW50Q2FsbGVyVHlwZSArICIsICIgKyBjdXJyZW50RXJyb3JNZXNzYWdlKTsNCg0KCQkvLyBnZXQg
ZXhjZXB0aW9uIGxpc3QgZm9yIGxvY2F0aW9uDQoJCUxpc3Q8RWxlbWVudD4gZXhjZXB0aW9uTm9k
ZXMgPSBudWxsOw0KCQl0cnkgew0KCQkJZXhjZXB0aW9uTm9kZXMgPSAoTGlzdDxFbGVtZW50Pikg
WFBhdGguc2VsZWN0Tm9kZXMocEVycm9ySGFuZGxpbmcsIHBMb2NhdGlvblhQYXRoKTsNCgkJfSAN
CgkJY2F0Y2ggKEpET01FeGNlcHRpb24gZSkgew0KCQkJTG9nLmxvZ0Vycm9yKCJKRE9NIEVycm9y
IGR1cmluZyBleHRyYWN0aW9uIG9mIGVycm9yIHR5cGVzIGZyb20gZXhjZXB0aW9uIGhhbmRsaW5n
IGRlZmluaXRpb246ICIgKyBlLmdldE1lc3NhZ2UoKSk7DQoJCQlMb2cubG9nRGVidWcoImdldEhh
bmRsaW5nc0ZvckxvY2F0aW9uOiA8LS0gbnVsbCAoSkRPTUV4Y2VwdGlvbjogIiArIGUuZ2V0TWVz
c2FnZSgpICsgIikiKTsNCgkJCXJldHVybiBudWxsOw0KCQl9DQogICAgICAgIC8vIGNoZWNrIGV4
Y2VwdGlvbiBub2RlcyBzYW5pdHkNCgkJaWYgKGV4Y2VwdGlvbk5vZGVzID09IG51bGwgfHwgZXhj
ZXB0aW9uTm9kZXMuaXNFbXB0eSgpKSB7DQoJCQlMb2cubG9nRGVidWcoImdldEhhbmRsaW5nc0Zv
ckxvY2F0aW9uOiA8LS0gbnVsbCAoTm8gZXhjZXB0aW9uTm9kZXMpIik7DQoJCQlyZXR1cm4gbnVs
bDsNCgkJfQkJCQ0KCQkNCgkJLy8gZXh0cmFjdCBleGNlcHRpb25zIGZyb20gbGlzdCwgaWYgbG9j
YXRpb24gZXhpc3RzIGFuZCBleGNlcHRpb24NCgkJLy8gZGVmaW5pdGlvbnMgYXJlIGNvbnRhaW5l
ZA0KCQkvLyBpdGVyYXRpb24gb3ZlciBhbGwgZGVmaW5lZCBleGNlcHRpb25zIGluIGxvY2F0aW9u
DQoJCUV4Y2VwdGlvbkhhbmRsaW5nSW5mbyBleGNlcHRpb25IYW5kbGluZ0luZm8gPSBudWxsOw0K
CQlFbGVtZW50IGV4Y2VwdGlvbkhhbmRsaW5nRWxlbWVudCA9IG51bGw7DQoJCWZvciAoRWxlbWVu
dCBleGNlcHRpb25Ob2RlIDogZXhjZXB0aW9uTm9kZXMpIHsNCgkJCWJvb2xlYW4gaXNFcnJvck1l
c3NhZ2VDb250YWluc0NoZWNrVHJ1ZSA9IGZhbHNlOw0KCQkJZmluYWwgU3RyaW5nIGVycm9yTWVz
c2FnZUNvbnRhaW5zRnJvbURlZmluaXRpb24gPSBleGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZh
bHVlKEVIRF9BVFRSSUJVVEVfRVJST1JfTUVTU0FHRV9DT05UQUlOUyk7DQoJCQlpZiAoZXJyb3JN
ZXNzYWdlQ29udGFpbnNGcm9tRGVmaW5pdGlvbiA9PSBudWxsIHx8DQoJCQkJKGN1cnJlbnRFcnJv
ck1lc3NhZ2UgIT0gbnVsbCAmJg0KCQkJCWVycm9yTWVzc2FnZUNvbnRhaW5zRnJvbURlZmluaXRp
b24gIT0gbnVsbCAmJg0KCQkJCWN1cnJlbnRFcnJvck1lc3NhZ2UuY29udGFpbnMoZXJyb3JNZXNz
YWdlQ29udGFpbnNGcm9tRGVmaW5pdGlvbikpKSANCgkJCXsNCgkJCQlpc0Vycm9yTWVzc2FnZUNv
bnRhaW5zQ2hlY2tUcnVlID0gdHJ1ZTsNCgkJCX0NCg0KCQkJLy8gQ2hlY2sgZm9yIG9wdGlvbmFs
IGF0dHJpYnV0IGVycm9yTWVzc2FnZVJlZ2V4Og0KCQkJYm9vbGVhbiBpc0Vycm9yTWVzc2FnZVJl
Z2V4Q2hlY2tUcnVlID0gZmFsc2U7DQoJCQlmaW5hbCBTdHJpbmcgZXJyb3JNZXNzYWdlUmVnZXhG
cm9tRGVmaW5pdGlvbiA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJ
QlVURV9FUlJPUl9NRVNTQUdFX1JFR0VYX0lEKTsNCgkJCWlmIChlcnJvck1lc3NhZ2VSZWdleEZy
b21EZWZpbml0aW9uID09IG51bGwgfHwNCgkJCQkoY3VycmVudEVycm9yTWVzc2FnZSAhPSBudWxs
ICYmDQoJCQkJZXJyb3JNZXNzYWdlUmVnZXhGcm9tRGVmaW5pdGlvbiAhPSBudWxsICYmDQoJCQkJ
Y3VycmVudEVycm9yTWVzc2FnZS5tYXRjaGVzKGVycm9yTWVzc2FnZVJlZ2V4RnJvbURlZmluaXRp
b24pKSkgDQoJCQl7DQoJCQkJaXNFcnJvck1lc3NhZ2VSZWdleENoZWNrVHJ1ZSA9IHRydWU7DQoJ
CQl9DQoJCQkNCgkJCS8vIENoZWNrIGZvciBvcHRpb25hbCBhdHRyaWJ1dCBjYWxsZXJUeXBlOg0K
CQkJYm9vbGVhbiBpc0NhbGxlclR5cGVDaGVja1RydWUgPSBmYWxzZTsNCgkJCWZpbmFsIFN0cmlu
ZyBjYWxsZXJUeXBlRnJvbURlZmluaXRpb24gPSBleGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZh
bHVlKEVIRF9BVFRSSUJVVEVfRVJST1JfQ0FMTEVSX1RZUEVfSUQpOw0KCQkJaWYgKGNhbGxlclR5
cGVGcm9tRGVmaW5pdGlvbiA9PSBudWxsIHx8DQoJCQkJKGN1cnJlbnRDYWxsZXJUeXBlICE9IG51
bGwgJiYNCgkJCQljYWxsZXJUeXBlRnJvbURlZmluaXRpb24gIT0gbnVsbCAmJg0KCQkJCWN1cnJl
bnRDYWxsZXJUeXBlLmVxdWFscyhjYWxsZXJUeXBlRnJvbURlZmluaXRpb24pKSkgDQoJCQl7DQoJ
CQkJaXNDYWxsZXJUeXBlQ2hlY2tUcnVlID0gdHJ1ZTsNCgkJCX0NCgkJCQ0KCQkJLy8gaWYgZGVm
aW5lZCBleGNlcHRpb24gdHlwZSBlcXVhbHMgZXhjZXB0aW9uLCBzZXQgaGFuZGxpbmcgYW5kDQoJ
CQkvLyBleGl0IGxvb3ANCgkJCWZpbmFsIFN0cmluZyBleGNlcHRpb25UeXBlRnJvbURlZmluaXRp
b24gPSBleGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9BVFRSSUJVVEVfRVJST1Jf
VFlQRV9JRCk7DQoJCQlpZiAoZXhjZXB0aW9uVHlwZUZyb21EZWZpbml0aW9uLmVxdWFscyhwRXhj
ZXB0aW9uVHlwZSkgJiYgaXNFcnJvck1lc3NhZ2VDb250YWluc0NoZWNrVHJ1ZSAmJiBpc0Vycm9y
TWVzc2FnZVJlZ2V4Q2hlY2tUcnVlICYmIGlzQ2FsbGVyVHlwZUNoZWNrVHJ1ZSkgew0KCQkJCWV4
Y2VwdGlvbkhhbmRsaW5nSW5mbyA9IGdldFJldFZhbChleGNlcHRpb25Ob2RlLCBwRXhjZXB0aW9u
VHlwZSk7DQoJCQkJZXhjZXB0aW9uSGFuZGxpbmdFbGVtZW50ID0gZXhjZXB0aW9uTm9kZTsNCgkJ
CQlicmVhazsNCgkJCX0JDQoJCQkgIA0KCQkJLy8gaWYgZ2VuZXJpYyBoYW5kbGluZyBpcyBhbGxv
d2VkIGFuZCBkZWZpbmVkICh0eXBlPSJhbGwiKSwgc2V0IChjYWNoZSkNCgkJCS8vIGdlbmVyaWMg
aGFuZGxpbmcNCgkJCWVsc2UgaWYgKGV4Y2VwdGlvblR5cGVGcm9tRGVmaW5pdGlvbi5lcXVhbHMo
RUhEX1ZBTFVFX0dFTkVSSUNfRVJST1JfVFlQRV9JRCkgJiYgaXNFcnJvck1lc3NhZ2VDb250YWlu
c0NoZWNrVHJ1ZSAmJiBpc0Vycm9yTWVzc2FnZVJlZ2V4Q2hlY2tUcnVlICYmIGlzQ2FsbGVyVHlw
ZUNoZWNrVHJ1ZSkgew0KCQkJCWV4Y2VwdGlvbkhhbmRsaW5nSW5mbyA9IGdldFJldFZhbChleGNl
cHRpb25Ob2RlLCBwRXhjZXB0aW9uVHlwZSk7DQoJCQkJZXhjZXB0aW9uSGFuZGxpbmdFbGVtZW50
ID0gZXhjZXB0aW9uTm9kZTsNCgkJCQlicmVhazsNCgkJCX0NCgkJfQ0KDQoJCWlmIChleGNlcHRp
b25IYW5kbGluZ0VsZW1lbnQgPT0gbnVsbCkgew0KCQkJcmV0dXJuIG51bGw7DQoJCX0gZWxzZSB7
DQoJCQkvLyBjaGVjayBoYW5kbGluZyBub2RlcyBzYW5pdHkNCgkJCWZvciAoT2JqZWN0IG4gOiBl
eGNlcHRpb25IYW5kbGluZ0VsZW1lbnQuZ2V0Q2hpbGRyZW4oRUhEX0FUVFJJQlVURV9IQU5ETElO
RykpIHsNCgkJCQkJZXhjZXB0aW9uSGFuZGxpbmdJbmZvLmFkZFNlcnZpY2VOYW1lKCgoRWxlbWVu
dCkgbikuZ2V0VGV4dCgpKTsNCgkJCX0NCg0KCQkJTG9nLmxvZ0RlYnVnKCJnZXRIYW5kbGluZ3NG
b3JMb2NhdGlvbjogPC0tICIgKyBleGNlcHRpb25IYW5kbGluZ0luZm8pOw0KCQkJcmV0dXJuIGV4
Y2VwdGlvbkhhbmRsaW5nSW5mbzsNCgkJfQ0KCQkNCgl9DQoJDQoJcHJpdmF0ZSBzdGF0aWMgRXhj
ZXB0aW9uSGFuZGxpbmdJbmZvIGdldFJldFZhbChFbGVtZW50IGV4Y2VwdGlvbk5vZGUsIFN0cmlu
ZyBleGNlcHRpb25UeXBlKSB7CQ0KCQlmaW5hbCBTdHJpbmcgZXJyb3JUb0JlVGhyb3duID0gZXhj
ZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX1JFVFVSTl9WQUxVRV9J
RCk7DQoJCWZpbmFsIFN0cmluZyB0eXBlID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1
ZShFSERfQVRUUklCVVRFX0VSUk9SX1RZUEVfSUQpOw0KCQlmaW5hbCBTdHJpbmcgZXJyb3JIYW5k
bGluZ0lkID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX0VS
Uk9SX0hBTkRMSU5HX0lEX0lEKTsNCgkJZmluYWwgU3RyaW5nIG1heFJldHJ5QXR0ZW1wdHMgPSBl
eGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9BVFRSSUJVVEVfTUFYX1JFVFJZX0FU
VEVNUFRTKTsNCgkJZmluYWwgU3RyaW5nIHByaW50QnVzaW5lc3NPYmplY3RTdHIgPSBleGNlcHRp
b25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9QUklOVF9CVVNJTkVTU19PQkpFQ1RfSUQpOw0K
CQlmaW5hbCBib29sZWFuIHByaW50QnVzaW5lc3NPYmplY3QgPSBwcmludEJ1c2luZXNzT2JqZWN0
U3RyID09IG51bGwgPyBmYWxzZSA6IEJvb2xlYW4ucGFyc2VCb29sZWFuKHByaW50QnVzaW5lc3NP
YmplY3RTdHIpOw0KCQlyZXR1cm4gbmV3IEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyhlcnJvclRvQmVU
aHJvd24sIHR5cGUsIGVycm9ySGFuZGxpbmdJZCwgZXhjZXB0aW9uVHlwZSwgbWF4UmV0cnlBdHRl
bXB0cywgcHJpbnRCdXNpbmVzc09iamVjdCk7DQoJfQ0KCQ0KDQoJcHJpdmF0ZSBzdGF0aWMgSURh
dGEgYnVpbGRDb21wYWN0RXJyb3JJbmZvKFN0cmluZyBwRXJyb3JMb2NhdGlvbiwgU3RyaW5nIGZs
b3dTdGVwKSB7DQoJCUlEYXRhIGNvbXBhY3RFcnJvckluZm8gPSBJRGF0YUZhY3RvcnkuY3JlYXRl
KCk7DQoJCUlEYXRhQ3Vyc29yIGNvbXBhY3RFcnJvckluZm9DdXJzb3IgPSBjb21wYWN0RXJyb3JJ
bmZvLmdldEN1cnNvcigpOw0KDQoJCUlEYXRhVXRpbC5wdXQoY29tcGFjdEVycm9ySW5mb0N1cnNv
ciwgQ09NUEFDVF9FUlJPUl9MT0NBVElPTl9JRCwgcEVycm9yTG9jYXRpb24pOw0KCQlJRGF0YVV0
aWwucHV0KGNvbXBhY3RFcnJvckluZm9DdXJzb3IsIENPTVBBQ1RfRVJST1JfRkxPV19TVEVQLCBm
bG93U3RlcCk7DQoNCgkJY29tcGFjdEVycm9ySW5mb0N1cnNvci5kZXN0cm95KCk7DQoNCgkJcmV0
dXJuIGNvbXBhY3RFcnJvckluZm87DQoJfQ0KCQkNCglAU3VwcHJlc3NXYXJuaW5ncygicmF3dHlw
ZXMiKQ0KCXByaXZhdGUgc3RhdGljIGZpbmFsIE5TU2VydmljZSBnZXRDdXJyZW50VG9wTGV2ZWxT
ZXJ2aWNlKCkgew0KCQlOU1NlcnZpY2UgdG9wTGV2ZWxTZXJ2aWNlTmFtZSA9IG51bGw7DQoJCUlu
dm9rZVN0YXRlIHN0YXRlID0gSW52b2tlU3RhdGUuZ2V0Q3VycmVudFN0YXRlKCk7DQoJCWlmIChz
dGF0ZSAhPSBudWxsKSB7DQoJCQlTdGFjayBjYWxsU3RhY2sgPSBzdGF0ZS5nZXRDYWxsU3RhY2so
KTsNCgkJCWlmIChjYWxsU3RhY2sgIT0gbnVsbCAmJiBjYWxsU3RhY2suc2l6ZSgpID4gMCkgew0K
CQkJCXRvcExldmVsU2VydmljZU5hbWUgPSAoTlNTZXJ2aWNlKSBjYWxsU3RhY2suZWxlbWVudEF0
KDApOw0KCQkJfQ0KCQl9DQoJCXJldHVybiB0b3BMZXZlbFNlcnZpY2VOYW1lOw0KCX0NCgkNCglw
cml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgZ2V0TWVzc2FnZVVJRChJRGF0YSBtZXRhRGF0YSkg
ew0KCQlpZihtZXRhRGF0YSAhPSBudWxsKSB7DQoJCQlJRGF0YU1hcCBtZXRhRGF0YU1hcCA9IG5l
dyBJRGF0YU1hcChtZXRhRGF0YSk7DQoJCQlyZXR1cm4gbWV0YURhdGFNYXAuZ2V0QXNTdHJpbmco
VUlEX0lEKTsNCgkJfQ0KCQlyZXR1cm4gbnVsbDsNCgl9DQoNCglwdWJsaWMgc3RhdGljIHZvaWQg
aW5pdEhhbmRsaW5ncyhVUkwgcFVybCwgU0FYQnVpbGRlciBwQnVpbGRlcikgew0KCQlmaW5hbCBT
QVhCdWlsZGVyIGJ1aWxkZXI7DQoJCWlmIChwQnVpbGRlciA9PSBudWxsKSB7DQoJCQlidWlsZGVy
ID0gbmV3IFNBWEJ1aWxkZXIoKTsNCgkJfSBlbHNlIHsNCgkJCWJ1aWxkZXIgPSBwQnVpbGRlcjsN
CgkJfQ0KCQlmaW5hbCBEb2N1bWVudCBkb2MgPSBsb2FkSGFuZGxpbmdzKHBVcmwsIGJ1aWxkZXIp
Ow0KCQlzeW5jaHJvbml6ZWQoZXJyb3JIYW5kbGluZ0xvY2spIHsNCgkJCV9lcnJvckhhbmRsaW5n
ID0gZG9jOw0KCQl9DQoJfQ0KCQ0KCXByaXZhdGUgc3RhdGljIERvY3VtZW50IGxvYWRIYW5kbGlu
Z3MoVVJMIHBGaWxlLCBTQVhCdWlsZGVyIHBCdWlsZGVyKSB7DQoJCS8vIExvYWQgZXhjZXB0aW9u
IGhhbmRsaW5nIGRlZmluaXRpb24gZmlsZQ0KCQkNCgkJdHJ5IHsNCgkJCWZpbmFsIERvY3VtZW50
IGVoZCA9IHBCdWlsZGVyLmJ1aWxkKHBGaWxlKTsNCgkJDQoJCQlMb2cubG9nSW5mbygiU3VjY2Vz
c2Z1bGx5IGluaXRpYWxpemVkIGVycm9yIGhhbmRsaW5nIik7DQoJCQlyZXR1cm4gZWhkOw0KCQl9
IA0KCQljYXRjaCAoSkRPTUV4Y2VwdGlvbiBlKSB7DQoJCQlMb2cubG9nRXJyb3IoIkpET00gRXJy
b3IgZHVyaW5nIGluaXRpYWxpemF0aW9uIG9mIGVycm9yIGhhbmRsaW5nOiAiICsgZS5nZXRNZXNz
YWdlKCkpOw0KCQkJdGhyb3cgbmV3IFVuZGVjbGFyZWRUaHJvd2FibGVFeGNlcHRpb24oZSk7DQoJ
CX0gDQoJCWNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7DQoJCQlMb2cubG9nRXJyb3IoIklPIEVycm9y
IGR1cmluZyBpbml0aWFsaXphdGlvbiBvZiBlcnJvciBoYW5kbGluZzogIiArIGUuZ2V0TWVzc2Fn
ZSgpKTsNCgkJCXRocm93IG5ldyBVbmRlY2xhcmVkVGhyb3dhYmxlRXhjZXB0aW9uKGUpOw0KCQl9
DQoJfQ0KDQoNCglwcml2YXRlIHN0YXRpYyBTdHJpbmcgYXNTdHJpbmcoU3RyaW5nW10gdGVtcFBh
cnRzKSB7DQoJCVN0cmluZ0J1aWxkZXIgYnVpbGRlciA9IG5ldyBTdHJpbmdCdWlsZGVyKCk7DQoJ
CWZvciAoU3RyaW5nIHN0cmluZyA6IHRlbXBQYXJ0cykgew0KCQkJYnVpbGRlci5hcHBlbmQoc3Ry
aW5nKS5hcHBlbmQoIiwiKTsNCgkJfQ0KCQlyZXR1cm4gYnVpbGRlci50b1N0cmluZygpOw0KCX0N
Cg0KCQ0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioNCgkvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS1YTUwgTk9ERSBO
QU1FIERFRklOSVRJT05TLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQoJLy8gKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCXBy
aXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfTk9ERV9ET0NfUk9PVF9JRCA9ICJlcnJvckhh
bmRsaW5nIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX05PREVfR0xPQkFMX0VS
Uk9SX1RZUEVfSUQgPSAiZ2xvYmFsRXhjZXB0aW9uIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBT
dHJpbmcgRUhEX05PREVfRVJST1JfTE9DQVRJT05fSUQgPSAibG9jYXRpb24iOw0KCXByaXZhdGUg
c3RhdGljIGZpbmFsIFN0cmluZyBFSERfTk9ERV9FUlJPUl9UWVBFX0lEID0gImV4Y2VwdGlvbiI7
DQoNCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLVhNTCBOT0RFIEFUVFJJ
QlVURSBERUZJTklUSU9OUy0tLS0tLS0tLS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCglwcml2
YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9FUlJPUl9UWVBFX0lEID0gInR5
cGUiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0VSUk9SX0NB
TExFUl9UWVBFX0lEID0gImNhbGxlclR5cGUiOwkJDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3Ry
aW5nIEVIRF9BVFRSSUJVVEVfRVJST1JfTUVTU0FHRV9DT05UQUlOUyA9ICJlcnJvck1lc3NhZ2VD
b250YWlucyI7CQkNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9F
UlJPUl9NRVNTQUdFX1JFR0VYX0lEID0gImVycm9yTWVzc2FnZVJlZ2V4IjsJCQ0KCXByaXZhdGUg
c3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0xPQ0FUSU9OX05BTUVfSUQgPSAibmFt
ZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfUkVUVVJOX1ZB
TFVFX0lEID0gImVycm9yVG9CZVRocm93biI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5n
IEVIRF9BVFRSSUJVVEVfRVJST1JfSEFORExJTkdfSURfSUQgPSAiZXJyb3JIYW5kbGluZ0lkIjsN
Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9IQU5ETElORz0gImhh
bmRsaW5nIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9NQVhf
UkVUUllfQVRURU1QVFMgPSAibWF4UmV0cnlBdHRlbXB0cyI7DQoJcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfUkVUUllfQ09VTlQgPSAicmV0cnlDb3VudCI7DQoJcHJp
dmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9QUklOVF9CVVNJTkVTU19PQkpFQ1RfSUQgPSAi
cHJpbnRCdXNpbmVzc09iamVjdCI7DQoNCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0t
LS0tLS0tLS0tWE1MIE5PREUgVkFMVUUgREVGSU5JVElPTlMtLS0tLS0tLS0tLS0tLS0tLS0tLQ0K
CS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX1ZBTFVFX0dF
TkVSSUNfRVJST1JfVFlQRV9JRCA9ICJhbGwiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmlu
ZyBFSERfVkFMVUVfR0xPQkFMX0VSUk9SX0hBTkRMSU5HX0lEID0gImdsb2JhbCI7DQoNCgkvLyAq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tSU5QVVQgRVJST1IgRklFTEQgSUQgREVG
SU5JVElPTlMtLS0tLS0tLS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCglwcml2YXRlIHN0YXRp
YyBmaW5hbCBTdHJpbmcgRVJST1JfSU5GT19JRCA9ICJleGNlcHRpb25JbmZvIjsNCglwcml2YXRl
IHN0YXRpYyBmaW5hbCBTdHJpbmcgRVhDTFVERV9TRVJWSUNFID0gIkBXeFJlc2lsaWVuY2UuZXJy
b3JIYW5kbGluZy5leGNsdWRlU2VydmljZUZyb21FcnJvckhhbmRsaW5nQCI7DQoJDQoJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fRVJST1IgPSAiZXJyb3IiOw0KCXByaXZh
dGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0VSUk9SX1RZUEUgPSAiZXJyb3JUeXBl
IjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfSU5GT19DQUxMX1NUQUNLX1NF
UlZJQ0UgPSAic2VydmljZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lO
Rk9fQ0FMTF9TVEFDS19GTE9XX1NURVAgPSAiZmxvd1N0ZXAiOw0KCXByaXZhdGUgc3RhdGljIGZp
bmFsIFN0cmluZyBFUlJPUl9JTkZPX0NBTExfU1RBQ0sgPSAiY2FsbFN0YWNrIjsNCglwcml2YXRl
IHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfSU5GT19FUlJPUl9EVU1QID0gImVycm9yRHVtcCI7
DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fVElNRSA9ICJ0aW1lIjsN
Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfSU5GT19ORVNURURfRVJST1JfSUQg
PSAibmVzdGVkRXJyb3JJbmZvIjsNCg0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBHRU5F
UklDX1ZBTFVFX01BUF9JRCA9ICJnZW5lcmljVmFsdWVNYXAiOw0KCXByaXZhdGUgc3RhdGljIGZp
bmFsIFN0cmluZyBHRU5FUklDX0VSUk9SX01FU1NBR0VfSUQgPSAiZ2VuZXJpY0Vycm9yTWVzc2Fn
ZSI7DQoNCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS1PVVRQVVQgSEFORExFRCBF
UlJPUiBGSUVMRCBJRCBERUZJTklUSU9OUy0tLS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCglw
cml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0lEID0gImhhbmRs
ZWRFcnJvckluZm8iOw0KCQ0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VS
Uk9SX0lORk9fUk9PVF9JRCA9ICJ0b3BTZXJ2aWNlRXJyb3IiOw0KCXByaXZhdGUgc3RhdGljIGZp
bmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fSEFORExFRF9JRCA9ICJoYW5kbGVkU2Vydmlj
ZUVycm9yIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZP
X0FQUExJQ0FUSU9OX1NFUlZJQ0VfSUQgPSAiYXBwbGljYXRpb25TZXJ2aWNlRXJyb3IiOw0KCXBy
aXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fT1JJR0lOX0lEID0g
InJvb3RTZXJ2aWNlRXJyb3IiOw0KDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRM
RURfRVJST1JfSU5GT19IQU5ETElOR19MT0NBVElPTl9JRCA9ICJoYW5kbGluZ0xvY2F0aW9uIjsN
Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0hBTkRMSU5H
X1RZUEVfSUQgPSAiaGFuZGxpbmdUeXBlIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcg
SEFORExFRF9FUlJPUl9JTkZPX0RFUFRIX0lEID0gImVycm9yRGVwdGgiOw0KCXByaXZhdGUgc3Rh
dGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fRVJST1JfQ09ERSA9ICJlcnJvckNv
ZGUiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fQ0FM
TF9TVEFDSyA9ICJjYWxsU3RhY2siOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5E
TEVEX0VSUk9SX0lORk9fRVJST1JfRFVNUCA9ICJlcnJvckR1bXAiOw0KCXByaXZhdGUgc3RhdGlj
IGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fVElNRSA9ICJ0aW1lIjsNCglwcml2YXRl
IHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX1BJUEVMSU5FID0gInBpcGVs
aW5lIjsNCg0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9NU0dfSUQgPSAiZXJy
b3JNZXNzYWdlIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgQ09NUEFDVF9FUlJPUl9M
T0NBVElPTl9JRCA9ICJlcnJvckxvY2F0aW9uIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJp
bmcgQ09NUEFDVF9FUlJPUl9GTE9XX1NURVAgPSAiZXJyb3JGbG93U3RlcCI7DQoJcHJpdmF0ZSBz
dGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX1RZUEVfSUQgPSAiZXJyb3JUeXBlIjsNCg0KCS8vICoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioNCgkvLyAtLS0tLS0tLS0tLS0tLS0tLS0tR0VORVJJQyBET0MgRklFTEQgSUQgREVG
SU5JVElPTlMtLS0tLS0tLS0tLS0tLS0tDQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCXByaXZhdGUgc3RhdGlj
IGZpbmFsIFN0cmluZyBCVVNJTkVTU19ET0NfSUQgPSAiYnVzaW5lc3NPYmplY3QiOw0KCXByaXZh
dGUgc3RhdGljIGZpbmFsIFN0cmluZyBQUklOVF9CVVNJTkVTU19PQkpFQ1RfSUQgPSAicHJpbnRC
dXNpbmVzc09iamVjdCI7DQoNCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0t
LS1FWENFUFRJT04gSEFORExJTkcgREVGSU5JVElPTi0tLS0tLS0tLS0tLS0tLS0tLQ0KCS8vICoq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgTUVUQURBVEFfSUQgPSAibWV0
YURhdGEiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBVSURfSUQgPSAidXVpZCI7DQoN
CgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1FWENFUFRJT04gSEFORExJ
TkcgREVGSU5JVElPTi0tLS0tLS0tLS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCglwcml2YXRl
IHN0YXRpYyBEb2N1bWVudCBfZXJyb3JIYW5kbGluZzsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBP
YmplY3QgZXJyb3JIYW5kbGluZ0xvY2sgPSBuZXcgT2JqZWN0KCk7DQoJcHJpdmF0ZSBzdGF0aWMg
RXJyb3JIYW5kbGluZ0xpc3RlbmVyIF9lcnJvckhhbmRsaW5nTGlzdGVuZXI7DQoJcHJpdmF0ZSBz
dGF0aWMgQ2FsbGVyVHlwZVN1cHBsaWVyIERFRkFVTFRfQ0FMTEVSX1RZUEVfU1VQUExJRVIgPSBu
ZXcgQ2FsbGVyVHlwZVN1cHBsaWVyKCkgew0KCQlAT3ZlcnJpZGUNCgkJcHVibGljIFN0cmluZyBn
ZXQoKSB7DQoJCQlyZXR1cm4gZ2V0Q2FsbGVyVHlwZUJ5Q2FsbGluZ1NlcnZpY2UoKTsNCgkJfQ0K
CX07DQoJcHJpdmF0ZSBzdGF0aWMgQ2FsbGVyVHlwZVN1cHBsaWVyIGNhbGxlclR5cGVTdXBwbGll
ciA9IG51bGw7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgT2JqZWN0IGNhbGxlclR5cGVTdXBwbGll
ckxvY2sgPSBuZXcgT2JqZWN0KCk7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgT2JqZWN0IGVycm9y
SGFuZGxpbmdMaXN0ZW5lckxvY2sgPSBuZXcgT2JqZWN0KCk7DQoJcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgT2JqZWN0IGNyZWF0ZVN1bW1hcml6ZWRFcnJvckhhbmRsaW5nTG9jayA9IG5ldyBPYmplY3Qo
KTsNCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1JTlBVVCBHRVQgVkFM
VUUgREVGSU5JVElPTi0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCglwcml2
YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgTUFYX1JFVFJZX0FUVEVNUFRTX0RFRkFVTFQgPSAibWF4
UmV0cnlBdHRlbXB0c0RlZmF1bHQiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBNQVhf
UkVUUllfQVRURU1QVFNfQkVGT1JFX0NBTkNFTF9SRVRSWSA9ICJtYXhSZXRyeUF0dGVtcHRzQmVm
b3JlQ2FuY2VsUmV0cnkiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBQQUNLQUdFX0xD
TF9FUlJPUiA9ICJXeFJlc2lsaWVuY2UiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBC
UkVBS19SRVRSWV9MT09QID0gImJyZWFrLnJldHJ5Lmxvb3AuZm9yLiI7DQoJLy8gKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Kg0KCS8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tRVJST1IgVkFMVUUgREVGSU5JVElPTi0tLS0tLS0t
LS0tLS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJp
bmcgUkVUUlkgPSAiVFJBTlNJRU5UIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgQUJP
UlQgPSAiRkFUQUwiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBDT05USU5VRSA9ICJO
T05FIjsJDQoJDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIFNVTU1BUklaRURfRVJST1Jf
SEFORExJTkdfRklMRSA9ICJFcnJvckhhbmRsaW5nU3VtbWFyaXplZC54bWwiOw0KCXByaXZhdGUg
c3RhdGljIGZpbmFsIFN0cmluZyBFWENFUFRJT05fSEFORExJTkdfWFNEX0ZJTEUgPSAiRXJyb3JI
YW5kbGluZy54c2QiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBXWF9SRVNJTElFTkNF
ID0gIld4UmVzaWxpZW5jZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0hB
TkRMSU5HX1hNTF9GSUxFID0gIkVycm9ySGFuZGxpbmcueG1sIjsNCg0KDQoJDQoJDQoJDQoJDQoJ
DQo=</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>com.softwareag.util.IDataMap</value>
    <value>com.wm.app.audit.IAuditRuntime</value>
    <value>wx.resilience.impl.ErrorInfo</value>
    <value>wx.resilience.impl.SummarizedExceptionHandlingHandler</value>
    <value>wx.resilience.impl.SummarizedExceptionHandlingHandler.Creator</value>
    <value>wx.resilience.impl.Exceptions</value>
    <value>wx.resilience.impl.Paths</value>
    <value>com.wm.lang.ns.NSName</value>
    <value>java.io.File</value>
    <value>java.io.IOException</value>
    <value>java.util.*</value>
    <value>javax.xml.transform.Source</value>
    <value>javax.xml.transform.stream.StreamSource</value>
    <value>javax.xml.validation.Schema</value>
    <value>javax.xml.validation.SchemaFactory</value>
    <value>javax.xml.validation.Validator</value>
    <value>org.jdom.Document</value>
    <value>org.jdom.Element</value>
    <value>org.jdom.JDOMException</value>
    <value>org.jdom.input.SAXBuilder</value>
    <value>org.jdom.xpath.XPath</value>
    <value>org.xml.sax.SAXException</value>
    <value>com.wm.app.b2b.server.*</value>
    <value>java.io.*</value>
    <value>java.lang.reflect.UndeclaredThrowableException</value>
    <value>java.net.URL</value>
    <value>java.nio.file.Files</value>
    <value>java.nio.file.Path</value>
    <value>java.nio.file.StandardCopyOption</value>
    <value>com.wm.lang.ns.NSService</value>
    <value>java.util.function.Supplier</value>
  </array>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
</Values>
