<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">QEZ1bmN0aW9uYWxJbnRlcmZhY2UNCnB1YmxpYyBzdGF0aWMgaW50ZXJmYWNlIEV4Y2VwdGlvbkhh
bmRsaW5nTGlzdGVuZXIgew0KCXB1YmxpYyB2b2lkIGFjY2VwdChTdHJpbmcgcFNlcnZpY2VOYW1l
LCBJRGF0YSBwUGlwZWxpbmUpOw0KfQ0KDQpARnVuY3Rpb25hbEludGVyZmFjZQ0KcHVibGljIHN0
YXRpYyBpbnRlcmZhY2UgQ2FsbGVyVHlwZVN1cHBsaWVyIHsNCglwdWJsaWMgU3RyaW5nIGdldCgp
Ow0KfQ0KDQpwcml2YXRlIHN0YXRpYyBQYXRoIGNyZWF0ZVN1bW1hcml6ZWRFeGNlcHRpb25IYW5k
bGluZygpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsNCglzeW5jaHJvbml6ZWQoY3JlYXRlU3Vt
bWFyaXplZEV4Y2VwdGlvbkhhbmRsaW5nTG9jaykgew0KCQlyZXR1cm4gY3JlYXRlU3VtbWFyaXpl
ZEV4Y2VwdGlvbkhhbmRsaW5nKFNVTU1BUklaRURfRVhDRVBUSU9OX0hBTkRMSU5HX0ZJTEUpOw0K
CX0NCn0NCnByaXZhdGUgc3RhdGljIFBhdGggY3JlYXRlU3VtbWFyaXplZEV4Y2VwdGlvbkhhbmRs
aW5nKFN0cmluZyBwRmlsZU5hbWUpDQoJCXRocm93cyBTZXJ2aWNlRXhjZXB0aW9uIHsNCglGaWxl
IElTRGlyID0gU2VydmVyQVBJLmdldFNlcnZlckNvbmZpZ0RpcigpLmdldFBhcmVudEZpbGUoKTsN
CglGaWxlIElTUGFja2FnZXMgPSBuZXcgamF2YS5pby5GaWxlKElTRGlyLCAicGFja2FnZXMiKTsN
CglmaW5hbCBQYXRoIGNvbmZpZ0RpciA9IFNlcnZlckFQSS5nZXRQYWNrYWdlQ29uZmlnRGlyKFdY
X1JFU0lMSUVOQ0UpLnRvUGF0aCgpOw0KCWZpbmFsIFBhdGggb3V0cHV0RmlsZSA9IGNvbmZpZ0Rp
ci5yZXNvbHZlKHBGaWxlTmFtZSk7DQoJUGF0aHMuYXNzZXJ0UGFyZW50RGlyRXhpc3RzKG91dHB1
dEZpbGUpOw0KDQoJdHJ5IHsNCgkJdHJ5IChDcmVhdG9yIGNyZWF0b3IgPSBTdW1tYXJpemVkRXhj
ZXB0aW9uSGFuZGxpbmdIYW5kbGVyLm5ld0NyZWF0b3Iob3V0cHV0RmlsZSkpIHsNCgkJCWZvciAo
RmlsZSBwYWNrYWdlRGlyIDogSVNQYWNrYWdlcy5saXN0RmlsZXMoKSkgew0KCQkJCWlmIChwYWNr
YWdlRGlyLmlzRGlyZWN0b3J5KCkpIHsNCgkJCQkJZmluYWwgU3RyaW5nIHBhY2thZ2VOYW1lID0g
cGFja2FnZURpci5nZXROYW1lKCk7DQoJCQkJCWlmIChwYWNrYWdlTmFtZS5zdGFydHNXaXRoKCJX
bSIpKSB7DQoJCQkJCQljb250aW51ZTsNCgkJCQkJfQ0KCQkJCQlmaW5hbCBGaWxlIHBhY2thZ2VD
ZmdEaXIgPSBuZXcgRmlsZShwYWNrYWdlRGlyLCAiY29uZmlnIik7DQoJCQkJCWlmIChwYWNrYWdl
Q2ZnRGlyLmlzRGlyZWN0b3J5KCkpIHsNCgkJCQkJCWZpbmFsIEZpbGUgcGFja2FnZUVoZEZpbGUg
PSBuZXcgRmlsZShwYWNrYWdlQ2ZnRGlyLCBFUlJPUl9IQU5ETElOR19YTUxfRklMRSk7DQoJCQkJ
CQlpZiAocGFja2FnZUVoZEZpbGUuaXNGaWxlKCkpIHsNCgkJCQkJCQljcmVhdG9yLnBhcnNlKHBh
Y2thZ2VFaGRGaWxlLCBwYWNrYWdlTmFtZSk7DQoJCQkJCQl9DQoJCQkJCX0NCgkJCQl9DQoJCQl9
DQoJCX0NCgkJdmFsaWRhdGVYTUwoKTsNCgl9IGNhdGNoIChFeGNlcHRpb24gZSkgew0KCQlsb2dF
cnJvcigiRXJyb3IgZHVyaW5nIHBhcnNpbmcgb2Ygc3VtbWFyaXplZEV4Y2VwdGlvbkhhbmRsaW5n
RGVmaW5pdGlvbjogIiArIGUuZ2V0TWVzc2FnZSgpKTsNCgkJdGhyb3cgRXhjZXB0aW9ucy5zaG93
KGUsIFNlcnZpY2VFeGNlcHRpb24uY2xhc3MpOw0KCX0NCglyZXR1cm4gb3V0cHV0RmlsZTsNCn0N
Cg0KcHJpdmF0ZSBzdGF0aWMgZmluYWwgRXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lciBERUZBVUxU
X0VSUk9SX0hBTkRMRVIgPSBuZXcgRXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lcigpIHsNCglwdWJs
aWMgdm9pZCBhY2NlcHQoU3RyaW5nIHMsIElEYXRhIGQpIHsNCgkJbG9nRGVidWcoIkRlZmF1bHRF
cnJvckhhbmRsZXI6IC0tPiAiICsgcyk7DQoJCXRyeSB7DQoJCQlTZXJ2aWNlLmRvSW52b2tlKE5T
TmFtZS5jcmVhdGUocyksIGQpOw0KCQl9IGNhdGNoIChFeGNlcHRpb24gZSkgew0KCQkJbG9nRGVi
dWcoIkRlZmF1bHRFcnJvckhhbmRsZXI6ICIgKyBlLmdldENsYXNzKCkuZ2V0TmFtZSgpICsgIiwg
IiArIGUuZ2V0TWVzc2FnZSgpKTsNCgkJCXRocm93IG5ldyBVbmRlY2xhcmVkVGhyb3dhYmxlRXhj
ZXB0aW9uKGUpOw0KCQl9DQoJCWxvZ0RlYnVnKCJEZWZhdWx0RXJyb3JIYW5kbGVyOiA8LS0iKTsN
Cgl9DQp9Ow0KcHJpdmF0ZSBzdGF0aWMgRXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lciBnZXRFcnJv
ckhhbmRsZXIoKSB7DQoJc3luY2hyb25pemVkIChleGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyTG9j
aykgew0KCQlpZiAoX2V4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXIgPT0gbnVsbCkgew0KCQkJcmV0
dXJuIERFRkFVTFRfRVJST1JfSEFORExFUjsNCgkJfSBlbHNlIHsNCgkJCXJldHVybiBfZXhjZXB0
aW9uSGFuZGxpbmdMaXN0ZW5lcjsNCgkJfQ0KCX0NCn0NCnB1YmxpYyBzdGF0aWMgdm9pZCBzZXRF
cnJvckhhbmRsZXIoRXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lciBwRXJyb3JIYW5kbGluZ0xpc3Rl
bmVyKSB7DQoJc3luY2hyb25pemVkIChleGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyTG9jaykgew0K
CQlfZXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lciA9IHBFcnJvckhhbmRsaW5nTGlzdGVuZXI7DQoJ
fQ0KfQ0KcHJpdmF0ZSBzdGF0aWMgdm9pZCBpbnZva2VFcnJvckhhbmRsZXIoSURhdGEgcEhhbmRs
aW5nU2VydmljZUlucHV0LA0KCQlmaW5hbCBTdHJpbmcgcFNlcnZpY2VOYW1lKSB0aHJvd3MgRXhj
ZXB0aW9uIHsNCglsb2dEZWJ1ZygiaW52b2tlRXJyb3JIYW5kbGVyOiAtLT4gIik7DQoJZmluYWwg
RXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lciBlaGwgPSBnZXRFcnJvckhhbmRsZXIoKTsNCglsb2dE
ZWJ1ZygiaW52b2tlRXJyb3JIYW5kbGVyOiBlaD0iICsgZWhsKTsNCgllaGwuYWNjZXB0KHBTZXJ2
aWNlTmFtZSwgcEhhbmRsaW5nU2VydmljZUlucHV0KTsNCglsb2dEZWJ1ZygiaW52b2tlRXJyb3JI
YW5kbGVyOiA8LS0iKTsNCg0KCS8vIC0tLSA8PElTLUVORD4+IC0tLQ0KfQ0KDQpwcml2YXRlIHN0
YXRpYyBEb2N1bWVudCBnZXRlcnJvckhhbmRsaW5ncygpIHRocm93cyBTZXJ2aWNlRXhjZXB0aW9u
IHsNCglzeW5jaHJvbml6ZWQoZXhjZXB0aW9uSGFuZGxpbmdMb2NrKSB7DQoJCWlmIChfZXhjZXB0
aW9uSGFuZGxpbmcgIT0gbnVsbCkgew0KCQkJcmV0dXJuIF9leGNlcHRpb25IYW5kbGluZzsNCgkJ
fQ0KCX0NCglpbml0aWFsaXplRXhjZXB0aW9uSGFuZGxpbmdzKG51bGwpOw0KCXN5bmNocm9uaXpl
ZCAoZXhjZXB0aW9uSGFuZGxpbmdMb2NrKSB7DQoJCWlmIChfZXhjZXB0aW9uSGFuZGxpbmcgPT0g
bnVsbCkgew0KCQkJdGhyb3cgbmV3IElsbGVnYWxTdGF0ZUV4Y2VwdGlvbigiVW5hYmxlIHRvIGlu
aXRpYWxpemUgZXJyb3JIYW5kbGluZy4gRGlkIHlvdSBhc3NlbWJsZSBpdD8iKTsNCgkJfSBlbHNl
IHsNCgkJCXJldHVybiBfZXhjZXB0aW9uSGFuZGxpbmc7DQoJCX0NCgl9DQp9DQoNCnByaXZhdGUg
c3RhdGljIFN0cmluZyBnZXRDYWxsZXJUeXBlKCkgew0KCUNhbGxlclR5cGVTdXBwbGllciBjdHM7
IA0KCXN5bmNocm9uaXplZCAoY2FsbGVyVHlwZVN1cHBsaWVyTG9jaykgew0KCQljdHMgPSBjYWxs
ZXJUeXBlU3VwcGxpZXI7DQoJfQ0KCWlmIChjdHMgPT0gbnVsbCkgew0KCQljdHMgPSBERUZBVUxU
X0NBTExFUl9UWVBFX1NVUFBMSUVSOw0KCX0NCglyZXR1cm4gY3RzLmdldCgpOw0KfQ0KDQpwdWJs
aWMgc3RhdGljIHZvaWQgc2V0Q2FsbGVyVHlwZVN1cHBsaWVyKENhbGxlclR5cGVTdXBwbGllciBw
U3VwcGxpZXIpIHsNCglzeW5jaHJvbml6ZWQgKGNhbGxlclR5cGVTdXBwbGllckxvY2spIHsNCgkJ
Y2FsbGVyVHlwZVN1cHBsaWVyID0gcFN1cHBsaWVyOw0KCX0NCn0NCg0KcHJpdmF0ZSBzdGF0aWMg
U3RyaW5nIGdldENhbGxlclR5cGVCeUNhbGxpbmdTZXJ2aWNlKCkgew0KCUlEYXRhIGlucHV0ID0g
bnVsbDsNCglTdHJpbmcgdHlwZSA9ICIiOw0KCS8vIG91dHB1dA0KCUlEYXRhIG91dHB1dCA9IElE
YXRhRmFjdG9yeS5jcmVhdGUoKTsNCgl0cnkgew0KCQlvdXRwdXQgPSBTZXJ2aWNlLmRvSW52b2tl
KCAid3gucmVzaWxpZW5jZS5pbXBsLmNhbGxlciIsICJnZXRDYWxsZXIiLCBpbnB1dCApOw0KCQlJ
RGF0YU1hcCBvdXRwdXRNYXAgPSBuZXcgSURhdGFNYXAob3V0cHV0KTsNCgkJSURhdGFNYXAgY2Fs
bGVyTWFwID0gbmV3IElEYXRhTWFwKG91dHB1dE1hcC5nZXRBc0lEYXRhKCJjYWxsZXIiKSk7DQoJ
CXJldHVybiBjYWxsZXJNYXAuZ2V0QXNTdHJpbmcoInR5cGUiKTsNCgl9IGNhdGNoIChFeGNlcHRp
b24gZSkgew0KCQlyZXR1cm4gdHlwZTsNCgl9CQ0KfQ0KDQoNCglwcml2YXRlIHN0YXRpYyBTdHJp
bmcgZ2V0Q2FsbFN0YWNrQXNKU09OU3RyaW5nKEFycmF5TGlzdDxJRGF0YUN1cnNvcj4gZXJyb3JJ
bmZvSGllcmFjaHkpIHsNCg0KCQlJRGF0YVtdIGNhbGxTdGFjayA9IElEYXRhVXRpbC5nZXRJRGF0
YUFycmF5KGVycm9ySW5mb0hpZXJhY2h5LmdldCgwKSwgRVJST1JfSU5GT19DQUxMX1NUQUNLKTsN
CgkJDQoJCVN0cmluZyBqc29uU3RyaW5nID0gIiI7DQoJCQ0KCQlpZiAoY2FsbFN0YWNrICE9IG51
bGwpIHsNCgkJCS8vIGlucHV0DQoJCQlJRGF0YSBpbnB1dCA9IElEYXRhRmFjdG9yeS5jcmVhdGUo
KTsNCgkJCUlEYXRhQ3Vyc29yIGlucHV0Q3Vyc29yID0gaW5wdXQuZ2V0Q3Vyc29yKCk7DQoNCgkJ
CS8vIGRvY3VtZW50DQoJCQlJRGF0YSBkb2N1bWVudCA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsN
CgkJCUlEYXRhQ3Vyc29yIGRvY3VtZW50Q3Vyc29yID0gZG9jdW1lbnQuZ2V0Q3Vyc29yKCk7DQoJ
CQlJRGF0YVV0aWwucHV0KGRvY3VtZW50Q3Vyc29yLCAiY2FsbFN0YWNrIiwgY2FsbFN0YWNrKTsN
CgkJCUlEYXRhVXRpbC5wdXQoaW5wdXRDdXJzb3IsICJkb2N1bWVudCIsIGRvY3VtZW50KTsNCgkJ
CUlEYXRhVXRpbC5wdXQoaW5wdXRDdXJzb3IsICJwcmV0dHlQcmludCIsICJmYWxzZSIpOw0KCQkJ
aW5wdXRDdXJzb3IuZGVzdHJveSgpOw0KDQoJCQkvLyBvdXRwdXQNCgkJCUlEYXRhIG91dHB1dCA9
IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsNCgkJCXRyeSB7DQoJCQkJb3V0cHV0ID0gU2VydmljZS5k
b0ludm9rZSgicHViLmpzb24iLCAiZG9jdW1lbnRUb0pTT05TdHJpbmciLCBpbnB1dCk7DQoJCQkJ
SURhdGFDdXJzb3Igb3V0cHV0Q3Vyc29yID0gb3V0cHV0LmdldEN1cnNvcigpOw0KCQkJCWpzb25T
dHJpbmcgPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKG91dHB1dEN1cnNvciwgImpzb25TdHJpbmciKTsN
CgkJCQlvdXRwdXRDdXJzb3IuZGVzdHJveSgpOw0KCQkJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsN
CgkJCQkvLyBJdCBpcyBwb3NzaWJsZSwgdGhhdCB0aGlzIHNlcnZpY2UgZG9lcyBub3QgZXhpc3Rz
IChXTTguMiBlbnZpcm9ubWVudHMvc3RvcmVzKS4NCgkJCQkvLyBUcnkgYWdhaW4gd2l0aCBTZXJ2
aWNlIGZyb20gV21KU09OIHBhY2thZ2U6DQoJCQkJLy8gVGhpcyBibG9jayBjYW4gYmUgZGVsZXRl
ZCwgaWYgZXZlcnkgZW52aXJvbm1lbnQgaXMgb24gV005LjAhDQoJCQkJdHJ5IHsNCgkJCQkJb3V0
cHV0ID0gU2VydmljZS5kb0ludm9rZSgicHViLmpzb24iLCAiZG9jdW1lbnRUb0pTT04iLCBpbnB1
dCk7DQoJCQkJCUlEYXRhQ3Vyc29yIG91dHB1dEN1cnNvciA9IG91dHB1dC5nZXRDdXJzb3IoKTsN
CgkJCQkJanNvblN0cmluZyA9IElEYXRhVXRpbC5nZXRTdHJpbmcob3V0cHV0Q3Vyc29yLCAianNv
biIpOw0KCQkJCQlvdXRwdXRDdXJzb3IuZGVzdHJveSgpOw0KCQkJCX0gY2F0Y2ggKEV4Y2VwdGlv
biBpbm5lckV4KSB7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJCQ0KCQlyZXR1cm4ganNvblN0cmluZzsN
Cgl9DQoJDQoJcHJpdmF0ZSBzdGF0aWMgSGFzaE1hcDxTdHJpbmcsIFN0cmluZz4gY3JlYXRlR2Vu
ZXJpY1ZhbHVlTWFwKEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyBoYW5kbGluZywgYm9vbGVhbiBicmVh
a1JldHJ5TG9vcCkgew0KCQlIYXNoTWFwPFN0cmluZywgU3RyaW5nPiBnZW5lcmljVmFsdWVNYXAg
PSBuZXcgSGFzaE1hcDxTdHJpbmcsIFN0cmluZz4oKTsNCg0KCQkvLyBldmFsdWF0ZSBlcnJvclRv
QmVUaHJvd246DQoJCVN0cmluZyBlcnJvclRvQmVUaHJvd24gPSBoYW5kbGluZy5nZXRFcnJvclRv
QmVUaHJvd24oKTsNCgkJDQoJCWludCByZXRyeUNvdW50ID0gZ2V0UmV0cnlDb3VudCgpOw0KCQln
ZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVfUkVUUllfQ09VTlQsIFN0cmluZy52YWx1
ZU9mKHJldHJ5Q291bnQpKTsNCg0KCQlTdHJpbmcgbWF4UmV0cnlBdHRlbXB0c1N0cmluZyA9IGhh
bmRsaW5nLmdldE1heFJldHJ5QXR0ZW1wdHMoKTsNCgkJSW50ZWdlciBtYXhSZXRyeUF0dGVtcHRz
ID0gbnVsbDsNCgkJdHJ5IHsNCgkJCW1heFJldHJ5QXR0ZW1wdHMgPSBJbnRlZ2VyLnZhbHVlT2Yo
bWF4UmV0cnlBdHRlbXB0c1N0cmluZyk7DQoJCX0gY2F0Y2ggKE51bWJlckZvcm1hdEV4Y2VwdGlv
biBuZmUpIHsNCgkJfQkJCQkJCQ0KCQkNCgkJaW50IG1heFJldHJ5QXR0ZW1wdHNCZWZvcmVBYm9y
dCA9IDA7DQoJCVN0cmluZyBtYXhSZXRyeUF0dGVtcHRzQmVmb3JlQ2FuY2VsUmV0cnlTdHJpbmcg
PSBnZXRWYWx1ZUNvbmYoDQoJCQkJTUFYX1JFVFJZX0FUVEVNUFRTX0JFRk9SRV9DQU5DRUxfUkVU
UlksIFdYX1JFU0lMSUVOQ0UsICJ0cnVlIiwNCgkJCQkiIiwgIiIsICIiLCAiIik7CQkNCgkJdHJ5
IHsNCgkJCW1heFJldHJ5QXR0ZW1wdHNCZWZvcmVBYm9ydCA9IEludGVnZXIudmFsdWVPZihtYXhS
ZXRyeUF0dGVtcHRzQmVmb3JlQ2FuY2VsUmV0cnlTdHJpbmcpOw0KCQl9IGNhdGNoIChOdW1iZXJG
b3JtYXRFeGNlcHRpb24gbmZlKSB7fQ0KDQoJCS8vIERldGVybWluZSBlcnJvclRvQmVUaHJvd24g
YW5kIG1heFJldHJ5QXR0ZW1wdHMgYWNjb3JkaW5nIHRvIHJldHJ5IGNvbmZpZ3VyYXRpb246DQoJ
CWlmIChicmVha1JldHJ5TG9vcCkgew0KCQkJLy8gYnJlYWsgZW5kbGVzcyBsb29wIC0tPiBvdmVy
d3JpdGUgd2l0aCBOT05FIG9yIEZBVEFMDQoJCQlnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRS
SUJVVEVfRVJST1JfVE9fQkVfVEhST1dOX0lELCBFUlJPUl9OT05FLmVxdWFscyhlcnJvclRvQmVU
aHJvd24pP0VSUk9SX05PTkU6RVJST1JfRkFUQUwpOw0KCQkJZ2VuZXJpY1ZhbHVlTWFwLnB1dChF
SERfQVRUUklCVVRFX01BWF9SRVRSWV9BVFRFTVBUUywgU3RyaW5nLnZhbHVlT2YocmV0cnlDb3Vu
dCkpOw0KCQl9IGVsc2UgaWYgKG1heFJldHJ5QXR0ZW1wdHMgIT0gbnVsbCAmJiBtYXhSZXRyeUF0
dGVtcHRzID09IC0xICYmIHJldHJ5Q291bnQgPCBtYXhSZXRyeUF0dGVtcHRzQmVmb3JlQWJvcnQp
IHsNCgkJCS8vIGVuZGxlc3MgbG9vcCAtLT4gVFJBTlNJRU5UDQoJCQlnZW5lcmljVmFsdWVNYXAu
cHV0KEVIRF9BVFRSSUJVVEVfRVJST1JfVE9fQkVfVEhST1dOX0lELCBFUlJPUl9UUkFOU0lFTlQp
Ow0KCQkJZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX01BWF9SRVRSWV9BVFRFTVBU
UywgbWF4UmV0cnlBdHRlbXB0c0JlZm9yZUNhbmNlbFJldHJ5U3RyaW5nKTsNCgkJfSBlbHNlIHsN
CgkJCS8vIGxlc3MgdGhhbiBtYXhSZXRyeUF0dGVtcHRzIC0tPiBUUkFOU0lFTlQNCgkJCWlmICht
YXhSZXRyeUF0dGVtcHRzICE9IG51bGwgJiYgcmV0cnlDb3VudCA8IG1heFJldHJ5QXR0ZW1wdHMp
IHsNCgkJCQlnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVfRVJST1JfVE9fQkVfVEhS
T1dOX0lELCBFUlJPUl9UUkFOU0lFTlQpOw0KCQkJCWdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FU
VFJJQlVURV9NQVhfUkVUUllfQVRURU1QVFMsIG1heFJldHJ5QXR0ZW1wdHNTdHJpbmcpOw0KCQkJ
fSBlbHNlIHsJCQkJCQ0KCQkJCSBpZiAoRVJST1JfTk9ORS5lcXVhbHMoZXJyb3JUb0JlVGhyb3du
KSkgew0KCQkJCQkgZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX0VSUk9SX1RPX0JF
X1RIUk9XTl9JRCwgRVJST1JfTk9ORSk7DQoJCQkJIH0gZWxzZSB7DQoJCQkJCSAvLyBGaW5hbCBi
ZWhhdmlvciBmb3IgYWJvcnQNCgkJCQkJIGdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FUVFJJQlVU
RV9FUlJPUl9UT19CRV9USFJPV05fSUQsIEVSUk9SX0ZBVEFMKTsNCgkJCQkgfQ0KCQkJCSAvLyBt
YXhSZXRyeUF0dGVtcHRzIGlzIHJlYWNoZWQgb3Igd2FzIG5vdCBkZWZpbmVkICgtPiAwKQ0KCQkJ
CSBTdHJpbmcgbWF4UmV0cnlBdHRlbXB0c1Jlc3VsdCA9IG1heFJldHJ5QXR0ZW1wdHMgIT0gbnVs
bCA/IG1heFJldHJ5QXR0ZW1wdHNTdHJpbmcgOiAiMCI7DQoJCQkJIGdlbmVyaWNWYWx1ZU1hcC5w
dXQoRUhEX0FUVFJJQlVURV9NQVhfUkVUUllfQVRURU1QVFMsIG1heFJldHJ5QXR0ZW1wdHNSZXN1
bHQpOw0KCQkJfQ0KCQl9DQoJCXJldHVybiBnZW5lcmljVmFsdWVNYXA7DQoJfQ0KCQ0KCS8qKg0K
CSAqIEZpbHRlcnMgdGhlIGVycm9yIGhpZXJhcmNoeSBmb3IgdGhlIGRlZXBlc3Qgc2VydmljZSAt
LT4gc2hvd3MNCgkgKiBpbiB3aGljaCBzZXJ2aWNlIG9mIG91ciBjb2RlIHRoZSBlcnJvciBvY2N1
cmVkDQoJICogDQoJICogQHBhcmFtIGhpZXJhY2hpY2FsRXJyb3JJbmZvDQoJICogQHJldHVybiB0
aGUgbGV2ZWwgb2YgdGhlIGRlZXBlc3Qgc2VydmljZSBuYW1lDQoJICovDQoJcHJpdmF0ZSBzdGF0
aWMgaW50IGdldERlZXBlc3RBcHBsaWNhdGlvblNlcnZpY2VMZXZlbChBcnJheUxpc3Q8RXJyb3JJ
bmZvPiBoaWVyYWNoaWNhbEVycm9ySW5mbykgew0KCQlTdHJpbmcgc2VydmljZSA9IG51bGw7DQoJ
CWZvciAoaW50IGxldmVsID0gaGllcmFjaGljYWxFcnJvckluZm8uc2l6ZSgpIC0gMTsgbGV2ZWwg
PiAwOyBsZXZlbC0tKSB7DQoJCQlzZXJ2aWNlID0gaGllcmFjaGljYWxFcnJvckluZm8uZ2V0KGxl
dmVsKS5nZXRTZXJ2aWNlKCk7DQoJCQkvLyBjcmVhdGUgb2YgTGlzdCBvZiBGbG93bmFtZXMgdG8g
aWdub3JlDQoJCQlMaXN0PFN0cmluZz4gaWdub3JlRmxvd3MgPSBBcnJheXMuYXNMaXN0KCJ3eC5y
ZXNpbGllbmNlLnB1Yi5yZXNpbGllbmNlOnRocm93RXJyb3IiLA0KCQkJCQkgCQkJCQkJCQkid3gu
cmVzaWxpZW5jZS5wdWIucmVzaWxpZW5jZTp0aHJvd0Vycm9ySWZOZWNlc3NhcnkiLCANCgkJCQkJ
CQkJCQkJCQkgInd4LnJlc2lsaWVuY2UucHViLnJlc2lsaWVuY2U6cG9zdFByb2Nlc3NGb3JUb3BM
ZXZlbFNlcnZpY2UiKTsNCgkJCQ0KCQkJDQoJCQkNCgkJCQ0KCQkJDQoJCQlpZiAoc2VydmljZSAh
PSBudWxsICYmIA0KCQkJCSFzZXJ2aWNlLnN0YXJ0c1dpdGgoInB1Yi4iKSAmJg0KCQkJCSFzZXJ2
aWNlLnN0YXJ0c1dpdGgoIndtLiIpICYmIA0KCQkJCSFpZ25vcmVGbG93cy5jb250YWlucyhzZXJ2
aWNlKQ0KCQkJKSB7DQoJCQkJcmV0dXJuIGxldmVsOw0KCQkJfQ0KCQl9DQoNCgkJcmV0dXJuIDA7
DQoJfQ0KDQoJDQoJLyoqDQoJICogTG9ncyBtZXNzYWdlIGZyb20gYSBjYXRhbG9nLg0KCSAqIA0K
CSAqIEBwYXJhbSBhRmFjaWxpdHlLZXkNCgkgKiAgICAgICAgICAgIGRlZmluZXMgdGhlIGZhY2ls
aXR5IGluIHRoZSBjYXRhbG9nDQoJICogQHBhcmFtIGFNZXNzYWdlS2V5DQoJICogICAgICAgICAg
ICBjb3JyZXNwb25kcyB3aXRoIHRoZSBtZXNzYWdlIGtleSBpbiB0aGUgY2F0YWxvZw0KCSAqIEBw
YXJhbSBhTWVzc2FnZVBhcmFtcw0KCSAqICAgICAgICAgICAgaWYgbWVzc2FnZSBpbiB0aGUgY2F0
YWxvZyBoYXMgcGFyYW1ldGVycw0KCSAqIEB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbg0KCSAqICAg
ICAgICAgICAgIHRocm93biBpZiB0aGUgbG9nZ2luZyBmYWlsZWQNCgkgKi8NCgkvKnByaXZhdGUg
c3RhdGljIHZvaWQgbG9nTWVzc2FnZUZyb21DYXRhbG9nKFN0cmluZyBhRmFjaWxpdHlLZXksIFN0
cmluZyBhTWVzc2FnZUtleSwgU3RyaW5nW10gYU1lc3NhZ2VQYXJhbXMpIHsNCgkJLy8gaW5wdXQN
CgkJSURhdGEgdElucHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOw0KCQlJRGF0YUN1cnNvciBp
bnB1dEN1cnNvciA9IHRJbnB1dC5nZXRDdXJzb3IoKTsNCgkJSURhdGFVdGlsLnB1dChpbnB1dEN1
cnNvciwgImZhY2lsaXR5S2V5IiwgYUZhY2lsaXR5S2V5KTsNCgkJSURhdGFVdGlsLnB1dChpbnB1
dEN1cnNvciwgIm1lc3NhZ2VLZXkiLCBhTWVzc2FnZUtleSk7DQoJDQoJCS8vIFRoZXJlIGFyZSBz
b21lIG1lc3NhZ2UgcGFyYW1zIHByb3ZpZGVkDQoJCWlmIChhTWVzc2FnZVBhcmFtcy5sZW5ndGgg
PiAwKSB7DQoJCQlJRGF0YVV0aWwucHV0KGlucHV0Q3Vyc29yLCAibWVzc2FnZVBhcmFtcyIsIGFN
ZXNzYWdlUGFyYW1zKTsNCgkJfQ0KCQlpbnB1dEN1cnNvci5kZXN0cm95KCk7DQoJDQoJCXRyeSB7
DQoJCQlTZXJ2aWNlLmRvSW52b2tlKCJ3eC5yZXNpbGllbmNlLmltcGw6IiwgImxvZ01lc3NhZ2VG
cm9tQ2F0YWxvZyIsIHRJbnB1dCk7DQoJCX0gDQoJCWNhdGNoIChFeGNlcHRpb24gZSkgew0KCQl9
DQoJfSovDQoNCgkNCglwcml2YXRlIHN0YXRpYyB2b2lkIHZhbGlkYXRlWE1MKCkgdGhyb3dzIFNl
cnZpY2VFeGNlcHRpb24gew0KCQlsb2dJbmZvKCJWYWxpZGF0aW5nIHRoZSBzdW1tYXJpemVkIGVy
cm9yIGhhbmRsaW5nIik7DQoJCUZpbGUgeG1sRmlsZSA9IG5ldyBGaWxlKFNlcnZlckFQSS5nZXRQ
YWNrYWdlQ29uZmlnRGlyKFdYX1JFU0lMSUVOQ0UpICsgIi8iICsgU1VNTUFSSVpFRF9FWENFUFRJ
T05fSEFORExJTkdfRklMRSk7DQoJCUZpbGUgc2NoZW1hRmlsZSA9IG5ldyBGaWxlKFNlcnZlckFQ
SS5nZXRQYWNrYWdlQ29uZmlnRGlyKFdYX1JFU0lMSUVOQ0UpICsgIi8iICsgRVhDRVBUSU9OX0hB
TkRMSU5HX1hTRF9GSUxFKTsNCgkJDQoJCXRyeSB7DQoJCQkvLyAxLiBMb29rdXAgYSBmYWN0b3J5
IGZvciB0aGUgVzNDIFhNTCBTY2hlbWEgbGFuZ3VhZ2UNCgkJCVNjaGVtYUZhY3RvcnkgZmFjdG9y
eSA9IFNjaGVtYUZhY3RvcnkubmV3SW5zdGFuY2UoImh0dHA6Ly93d3cudzMub3JnLzIwMDEvWE1M
U2NoZW1hIik7DQoJCQkvLyAyLiBDb21waWxlIHRoZSBzY2hlbWEuDQoJCQkvLyBIZXJlIHRoZSBz
Y2hlbWEgaXMgbG9hZGVkIGZyb20gYSBqYXZhLmlvLkZpbGUsIGJ1dCB5b3UgY291bGQgdXNlDQoJ
CQkvLyBhIGphdmEubmV0LlVSTCBvciBhIGphdmF4LnhtbC50cmFuc2Zvcm0uU291cmNlIGluc3Rl
YWQuDQoJCQlTY2hlbWEgc2NoZW1hID0gZmFjdG9yeS5uZXdTY2hlbWEoc2NoZW1hRmlsZSk7CQ0K
CQkJLy8gMy4gR2V0IGEgdmFsaWRhdG9yIGZyb20gdGhlIHNjaGVtYS4NCgkJCVZhbGlkYXRvciB2
YWxpZGF0b3IgPSBzY2hlbWEubmV3VmFsaWRhdG9yKCk7CQ0KCQkJLy8gNC4gUGFyc2UgdGhlIGRv
Y3VtZW50IHlvdSB3YW50IHRvIGNoZWNrLg0KCQkJU291cmNlIHNvdXJjZSA9IG5ldyBTdHJlYW1T
b3VyY2UoeG1sRmlsZSk7CQ0KCQkJLy8gNS4gQ2hlY2sgdGhlIGRvY3VtZW50DQoJCQl2YWxpZGF0
b3IudmFsaWRhdGUoc291cmNlKTsNCgkJCWxvZ0luZm8oeG1sRmlsZS5nZXROYW1lKCkgKyAiIGlz
IHZhbGlkIik7DQoJCX0gDQoJCWNhdGNoIChTQVhFeGNlcHRpb258SU9FeGNlcHRpb24gZXgpIHsN
CgkJCVN0cmluZyBtZXNzYWdlID0geG1sRmlsZS5nZXROYW1lKCkgKyAiIGlzIG5vdCB2YWxpZCBi
ZWNhdXNlIFxuIiArIGV4LmdldE1lc3NhZ2UoKTsNCgkJCWZpbmFsIFNlcnZpY2VFeGNlcHRpb24g
c2UgPSBuZXcgU2VydmljZUV4Y2VwdGlvbihtZXNzYWdlKTsNCgkJCXNlLmluaXRDYXVzZShleCk7
DQoJCQl0aHJvdyBzZTsNCgkJfQkNCgl9DQoNCglwcml2YXRlIHN0YXRpYyBTdHJpbmcgZ2V0VmFs
dWVDb25mKFN0cmluZyBrZXksIFN0cmluZyB3eENvbmZpZ1BrZ05hbWUsDQoJCQlTdHJpbmcgbm9T
ZXJ2aWNlRXhjZXB0aW9uLCBTdHJpbmcgc3Vic3RpdHV0ZVZhcmlhYmxlcywNCgkJCVN0cmluZyBp
Z25vcmVHbG9iYWxWYWx1ZXMsIFN0cmluZyBzY2FuQWxsQ29uZmlndXJhdGlvbnMsDQoJCQlTdHJp
bmcgbm9WYXJpYWJsZUludGVycG9sYXRpb24pIHsNCgkJU3RyaW5nIHByb3BlcnR5VmFsdWUgPSAi
ICI7DQoJCS8vIGlucHV0DQoJCUlEYXRhIGNvbmZpZ1BhcmFtID0gSURhdGFGYWN0b3J5LmNyZWF0
ZSgpOw0KCQlJRGF0YUN1cnNvciBjb25maWdQYXJhbUN1cnNvciA9IGNvbmZpZ1BhcmFtLmdldEN1
cnNvcigpOw0KCQlJRGF0YVV0aWwucHV0KGNvbmZpZ1BhcmFtQ3Vyc29yLCAia2V5Iiwga2V5KTsN
CgkJSURhdGFVdGlsLnB1dChjb25maWdQYXJhbUN1cnNvciwgInd4Q29uZmlnUGtnTmFtZSIsIHd4
Q29uZmlnUGtnTmFtZSk7DQoJCUlEYXRhVXRpbC5wdXQoY29uZmlnUGFyYW1DdXJzb3IsICJub1Nl
cnZpY2VFeGNlcHRpb24iLA0KCQkJCW5vU2VydmljZUV4Y2VwdGlvbik7DQoJCWNvbmZpZ1BhcmFt
Q3Vyc29yLmRlc3Ryb3koKTsNCgkNCgkJLy8gb3V0cHV0DQoJCUlEYXRhIGNvbmZpZ091dHB1dCA9
IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsNCgkJdHJ5IHsNCgkJCWNvbmZpZ091dHB1dCA9IFNlcnZp
Y2UuZG9JbnZva2UoInd4LmNvbmZpZy5wdWIiLCAiZ2V0VmFsdWUiLA0KCQkJCQljb25maWdQYXJh
bSk7DQoJCX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7DQoJCQlyZXR1cm4gcHJvcGVydHlWYWx1ZTsN
CgkJfQ0KCQlJRGF0YUN1cnNvciBjb25maWdPdXRwdXRDdXJzb3IgPSBjb25maWdPdXRwdXQuZ2V0
Q3Vyc29yKCk7DQoJCXByb3BlcnR5VmFsdWUgPSBJRGF0YVV0aWwNCgkJCQkuZ2V0U3RyaW5nKGNv
bmZpZ091dHB1dEN1cnNvciwgInByb3BlcnR5VmFsdWUiKTsNCgkJY29uZmlnT3V0cHV0Q3Vyc29y
LmRlc3Ryb3koKTsNCgkJbG9nRGVidWcoImdldFZhbHVlQ29uZiBmb3IgIiArIGtleSArICIgcmV0
dXJuczogIiArIHByb3BlcnR5VmFsdWUpOw0KCQlyZXR1cm4gcHJvcGVydHlWYWx1ZTsNCgl9DQoJ
DQoJcHJpdmF0ZSBzdGF0aWMgaW50IGdldFJldHJ5Q291bnQoKSB7DQoJCUlEYXRhIGlucHV0ID0g
bnVsbDsNCgkJLy8gb3V0cHV0DQoJCUlEYXRhIG91dHB1dCA9IElEYXRhRmFjdG9yeS5jcmVhdGUo
KTsNCgkJdHJ5IHsNCgkJCW91dHB1dCA9IFNlcnZpY2UuZG9JbnZva2UoInB1Yi5mbG93IiwgImdl
dFJldHJ5Q291bnQiLCBpbnB1dCk7DQoJCQlJRGF0YUN1cnNvciBvdXRwdXRDdXJzb3IgPSBvdXRw
dXQuZ2V0Q3Vyc29yKCk7DQoJCQlyZXR1cm4gSW50ZWdlci5wYXJzZUludChJRGF0YVV0aWwuZ2V0
U3RyaW5nKG91dHB1dEN1cnNvciwgInJldHJ5Q291bnQiKSk7DQoJCX0gY2F0Y2ggKEV4Y2VwdGlv
biBlKSB7DQoJCQlyZXR1cm4gMDsNCgkJfQ0KCX0NCgkNCgkvKioNCgkgKiBFeHRyYWN0cyBhbiBl
cnJvciBoaWVyYXJjaHkgZm9yIGEgZ2l2ZW4gZXJyb3IgaGllcmFyY2h5IChub3JtYWxseSBvbmx5
DQoJICogZmlsbGVkIGJ5IG9uZSAocm9vdCkgZXJyb3IpLiBVc2VzIHRoZSBjYWxsU3RhY2sgYW5k
IHRoZSBkZWVwZXN0IGVycm9ySW5mbyB0byBidWlsZCBoaWVhcmNoeS4NCgkgKiANCgkgKiBAcGFy
YW0gcEVycm9ySGllcmFyY2h5DQoJICogICAgICAgICAgICAtIGFycmF5IGxpc3Qgb2YgSURhdGFD
dXJzb3JzIG9uIHB1Yi5ldmVudDpleGNlcHRpb25JbmZvDQoJICogQHJldHVybiBmdWxsIGFycmF5
IGxpc3QgYXJyYXkgbGlzdCBvZiBFcnJvckluZm8gb24NCgkgKiAgICAgICAgIHB1Yi5ldmVudDpl
eGNlcHRpb25JbmZvLCBjb250YWluaW5nIGFsbCBlcnJvcnMgZnJvbSByb290KDApIHRvDQoJICog
ICAgICAgICBvcmlnaW4gKHNpemUgb2YgYXJyYXkgbGlzdCkNCgkgKi8NCglwcml2YXRlIHN0YXRp
YyBBcnJheUxpc3Q8RXJyb3JJbmZvPiBleHRyYWN0RXJyb3JIaWVyYXJjaHkoQXJyYXlMaXN0PElE
YXRhQ3Vyc29yPiBwRXJyb3JIaWVyYXJjaHkpIHsJDQoJCWlmIChwRXJyb3JIaWVyYXJjaHkgPT0g
bnVsbCkgew0KCQkJcmV0dXJuIG51bGw7DQoJCX0NCgkJDQoJCUlEYXRhQ3Vyc29yIGRlZXBlc3RO
ZXN0ZWRFcnJvciA9IGdldERlZXBlc3ROZXN0ZWRFcnJvcihwRXJyb3JIaWVyYXJjaHkpOw0KCQkN
CgkJLy8gZ2V0IGNhbGxTdGFjayBvZiBlcnJvcjoNCgkJSURhdGFbXSBjYWxsU3RhY2sgPSBJRGF0
YVV0aWwuZ2V0SURhdGFBcnJheShwRXJyb3JIaWVyYXJjaHkuZ2V0KDApLCAiY2FsbFN0YWNrIik7
DQoJCUFycmF5TGlzdDxFcnJvckluZm8+IGVycm9ySW5mb0xpc3QgPSBudWxsOw0KCQkNCgkJaWYg
KGNhbGxTdGFjayAhPSBudWxsKSB7DQoJCQllcnJvckluZm9MaXN0ID0gbmV3IEFycmF5TGlzdDxF
cnJvckluZm8+KGNhbGxTdGFjay5sZW5ndGgpOw0KCQkJDQoJCQkvLyB1c2UgdGhlIGVycm9yIGFu
ZCBlcnJvclR5cGUgb2YgdGhlIGRlZXBlc3QgZXJyb3JJbmZvIHRvIGRldGVybWluZSB0aGUgZXJy
b3IgYW5kIGVycm9yVHlwZSBvZiBlYWNoIGxldmVsOg0KCQkJU3RyaW5nIG5lc3RlZEVycm9yVHlw
ZSA9IElEYXRhVXRpbC5nZXRTdHJpbmcoZGVlcGVzdE5lc3RlZEVycm9yLCBFUlJPUl9JTkZPX0VS
Uk9SX1RZUEUpOw0KCQkJU3RyaW5nIG5lc3RlZEVycm9yID0gSURhdGFVdGlsLmdldFN0cmluZyhk
ZWVwZXN0TmVzdGVkRXJyb3IsIEVSUk9SX0lORk9fRVJST1IpOw0KDQoJCQkvLyB0aGUgY2FsbHN0
YWNrIGlzIG9yZGVyZWQgaW52ZXJzZSENCgkJCWZvciAoaW50IGkgPSBjYWxsU3RhY2subGVuZ3Ro
IC0gMSA7IGkgPj0gMDsgaS0tKSB7DQoJCQkJLy8gdXNlIHRoZSBzZXJ2aWNlIG5hbWVzIG9mIHRo
ZSBjYWxsc3RhY2s6DQoJCQkJSURhdGFDdXJzb3IgY2FsbFN0YWNrQ3Vyc29yID0gY2FsbFN0YWNr
W2ldLmdldEN1cnNvcigpOw0KCQkJCVN0cmluZyBzZXJ2aWNlID0gSURhdGFVdGlsLmdldFN0cmlu
ZyhjYWxsU3RhY2tDdXJzb3IsIEVSUk9SX0lORk9fQ0FMTF9TVEFDS19TRVJWSUNFKTsNCgkJCQlT
dHJpbmcgZmxvd1N0ZXAgPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKGNhbGxTdGFja0N1cnNvciwgRVJS
T1JfSU5GT19DQUxMX1NUQUNLX0ZMT1dfU1RFUCk7DQoJCQkJaWYgKGZsb3dTdGVwID09IG51bGwg
fHwgZmxvd1N0ZXAuZXF1YWxzKCIiKSkgew0KCQkJCQlmbG93U3RlcCA9ICJuLmEuIjsNCgkJCQl9
DQoJCQkJDQoJCQkJZXJyb3JJbmZvTGlzdC5hZGQobmV3IEVycm9ySW5mbyhuZXN0ZWRFcnJvciwg
bmVzdGVkRXJyb3JUeXBlLCBzZXJ2aWNlLCBmbG93U3RlcCkpOw0KCQkJfQ0KCQl9DQoJCXJldHVy
biBlcnJvckluZm9MaXN0Ow0KCX0NCgkNCgkvKioNCgkgKiBHZXRzIHRoZSBkZWVwZXN0IGVycm9y
IGluIHRoZSBlcnJvciBoaWVyYXJjaHkNCgkgKiANCgkgKiBAcGFyYW0gcEVycm9ySGllcmFyY2h5
DQoJICogICAgICAgICAgICAtIGFycmF5IGxpc3Qgb2YgSURhdGFDdXJzb3JzIG9uIHB1Yi5ldmVu
dDpleGNlcHRpb25JbmZvDQoJICogQHJldHVybiBjdXJzb3Igb2YgdGhlIGRlZXBlc3QgZXJyb3IN
CgkgKi8NCglwcml2YXRlIHN0YXRpYyBJRGF0YUN1cnNvciBnZXREZWVwZXN0TmVzdGVkRXJyb3Io
QXJyYXlMaXN0PElEYXRhQ3Vyc29yPiBwRXJyb3JIaWVyYXJjaHkpIHsJCQ0KCQkNCgkJSURhdGFD
dXJzb3IgbmVzdGVkRXJyb3IgPSBwRXJyb3JIaWVyYXJjaHkuZ2V0KDApOw0KCQlJRGF0YUN1cnNv
ciBjdXJyZW50RXJyb3IgPSBudWxsOw0KCQlJRGF0YSBuZXN0ZWRFcnJvcklEYXRhID0gbnVsbDsN
CgkJZG8gew0KCQkJY3VycmVudEVycm9yID0gbmVzdGVkRXJyb3I7DQoJCQluZXN0ZWRFcnJvcklE
YXRhID0gSURhdGFVdGlsLmdldElEYXRhKGN1cnJlbnRFcnJvciwgRVJST1JfSU5GT19ORVNURURf
RVJST1JfSUQpOw0KCQkJaWYgKG5lc3RlZEVycm9ySURhdGEgIT0gbnVsbCkgew0KCQkJCW5lc3Rl
ZEVycm9yID0gbmVzdGVkRXJyb3JJRGF0YS5nZXRDdXJzb3IoKTsNCgkJCX0gZWxzZSB7DQoJCQkJ
bmVzdGVkRXJyb3IgPSBudWxsOw0KCQkJfQ0KCQl9IHdoaWxlIChuZXN0ZWRFcnJvciAhPSBudWxs
KTsNCg0KCQlyZXR1cm4gY3VycmVudEVycm9yOw0KDQoJfQkNCg0KCS8qcHVibGljIHN0YXRpYyBj
bGFzcyBMb2cgew0KCQlwcml2YXRlIHN0YXRpYyBmaW5hbCBMb2cgSU5TVEFOQ0UgPSBuZXcgTG9n
KCk7DQoJCXByaXZhdGUgc3RhdGljIGZpbmFsIGJvb2xlYW4gbG9nZ2luZyA9IGZhbHNlOw0KDQoJ
CXB1YmxpYyBzdGF0aWMgdm9pZCBpbml0KCkgew0KCQkJaWYgKGxvZ2dpbmcpIHsNCgkJCQlJTlNU
QU5DRS5pbml0V3JpdGVyKCk7DQoJCQl9DQoJCX0NCgkJcHVibGljIHN0YXRpYyB2b2lkIHdyaXRl
KFN0cmluZyBwTWVzc2FnZSkgew0KCQkJaWYgKGxvZ2dpbmcpIHsNCgkJCQlJTlNUQU5DRS5sb2co
cE1lc3NhZ2UpOw0KCQkJfQ0KCQl9DQoJCXB1YmxpYyBzdGF0aWMgdm9pZCBjbG9zZSgpIHsNCgkJ
CWlmIChsb2dnaW5nKSB7DQoJCQkJSU5TVEFOQ0UuY2xvc2VXcml0ZXIoKTsNCgkJCX0NCgkJfQ0K
CQlwdWJsaWMgc3RhdGljIGJvb2xlYW4gaXNMb2dnaW5nKCkgew0KCQkJcmV0dXJuIGxvZ2dpbmc7
DQoJCX0NCg0KCQlwcml2YXRlIGJvb2xlYW4gaW5pdGlhbGl6ZWQ7DQoJCXByaXZhdGUgdm9pZCBp
bml0V3JpdGVyKCkgew0KCQkJaW5pdGlhbGl6ZWQgPSB0cnVlOw0KCQl9DQoJCXByaXZhdGUgdm9p
ZCBjbG9zZVdyaXRlcigpIHsNCgkJCWluaXRpYWxpemVkID0gZmFsc2U7DQoJCX0NCgkJcHJpdmF0
ZSB2b2lkIGxvZyhTdHJpbmcgcE1lc3NhZ2UpIHsNCgkJCWlmIChpbml0aWFsaXplZCkgew0KCQkJ
CS8vIFRPRE86DQoJCQkJLy9Mb2cubG9nVHJhY2VNZXNzYWdlKCJFSEYiLCBwTWVzc2FnZSk7DQoJ
CQl9DQoJCX0NCgl9Ki8NCglwdWJsaWMgc3RhdGljIGNsYXNzIEVycm9ySGFuZGxpbmdFeGNlcHRp
b24gZXh0ZW5kcyBSdW50aW1lRXhjZXB0aW9uIHsNCgkJcHJpdmF0ZSBzdGF0aWMgZmluYWwgbG9u
ZyBzZXJpYWxWZXJzaW9uVUlEID0gLTM5NTAxMDA3NDE2MzY0Nzk2ODFMOw0KDQoJCXB1YmxpYyBF
cnJvckhhbmRsaW5nRXhjZXB0aW9uKFN0cmluZyBwTXNnLCBUaHJvd2FibGUgcENhdXNlKSB7DQoJ
CQlzdXBlcihwTXNnLCBwQ2F1c2UpOw0KCQl9DQoNCgkJcHVibGljIEVycm9ySGFuZGxpbmdFeGNl
cHRpb24oU3RyaW5nIHBNc2cpIHsNCgkJCXN1cGVyKHBNc2cpOw0KCQl9DQoNCgkJcHVibGljIEVy
cm9ySGFuZGxpbmdFeGNlcHRpb24oVGhyb3dhYmxlIHBDYXVzZSkgew0KCQkJc3VwZXIocENhdXNl
KTsNCgkJfQ0KCX0NCg0KCXB1YmxpYyBzdGF0aWMgY2xhc3MgRXhjZXB0aW9uSGFuZGxpbmdJbmZv
IHsNCgkJLy8gT2xkIHJlcHJlc2VudGF0aW9uIG9mIEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyAoZGVw
cmVjYXRlZCkNCgkJcHJpdmF0ZSBmaW5hbCBMaXN0PFN0cmluZz4gc2VydmljZU5hbWVzID0gbmV3
IEFycmF5TGlzdDw+KCk7DQoJCXByaXZhdGUgZmluYWwgU3RyaW5nICBlcnJvclRvQmVUaHJvd24s
IHR5cGUsIGVycm9yQ29kZSwgZXhjZXB0aW9uVHlwZSwgbWF4UmV0cnlBdHRlbXB0czsNCgkJcHJp
dmF0ZSBmaW5hbCBib29sZWFuIHByaW50QnVzaW5lc3NPYmplY3Q7DQoJCXB1YmxpYyBFeGNlcHRp
b25IYW5kbGluZ0luZm8oU3RyaW5nIHBFcnJvclRvQmVUaHJvd24sIFN0cmluZyBwVHlwZSwgU3Ry
aW5nIHBFcnJvckNvZGUsDQoJCQkJIAkJCQkJIFN0cmluZyBwRXhjZXB0aW9uVHlwZSwgU3RyaW5n
IHBNYXhSZXRyeUF0dGVtcHRzLA0KCQkJCSAJCQkJCSBib29sZWFuIHBQcmludEJ1c2luZXNzT2Jq
ZWN0KSB7DQoJCQllcnJvclRvQmVUaHJvd24gPSBwRXJyb3JUb0JlVGhyb3duOw0KCQkJdHlwZSA9
IHBUeXBlOw0KCQkJZXJyb3JDb2RlID0gcEVycm9yQ29kZTsNCgkJCWV4Y2VwdGlvblR5cGUgPSBw
RXhjZXB0aW9uVHlwZTsNCgkJCW1heFJldHJ5QXR0ZW1wdHMgPSBwTWF4UmV0cnlBdHRlbXB0czsN
CgkJCXByaW50QnVzaW5lc3NPYmplY3QgPSBwUHJpbnRCdXNpbmVzc09iamVjdDsNCgkJfQ0KDQoJ
CXB1YmxpYyBMaXN0PFN0cmluZz4gZ2V0SGFuZGxpbmdTZXJ2aWNlcygpIHsNCgkJCXJldHVybiBz
ZXJ2aWNlTmFtZXM7DQoJCX0NCg0KCQlwdWJsaWMgdm9pZCBhZGRTZXJ2aWNlTmFtZShTdHJpbmcg
cFNlcnZpY2VOYW1lKSB7DQoJCQlzZXJ2aWNlTmFtZXMuYWRkKHBTZXJ2aWNlTmFtZSk7DQoJCX0N
Cg0KCQlwdWJsaWMgU3RyaW5nIGdldEVycm9yVG9CZVRocm93bigpIHsNCgkJCXJldHVybiBlcnJv
clRvQmVUaHJvd247DQoJCX0NCg0KCQlwdWJsaWMgU3RyaW5nIGdldFR5cGUoKSB7DQoJCQlyZXR1
cm4gdHlwZTsNCgkJfQ0KDQoJCXB1YmxpYyBTdHJpbmcgZ2V0RXJyb3JDb2RlKCkgew0KCQkJcmV0
dXJuIGVycm9yQ29kZTsNCgkJfQ0KDQoJCXB1YmxpYyBTdHJpbmcgZ2V0RXhjZXB0aW9uVHlwZSgp
IHsNCgkJCXJldHVybiBleGNlcHRpb25UeXBlOw0KCQl9DQoNCgkJcHVibGljIFN0cmluZyBnZXRN
YXhSZXRyeUF0dGVtcHRzKCkgew0KCQkJcmV0dXJuIG1heFJldHJ5QXR0ZW1wdHM7DQoJCX0NCg0K
CQlwdWJsaWMgYm9vbGVhbiBpc1ByaW50QnVzaW5lc3NPYmplY3QoKSB7DQoJCQlyZXR1cm4gcHJp
bnRCdXNpbmVzc09iamVjdDsNCgkJfQ0KDQoJCUBPdmVycmlkZQ0KCQlwdWJsaWMgU3RyaW5nIHRv
U3RyaW5nKCkgew0KCQkJZmluYWwgU3RyaW5nQnVpbGRlciBzYiA9IG5ldyBTdHJpbmdCdWlsZGVy
KCk7DQoJCQlzYi5hcHBlbmQoc3VwZXIudG9TdHJpbmcoKSk7DQoJCQlzYi5hcHBlbmQoIjogZXJy
b3JUb0JlVGhyb3duPSAiKTsNCgkJCXNiLmFwcGVuZChlcnJvclRvQmVUaHJvd24pOw0KCQkJc2Iu
YXBwZW5kKCIsIHR5cGU9Iik7DQoJCQlzYi5hcHBlbmQodHlwZSk7DQoJCQlzYi5hcHBlbmQoImVy
cm9yQ29kZT0iKTsNCgkJCXNiLmFwcGVuZChlcnJvckNvZGUpOw0KCQkJc2IuYXBwZW5kKCIsIGV4
Y2VwdGlvblR5cGU9Iik7DQoJCQlzYi5hcHBlbmQoZXhjZXB0aW9uVHlwZSk7DQoJCQlzYi5hcHBl
bmQoIiwgbWF4UmV0cnlBdHRlbXB0cz0iKTsNCgkJCXNiLmFwcGVuZChtYXhSZXRyeUF0dGVtcHRz
KTsNCgkJCXNiLmFwcGVuZCgiLCBwcmludEJ1c2luZXNzT2JqZWN0PSIpOw0KCQkJc2IuYXBwZW5k
KHByaW50QnVzaW5lc3NPYmplY3QpOw0KCQkJc2IuYXBwZW5kKCIsIHNlcnZpY2VOYW1lcz0iKTsN
CgkJCS8vIFRPRE86DQoJCQkvL3NiLmFwcGVuZChTdHJpbmdzLmFzU3RyaW5nKHNlcnZpY2VOYW1l
cykpOw0KCQkJcmV0dXJuIHNiLnRvU3RyaW5nKCk7DQoJCX0NCgkJDQoJfQ0KCQ0KCS8qKg0KCSAq
IEV4dHJhY3QgaGFuZGxpbmdzIGZvciBhbiBlcnJvciBhdCBhIGxvY2F0aW9uIGZyb20gYSBnaXZl
biBleGNlcHRpb24NCgkgKiBoYW5kbGluZyBkZWZpbml0aW9uDQoJICogDQoJICogQHBhcmFtIHBF
cnJvckhhbmRsaW5nDQoJICogICAgICAgICAgICBkZWZpbml0aW9uIGFzIERPTSBkb2N1bWVudCB0
byB1c2UgZm9yIGV4dHJhY3Rpb24NCgkgKiBAcGFyYW0gcExvY2F0aW9uWFBhdGgNCgkgKiAgICAg
ICAgICAgIGVycm9yIGxvY2F0aW9uIGFzIFhQQVRIDQoJICogQHBhcmFtIHBFeGNlcHRpb25UeXBl
DQoJICogICAgICAgICAgICBlcnJvciB0eXBlIGFzIFN0cmluZw0KCSAqIEBwYXJhbSBjdXJyZW50
Q2FsbGVyVHlwZQ0KCSAqICAgICAgICAgICAgY2FsbGVyIHR5cGUgYXMgU3RyaW5nCQ0KCSAqIEBw
YXJhbSBjdXJyZW50RXJyb3JNZXNzYWdlDQoJICogICAgICAgICAgICBvcmlnaW5hbCBlcnJvciBh
cyBTdHJpbmcgDQoJICogQHJldHVybiBhbGwgZm91bmQgaGFuZGxpbmdzIGZvciB0aGUgZ2l2ZW4g
ZXJyb3IgYXMgYW4gYXJyYXkgbGlzdCwgZW1wdHkNCgkgKiAgICAgICAgIGxpc3QgaW4gY2FzZSBv
ZiBubyBmb3VuZCBlcnJvcg0KCSAqIEB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbg0KCSAqLw0KCUBT
dXBwcmVzc1dhcm5pbmdzKCJ1bmNoZWNrZWQiKQ0KCXByaXZhdGUgc3RhdGljIEV4Y2VwdGlvbkhh
bmRsaW5nSW5mbyBnZXRIYW5kbGluZ3NGb3JMb2NhdGlvbigNCgkJCURvY3VtZW50IHBFcnJvckhh
bmRsaW5nLCBTdHJpbmcgcExvY2F0aW9uWFBhdGgsDQoJCQlTdHJpbmcgcEV4Y2VwdGlvblR5cGUs
IFN0cmluZyBjdXJyZW50Q2FsbGVyVHlwZSwgU3RyaW5nIGN1cnJlbnRFcnJvck1lc3NhZ2UpDQoJ
CQl0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7DQoJCWxvZ0RlYnVnKCJnZXRIYW5kbGluZ3NGb3JM
b2NhdGlvbjogLS0+ICIgKyBwTG9jYXRpb25YUGF0aCArICIsICIgKyBwRXhjZXB0aW9uVHlwZSAr
ICIsICIgKyBjdXJyZW50Q2FsbGVyVHlwZSArICIsICIgKyBjdXJyZW50RXJyb3JNZXNzYWdlKTsN
Cg0KCQkvLyBnZXQgZXhjZXB0aW9uIGxpc3QgZm9yIGxvY2F0aW9uDQoJCUxpc3Q8RWxlbWVudD4g
ZXhjZXB0aW9uTm9kZXMgPSBudWxsOw0KCQl0cnkgew0KCQkJZXhjZXB0aW9uTm9kZXMgPSAoTGlz
dDxFbGVtZW50PikgWFBhdGguc2VsZWN0Tm9kZXMocEVycm9ySGFuZGxpbmcsIHBMb2NhdGlvblhQ
YXRoKTsNCgkJfSANCgkJY2F0Y2ggKEpET01FeGNlcHRpb24gZSkgew0KCQkJbG9nRXJyb3IoIkpE
T00gRXJyb3IgZHVyaW5nIGV4dHJhY3Rpb24gb2YgZXJyb3IgdHlwZXMgZnJvbSBleGNlcHRpb24g
aGFuZGxpbmcgZGVmaW5pdGlvbjogIiArIGUuZ2V0TWVzc2FnZSgpKTsNCgkJCWxvZ0RlYnVnKCJn
ZXRIYW5kbGluZ3NGb3JMb2NhdGlvbjogPC0tIG51bGwgKEpET01FeGNlcHRpb246ICIgKyBlLmdl
dE1lc3NhZ2UoKSArICIpIik7DQoJCQlyZXR1cm4gbnVsbDsNCgkJfQ0KICAgICAgICAvLyBjaGVj
ayBleGNlcHRpb24gbm9kZXMgc2FuaXR5DQoJCWlmIChleGNlcHRpb25Ob2RlcyA9PSBudWxsIHx8
IGV4Y2VwdGlvbk5vZGVzLmlzRW1wdHkoKSkgew0KCQkJbG9nRGVidWcoImdldEhhbmRsaW5nc0Zv
ckxvY2F0aW9uOiA8LS0gbnVsbCAoTm8gZXhjZXB0aW9uTm9kZXMpIik7DQoJCQlyZXR1cm4gbnVs
bDsNCgkJfQkJCQ0KCQkNCgkJLy8gZXh0cmFjdCBleGNlcHRpb25zIGZyb20gbGlzdCwgaWYgbG9j
YXRpb24gZXhpc3RzIGFuZCBleGNlcHRpb24NCgkJLy8gZGVmaW5pdGlvbnMgYXJlIGNvbnRhaW5l
ZA0KCQkvLyBpdGVyYXRpb24gb3ZlciBhbGwgZGVmaW5lZCBleGNlcHRpb25zIGluIGxvY2F0aW9u
DQoJCUV4Y2VwdGlvbkhhbmRsaW5nSW5mbyBleGNlcHRpb25IYW5kbGluZ0luZm8gPSBudWxsOw0K
CQlFbGVtZW50IGV4Y2VwdGlvbkhhbmRsaW5nRWxlbWVudCA9IG51bGw7DQoJCWZvciAoRWxlbWVu
dCBleGNlcHRpb25Ob2RlIDogZXhjZXB0aW9uTm9kZXMpIHsNCgkJCWJvb2xlYW4gaXNFcnJvck1l
c3NhZ2VDb250YWluc0NoZWNrVHJ1ZSA9IGZhbHNlOw0KCQkJZmluYWwgU3RyaW5nIGVycm9yTWVz
c2FnZUNvbnRhaW5zRnJvbURlZmluaXRpb24gPSBleGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZh
bHVlKEVIRF9BVFRSSUJVVEVfRVJST1JfTUVTU0FHRV9DT05UQUlOUyk7DQoJCQlpZiAoZXJyb3JN
ZXNzYWdlQ29udGFpbnNGcm9tRGVmaW5pdGlvbiA9PSBudWxsIHx8DQoJCQkJKGN1cnJlbnRFcnJv
ck1lc3NhZ2UgIT0gbnVsbCAmJg0KCQkJCWVycm9yTWVzc2FnZUNvbnRhaW5zRnJvbURlZmluaXRp
b24gIT0gbnVsbCAmJg0KCQkJCWN1cnJlbnRFcnJvck1lc3NhZ2UuY29udGFpbnMoZXJyb3JNZXNz
YWdlQ29udGFpbnNGcm9tRGVmaW5pdGlvbikpKSANCgkJCXsNCgkJCQlpc0Vycm9yTWVzc2FnZUNv
bnRhaW5zQ2hlY2tUcnVlID0gdHJ1ZTsNCgkJCX0NCg0KCQkJLy8gQ2hlY2sgZm9yIG9wdGlvbmFs
IGF0dHJpYnV0IGVycm9yTWVzc2FnZVJlZ2V4Og0KCQkJYm9vbGVhbiBpc0Vycm9yTWVzc2FnZVJl
Z2V4Q2hlY2tUcnVlID0gZmFsc2U7DQoJCQlmaW5hbCBTdHJpbmcgZXJyb3JNZXNzYWdlUmVnZXhG
cm9tRGVmaW5pdGlvbiA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJ
QlVURV9FUlJPUl9NRVNTQUdFX1JFR0VYX0lEKTsNCgkJCWlmIChlcnJvck1lc3NhZ2VSZWdleEZy
b21EZWZpbml0aW9uID09IG51bGwgfHwNCgkJCQkoY3VycmVudEVycm9yTWVzc2FnZSAhPSBudWxs
ICYmDQoJCQkJZXJyb3JNZXNzYWdlUmVnZXhGcm9tRGVmaW5pdGlvbiAhPSBudWxsICYmDQoJCQkJ
Y3VycmVudEVycm9yTWVzc2FnZS5tYXRjaGVzKGVycm9yTWVzc2FnZVJlZ2V4RnJvbURlZmluaXRp
b24pKSkgDQoJCQl7DQoJCQkJaXNFcnJvck1lc3NhZ2VSZWdleENoZWNrVHJ1ZSA9IHRydWU7DQoJ
CQl9DQoJCQkNCgkJCS8vIENoZWNrIGZvciBvcHRpb25hbCBhdHRyaWJ1dCBjYWxsZXJUeXBlOg0K
CQkJYm9vbGVhbiBpc0NhbGxlclR5cGVDaGVja1RydWUgPSBmYWxzZTsNCgkJCWZpbmFsIFN0cmlu
ZyBjYWxsZXJUeXBlRnJvbURlZmluaXRpb24gPSBleGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZh
bHVlKEVIRF9BVFRSSUJVVEVfRVJST1JfQ0FMTEVSX1RZUEVfSUQpOw0KCQkJaWYgKGNhbGxlclR5
cGVGcm9tRGVmaW5pdGlvbiA9PSBudWxsIHx8DQoJCQkJKGN1cnJlbnRDYWxsZXJUeXBlICE9IG51
bGwgJiYNCgkJCQljYWxsZXJUeXBlRnJvbURlZmluaXRpb24gIT0gbnVsbCAmJg0KCQkJCWN1cnJl
bnRDYWxsZXJUeXBlLmVxdWFscyhjYWxsZXJUeXBlRnJvbURlZmluaXRpb24pKSkgDQoJCQl7DQoJ
CQkJaXNDYWxsZXJUeXBlQ2hlY2tUcnVlID0gdHJ1ZTsNCgkJCX0NCgkJCQ0KCQkJLy8gaWYgZGVm
aW5lZCBleGNlcHRpb24gdHlwZSBlcXVhbHMgZXhjZXB0aW9uLCBzZXQgaGFuZGxpbmcgYW5kDQoJ
CQkvLyBleGl0IGxvb3ANCgkJCWZpbmFsIFN0cmluZyBleGNlcHRpb25UeXBlRnJvbURlZmluaXRp
b24gPSBleGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9BVFRSSUJVVEVfRVJST1Jf
VFlQRV9JRCk7DQoJCQlpZiAoZXhjZXB0aW9uVHlwZUZyb21EZWZpbml0aW9uLmVxdWFscyhwRXhj
ZXB0aW9uVHlwZSkgJiYgaXNFcnJvck1lc3NhZ2VDb250YWluc0NoZWNrVHJ1ZSAmJiBpc0Vycm9y
TWVzc2FnZVJlZ2V4Q2hlY2tUcnVlICYmIGlzQ2FsbGVyVHlwZUNoZWNrVHJ1ZSkgew0KCQkJCWV4
Y2VwdGlvbkhhbmRsaW5nSW5mbyA9IGdldFJldFZhbChleGNlcHRpb25Ob2RlLCBwRXhjZXB0aW9u
VHlwZSk7DQoJCQkJZXhjZXB0aW9uSGFuZGxpbmdFbGVtZW50ID0gZXhjZXB0aW9uTm9kZTsNCgkJ
CQlicmVhazsNCgkJCX0JDQoJCQkgIA0KCQkJLy8gaWYgZ2VuZXJpYyBoYW5kbGluZyBpcyBhbGxv
d2VkIGFuZCBkZWZpbmVkICh0eXBlPSJhbGwiKSwgc2V0IChjYWNoZSkNCgkJCS8vIGdlbmVyaWMg
aGFuZGxpbmcNCgkJCWVsc2UgaWYgKGV4Y2VwdGlvblR5cGVGcm9tRGVmaW5pdGlvbi5lcXVhbHMo
RUhEX1ZBTFVFX0dFTkVSSUNfRVJST1JfVFlQRV9JRCkgJiYgaXNFcnJvck1lc3NhZ2VDb250YWlu
c0NoZWNrVHJ1ZSAmJiBpc0Vycm9yTWVzc2FnZVJlZ2V4Q2hlY2tUcnVlICYmIGlzQ2FsbGVyVHlw
ZUNoZWNrVHJ1ZSkgew0KCQkJCWV4Y2VwdGlvbkhhbmRsaW5nSW5mbyA9IGdldFJldFZhbChleGNl
cHRpb25Ob2RlLCBwRXhjZXB0aW9uVHlwZSk7DQoJCQkJZXhjZXB0aW9uSGFuZGxpbmdFbGVtZW50
ID0gZXhjZXB0aW9uTm9kZTsNCgkJCQlicmVhazsNCgkJCX0NCgkJfQ0KDQoJCWlmIChleGNlcHRp
b25IYW5kbGluZ0VsZW1lbnQgPT0gbnVsbCkgew0KCQkJcmV0dXJuIG51bGw7DQoJCX0gZWxzZSB7
DQoJCQkvLyBjaGVjayBoYW5kbGluZyBub2RlcyBzYW5pdHkNCgkJCWZvciAoT2JqZWN0IG4gOiBl
eGNlcHRpb25IYW5kbGluZ0VsZW1lbnQuZ2V0Q2hpbGRyZW4oRUhEX0FUVFJJQlVURV9IQU5ETElO
RykpIHsNCgkJCQkJZXhjZXB0aW9uSGFuZGxpbmdJbmZvLmFkZFNlcnZpY2VOYW1lKCgoRWxlbWVu
dCkgbikuZ2V0VGV4dCgpKTsNCgkJCX0NCg0KCQkJbG9nRGVidWcoImdldEhhbmRsaW5nc0Zvckxv
Y2F0aW9uOiA8LS0gIiArIGV4Y2VwdGlvbkhhbmRsaW5nSW5mbyk7DQoJCQlyZXR1cm4gZXhjZXB0
aW9uSGFuZGxpbmdJbmZvOw0KCQl9DQoJCQ0KCX0NCgkNCglwcml2YXRlIHN0YXRpYyBFeGNlcHRp
b25IYW5kbGluZ0luZm8gZ2V0UmV0VmFsKEVsZW1lbnQgZXhjZXB0aW9uTm9kZSwgU3RyaW5nIGV4
Y2VwdGlvblR5cGUpIHsJDQoJCWZpbmFsIFN0cmluZyBlcnJvclRvQmVUaHJvd24gPSBleGNlcHRp
b25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9BVFRSSUJVVEVfRVJST1JfVE9fQkVfVEhST1dO
X0lEKTsNCgkJZmluYWwgU3RyaW5nIHR5cGUgPSBleGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZh
bHVlKEVIRF9BVFRSSUJVVEVfRVJST1JfVFlQRV9JRCk7DQoJCWZpbmFsIFN0cmluZyBleGNlcHRp
b25IYW5kbGluZ0lkID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfQVRUUklC
VVRFX0VSUk9SX0hBTkRMSU5HX0lEX0lEKTsNCgkJZmluYWwgU3RyaW5nIG1heFJldHJ5QXR0ZW1w
dHMgPSBleGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9BVFRSSUJVVEVfTUFYX1JF
VFJZX0FUVEVNUFRTKTsNCgkJZmluYWwgU3RyaW5nIHByaW50QnVzaW5lc3NPYmplY3RTdHIgPSBl
eGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9QUklOVF9CVVNJTkVTU19PQkpFQ1Rf
SUQpOw0KCQlmaW5hbCBib29sZWFuIHByaW50QnVzaW5lc3NPYmplY3QgPSBwcmludEJ1c2luZXNz
T2JqZWN0U3RyID09IG51bGwgPyBmYWxzZSA6IEJvb2xlYW4ucGFyc2VCb29sZWFuKHByaW50QnVz
aW5lc3NPYmplY3RTdHIpOw0KCQlyZXR1cm4gbmV3IEV4Y2VwdGlvbkhhbmRsaW5nSW5mbyhlcnJv
clRvQmVUaHJvd24sIHR5cGUsIGV4Y2VwdGlvbkhhbmRsaW5nSWQsIGV4Y2VwdGlvblR5cGUsIG1h
eFJldHJ5QXR0ZW1wdHMsIHByaW50QnVzaW5lc3NPYmplY3QpOw0KCX0NCgkNCg0KCXByaXZhdGUg
c3RhdGljIElEYXRhIGJ1aWxkQ29tcGFjdEVycm9ySW5mbyhTdHJpbmcgcEVycm9yTG9jYXRpb24s
IFN0cmluZyBmbG93U3RlcCkgew0KCQlJRGF0YSBjb21wYWN0RXJyb3JJbmZvID0gSURhdGFGYWN0
b3J5LmNyZWF0ZSgpOw0KCQlJRGF0YUN1cnNvciBjb21wYWN0RXJyb3JJbmZvQ3Vyc29yID0gY29t
cGFjdEVycm9ySW5mby5nZXRDdXJzb3IoKTsNCg0KCQlJRGF0YVV0aWwucHV0KGNvbXBhY3RFcnJv
ckluZm9DdXJzb3IsIENPTVBBQ1RfRVJST1JfTE9DQVRJT05fSUQsIHBFcnJvckxvY2F0aW9uKTsN
CgkJSURhdGFVdGlsLnB1dChjb21wYWN0RXJyb3JJbmZvQ3Vyc29yLCBDT01QQUNUX0VSUk9SX0ZM
T1dfU1RFUCwgZmxvd1N0ZXApOw0KDQoJCWNvbXBhY3RFcnJvckluZm9DdXJzb3IuZGVzdHJveSgp
Ow0KDQoJCXJldHVybiBjb21wYWN0RXJyb3JJbmZvOw0KCX0NCgkJDQoJQFN1cHByZXNzV2Fybmlu
Z3MoInJhd3R5cGVzIikNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBOU1NlcnZpY2UgZ2V0Q3VycmVu
dFRvcExldmVsU2VydmljZSgpIHsNCgkJTlNTZXJ2aWNlIHRvcExldmVsU2VydmljZU5hbWUgPSBu
dWxsOw0KCQlJbnZva2VTdGF0ZSBzdGF0ZSA9IEludm9rZVN0YXRlLmdldEN1cnJlbnRTdGF0ZSgp
Ow0KCQlpZiAoc3RhdGUgIT0gbnVsbCkgew0KCQkJU3RhY2sgY2FsbFN0YWNrID0gc3RhdGUuZ2V0
Q2FsbFN0YWNrKCk7DQoJCQlpZiAoY2FsbFN0YWNrICE9IG51bGwgJiYgY2FsbFN0YWNrLnNpemUo
KSA+IDApIHsNCgkJCQl0b3BMZXZlbFNlcnZpY2VOYW1lID0gKE5TU2VydmljZSkgY2FsbFN0YWNr
LmVsZW1lbnRBdCgwKTsNCgkJCX0NCgkJfQ0KCQlyZXR1cm4gdG9wTGV2ZWxTZXJ2aWNlTmFtZTsN
Cgl9DQoJDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIGdldE1lc3NhZ2VVSUQoSURhdGEg
bWV0YURhdGEpIHsNCgkJaWYobWV0YURhdGEgIT0gbnVsbCkgew0KCQkJSURhdGFNYXAgbWV0YURh
dGFNYXAgPSBuZXcgSURhdGFNYXAobWV0YURhdGEpOw0KCQkJcmV0dXJuIG1ldGFEYXRhTWFwLmdl
dEFzU3RyaW5nKFVJRF9JRCk7DQoJCX0NCgkJcmV0dXJuIG51bGw7DQoJfQ0KDQoJcHVibGljIHN0
YXRpYyB2b2lkIGluaXRIYW5kbGluZ3MoVVJMIHBVcmwsIFNBWEJ1aWxkZXIgcEJ1aWxkZXIpIHsN
CgkJZmluYWwgU0FYQnVpbGRlciBidWlsZGVyOw0KCQlpZiAocEJ1aWxkZXIgPT0gbnVsbCkgew0K
CQkJYnVpbGRlciA9IG5ldyBTQVhCdWlsZGVyKCk7DQoJCX0gZWxzZSB7DQoJCQlidWlsZGVyID0g
cEJ1aWxkZXI7DQoJCX0NCgkJZmluYWwgRG9jdW1lbnQgZG9jID0gbG9hZEhhbmRsaW5ncyhwVXJs
LCBidWlsZGVyKTsNCgkJc3luY2hyb25pemVkKGV4Y2VwdGlvbkhhbmRsaW5nTG9jaykgew0KCQkJ
X2V4Y2VwdGlvbkhhbmRsaW5nID0gZG9jOw0KCQl9DQoJfQ0KCQ0KCXByaXZhdGUgc3RhdGljIERv
Y3VtZW50IGxvYWRIYW5kbGluZ3MoVVJMIHBGaWxlLCBTQVhCdWlsZGVyIHBCdWlsZGVyKSB7DQoJ
CS8vIExvYWQgZXhjZXB0aW9uIGhhbmRsaW5nIGRlZmluaXRpb24gZmlsZQ0KCQkNCgkJdHJ5IHsN
CgkJCWZpbmFsIERvY3VtZW50IGVoZCA9IHBCdWlsZGVyLmJ1aWxkKHBGaWxlKTsNCgkJDQoJCQls
b2dJbmZvKCJTdWNjZXNzZnVsbHkgaW5pdGlhbGl6ZWQgZXJyb3IgaGFuZGxpbmciKTsNCgkJCXJl
dHVybiBlaGQ7DQoJCX0gDQoJCWNhdGNoIChKRE9NRXhjZXB0aW9uIGUpIHsNCgkJCWxvZ0Vycm9y
KCJKRE9NIEVycm9yIGR1cmluZyBpbml0aWFsaXphdGlvbiBvZiBlcnJvciBoYW5kbGluZzogIiAr
IGUuZ2V0TWVzc2FnZSgpKTsNCgkJCXRocm93IG5ldyBVbmRlY2xhcmVkVGhyb3dhYmxlRXhjZXB0
aW9uKGUpOw0KCQl9IA0KCQljYXRjaCAoSU9FeGNlcHRpb24gZSkgew0KCQkJbG9nRXJyb3IoIklP
IEVycm9yIGR1cmluZyBpbml0aWFsaXphdGlvbiBvZiBlcnJvciBoYW5kbGluZzogIiArIGUuZ2V0
TWVzc2FnZSgpKTsNCgkJCXRocm93IG5ldyBVbmRlY2xhcmVkVGhyb3dhYmxlRXhjZXB0aW9uKGUp
Ow0KCQl9DQoJfQ0KDQoNCglwcml2YXRlIHN0YXRpYyBTdHJpbmcgYXNTdHJpbmcoU3RyaW5nW10g
dGVtcFBhcnRzKSB7DQoJCVN0cmluZ0J1aWxkZXIgYnVpbGRlciA9IG5ldyBTdHJpbmdCdWlsZGVy
KCk7DQoJCWZvciAoU3RyaW5nIHN0cmluZyA6IHRlbXBQYXJ0cykgew0KCQkJYnVpbGRlci5hcHBl
bmQoc3RyaW5nKS5hcHBlbmQoIiwiKTsNCgkJfQ0KCQlyZXR1cm4gYnVpbGRlci50b1N0cmluZygp
Ow0KCX0NCg0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBMT0dfU1ZDX1BBVEggPSAid3gu
cmVzaWxpZW5jZS5pbXBsLmxvZ0Vycm9yIjsNCg0KCXB1YmxpYyBzdGF0aWMgdm9pZCBsb2dJbmZv
KFN0cmluZyBtZXNzYWdlKSB7DQoJCWxvZ0ltcGwobWVzc2FnZSwgIkluZm8iKTsNCgl9DQoJDQoJ
cHVibGljIHN0YXRpYyB2b2lkIGxvZ1dhcm4oU3RyaW5nIG1lc3NhZ2UpIHsNCgkJbG9nSW1wbCht
ZXNzYWdlLCAiV2FybiIpOw0KCX0NCgkNCglwdWJsaWMgc3RhdGljIHZvaWQgbG9nRXJyb3IoU3Ry
aW5nIG1lc3NhZ2UpIHsNCgkJbG9nSW1wbChtZXNzYWdlLCAiRXJyb3IiKTsNCgl9DQoNCglwdWJs
aWMgc3RhdGljIHZvaWQgbG9nVHJhY2UoU3RyaW5nIG1lc3NhZ2UpIHsNCgkJbG9nSW1wbChtZXNz
YWdlLCAiVHJhY2UiKTsNCgl9DQoJDQoJcHVibGljIHN0YXRpYyB2b2lkIGxvZ0RlYnVnKFN0cmlu
ZyBtZXNzYWdlKSB7DQoJCWxvZ0ltcGwobWVzc2FnZSwgIkRlYnVnIik7DQoJfQ0KCQ0KCXB1Ymxp
YyBzdGF0aWMgdm9pZCBsb2dGYXRhbChTdHJpbmcgbWVzc2FnZSkgew0KCQlsb2dJbXBsKG1lc3Nh
Z2UsICJGYXRhbCIpOw0KCX0NCgkNCglwcml2YXRlIHN0YXRpYyB2b2lkIGxvZ0ltcGwoU3RyaW5n
IG1lc3NhZ2UsIFN0cmluZyBsZXZlbCkgew0KCQlJRGF0YSBpbnB1dCA9IElEYXRhRmFjdG9yeS5j
cmVhdGUoKTsNCgkJSURhdGFNYXAgaW5wdXRNYXAgPSBuZXcgSURhdGFNYXAoaW5wdXQpOw0KCQlp
bnB1dE1hcC5wdXQoIm1lc3NhZ2UiLCBtZXNzYWdlKTsNCgkJaW5wdXRNYXAucHV0KCJmdW5jdGlv
biIsIFdYX1JFU0lMSUVOQ0VfRVJST1IpOw0KCQlpbnB1dE1hcC5wdXQoImxldmVsIiwgbGV2ZWwp
Ow0KCQkNCgkJdHJ5IHsNCgkJCVNlcnZpY2UuZG9JbnZva2UoTE9HX1NWQ19QQVRILCAibG9nIiwg
aW5wdXQpOw0KCQl9IA0KCQljYXRjaCAoRXhjZXB0aW9uIGUpIHsNCgkJfQ0KCX0NCgkNCgkvLyAq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tWE1MIE5PREUgTkFNRSBERUZJTklU
SU9OUy0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCglwcml2YXRlIHN0YXRp
YyBmaW5hbCBTdHJpbmcgRUhEX05PREVfRE9DX1JPT1RfSUQgPSAiZXhjZXB0aW9uSGFuZGxpbmci
Ow0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfTk9ERV9HTE9CQUxfRVJST1JfVFlQ
RV9JRCA9ICJnbG9iYWxFeGNlcHRpb24iOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBF
SERfTk9ERV9FUlJPUl9MT0NBVElPTl9JRCA9ICJsb2NhdGlvbiI7DQoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3RyaW5nIEVIRF9OT0RFX0VSUk9SX1RZUEVfSUQgPSAiZXhjZXB0aW9uIjsNCg0KCS8v
ICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioNCgkvLyAtLS0tLS0tLS0tLS0tLS0tLS0tWE1MIE5PREUgQVRUUklCVVRFIERF
RklOSVRJT05TLS0tLS0tLS0tLS0tLS0tLS0tDQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCXByaXZhdGUgc3Rh
dGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0VSUk9SX1RZUEVfSUQgPSAidHlwZSI7DQoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfRVJST1JfQ0FMTEVSX1RZ
UEVfSUQgPSAiY2FsbGVyVHlwZSI7CQkNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhE
X0FUVFJJQlVURV9FUlJPUl9NRVNTQUdFX0NPTlRBSU5TID0gImVycm9yTWVzc2FnZUNvbnRhaW5z
IjsJCQ0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0VSUk9SX01F
U1NBR0VfUkVHRVhfSUQgPSAiZXJyb3JNZXNzYWdlUmVnZXgiOwkJDQoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfTE9DQVRJT05fTkFNRV9JRCA9ICJuYW1lIjsNCglw
cml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9FUlJPUl9UT19CRV9USFJP
V05fSUQgPSAiZXJyb3JUb0JlVGhyb3duIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcg
RUhEX0FUVFJJQlVURV9FUlJPUl9IQU5ETElOR19JRF9JRCA9ICJleGNlcHRpb25IYW5kbGluZ0lk
IjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9IQU5ETElORz0g
ImhhbmRsaW5nIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9N
QVhfUkVUUllfQVRURU1QVFMgPSAibWF4UmV0cnlBdHRlbXB0cyI7DQoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfUkVUUllfQ09VTlQgPSAicmV0cnlDb3VudCI7DQoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9QUklOVF9CVVNJTkVTU19PQkpFQ1RfSUQg
PSAicHJpbnRCdXNpbmVzc09iamVjdCI7DQoNCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0t
LS0tLS0tLS0tLS0tWE1MIE5PREUgVkFMVUUgREVGSU5JVElPTlMtLS0tLS0tLS0tLS0tLS0tLS0t
LQ0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX1ZBTFVF
X0dFTkVSSUNfRVJST1JfVFlQRV9JRCA9ICJhbGwiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0
cmluZyBFSERfVkFMVUVfR0xPQkFMX0VSUk9SX0hBTkRMSU5HX0lEID0gImdsb2JhbCI7DQoNCgkv
LyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tSU5QVVQgRVJST1IgRklFTEQgSUQg
REVGSU5JVElPTlMtLS0tLS0tLS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCglwcml2YXRlIHN0
YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfSU5GT19JRCA9ICJleGNlcHRpb25JbmZvIjsNCglwcml2
YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVhDTFVERV9TRVJWSUNFID0gIkBXeFJlc2lsaWVuY2Uu
ZXJyb3JIYW5kbGluZy5leGNsdWRlU2VydmljZUZyb21FcnJvckhhbmRsaW5nQCI7DQoJDQoJcHJp
dmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fRVJST1IgPSAiZXJyb3IiOw0KCXBy
aXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0VSUk9SX1RZUEUgPSAiZXJyb3JU
eXBlIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfSU5GT19DQUxMX1NUQUNL
X1NFUlZJQ0UgPSAic2VydmljZSI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9S
X0lORk9fQ0FMTF9TVEFDS19GTE9XX1NURVAgPSAiZmxvd1N0ZXAiOw0KCXByaXZhdGUgc3RhdGlj
IGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0NBTExfU1RBQ0sgPSAiY2FsbFN0YWNrIjsNCglwcml2
YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfSU5GT19FUlJPUl9EVU1QID0gImVycm9yRHVt
cCI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fVElNRSA9ICJ0aW1l
IjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfSU5GT19ORVNURURfRVJST1Jf
SUQgPSAibmVzdGVkRXJyb3JJbmZvIjsNCg0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBH
RU5FUklDX1ZBTFVFX01BUF9JRCA9ICJnZW5lcmljVmFsdWVNYXAiOw0KCXByaXZhdGUgc3RhdGlj
IGZpbmFsIFN0cmluZyBHRU5FUklDX0VSUk9SX01FU1NBR0VfSUQgPSAiZ2VuZXJpY0Vycm9yTWVz
c2FnZSI7DQoNCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS1PVVRQVVQgSEFORExF
RCBFUlJPUiBGSUVMRCBJRCBERUZJTklUSU9OUy0tLS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioN
Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0lEID0gImhh
bmRsZWRFcnJvckluZm8iOw0KCQ0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVE
X0VSUk9SX0lORk9fUk9PVF9JRCA9ICJ0b3BTZXJ2aWNlRXJyb3IiOw0KCXByaXZhdGUgc3RhdGlj
IGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fSEFORExFRF9JRCA9ICJoYW5kbGVkU2Vy
dmljZUVycm9yIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9J
TkZPX0FQUExJQ0FUSU9OX1NFUlZJQ0VfSUQgPSAiYXBwbGljYXRpb25TZXJ2aWNlRXJyb3IiOw0K
CXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fT1JJR0lOX0lE
ID0gInJvb3RTZXJ2aWNlRXJyb3IiOw0KDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhB
TkRMRURfRVJST1JfSU5GT19IQU5ETElOR19MT0NBVElPTl9JRCA9ICJoYW5kbGluZ0xvY2F0aW9u
IjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0hBTkRM
SU5HX1RZUEVfSUQgPSAiaGFuZGxpbmdUeXBlIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJp
bmcgSEFORExFRF9FUlJPUl9JTkZPX0RFUFRIX0lEID0gImVycm9yRGVwdGgiOw0KCXByaXZhdGUg
c3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fRVJST1JfQ09ERSA9ICJlcnJv
ckNvZGUiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lORk9f
Q0FMTF9TVEFDSyA9ICJjYWxsU3RhY2siOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBI
QU5ETEVEX0VSUk9SX0lORk9fRVJST1JfRFVNUCA9ICJlcnJvckR1bXAiOw0KCXByaXZhdGUgc3Rh
dGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fVElNRSA9ICJ0aW1lIjsNCglwcml2
YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX1BJUEVMSU5FID0gInBp
cGVsaW5lIjsNCg0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9NU0dfSUQgPSAi
ZXJyb3JNZXNzYWdlIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgQ09NUEFDVF9FUlJP
Ul9MT0NBVElPTl9JRCA9ICJlcnJvckxvY2F0aW9uIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBT
dHJpbmcgQ09NUEFDVF9FUlJPUl9GTE9XX1NURVAgPSAiZXJyb3JGbG93U3RlcCI7DQoJcHJpdmF0
ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX1RZUEVfSUQgPSAiZXJyb3JUeXBlIjsNCg0KCS8v
ICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioNCgkvLyAtLS0tLS0tLS0tLS0tLS0tLS0tR0VORVJJQyBET0MgRklFTEQgSUQg
REVGSU5JVElPTlMtLS0tLS0tLS0tLS0tLS0tDQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKg0KCXByaXZhdGUgc3Rh
dGljIGZpbmFsIFN0cmluZyBCVVNJTkVTU19ET0NfSUQgPSAiYnVzaW5lc3NPYmplY3QiOw0KCXBy
aXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBQUklOVF9CVVNJTkVTU19PQkpFQ1RfSUQgPSAicHJp
bnRCdXNpbmVzc09iamVjdCI7DQoNCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS0t
LS0tLS1FWENFUFRJT04gSEFORExJTkcgREVGSU5JVElPTi0tLS0tLS0tLS0tLS0tLS0tLQ0KCS8v
ICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgTUVUQURBVEFfSUQgPSAi
bWV0YURhdGEiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBVSURfSUQgPSAidXVpZCI7
DQoNCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqDQoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1FWENFUFRJT04gSEFO
RExJTkcgREVGSU5JVElPTi0tLS0tLS0tLS0tLS0tLS0tLQ0KCS8vICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCglwcml2
YXRlIHN0YXRpYyBEb2N1bWVudCBfZXhjZXB0aW9uSGFuZGxpbmc7DQoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgT2JqZWN0IGV4Y2VwdGlvbkhhbmRsaW5nTG9jayA9IG5ldyBPYmplY3QoKTsNCglwcml2
YXRlIHN0YXRpYyBFeGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyIF9leGNlcHRpb25IYW5kbGluZ0xp
c3RlbmVyOw0KCXByaXZhdGUgc3RhdGljIENhbGxlclR5cGVTdXBwbGllciBERUZBVUxUX0NBTExF
Ul9UWVBFX1NVUFBMSUVSID0gbmV3IENhbGxlclR5cGVTdXBwbGllcigpIHsNCgkJQE92ZXJyaWRl
DQoJCXB1YmxpYyBTdHJpbmcgZ2V0KCkgew0KCQkJcmV0dXJuIGdldENhbGxlclR5cGVCeUNhbGxp
bmdTZXJ2aWNlKCk7DQoJCX0NCgl9Ow0KCXByaXZhdGUgc3RhdGljIENhbGxlclR5cGVTdXBwbGll
ciBjYWxsZXJUeXBlU3VwcGxpZXIgPSBudWxsOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIE9iamVj
dCBjYWxsZXJUeXBlU3VwcGxpZXJMb2NrID0gbmV3IE9iamVjdCgpOw0KCXByaXZhdGUgc3RhdGlj
IGZpbmFsIE9iamVjdCBleGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyTG9jayA9IG5ldyBPYmplY3Qo
KTsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBPYmplY3QgY3JlYXRlU3VtbWFyaXplZEV4Y2VwdGlv
bkhhbmRsaW5nTG9jayA9IG5ldyBPYmplY3QoKTsNCgkvLyAqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqDQoJLy8gLS0tLS0t
LS0tLS0tLS0tLS0tLS1JTlBVVCBHRVQgVkFMVUUgREVGSU5JVElPTi0tLS0tLS0tLS0tLS0tLS0t
LS0tLQ0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgTUFYX1JF
VFJZX0FUVEVNUFRTX0JFRk9SRV9DQU5DRUxfUkVUUlkgPSAibWF4UmV0cnlBdHRlbXB0c0JlZm9y
ZUNhbmNlbFJldHJ5IjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgQlJFQUtfUkVUUllf
TE9PUCA9ICJicmVhay5yZXRyeS5sb29wLmZvci4iOw0KCS8vICoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioNCgkvLyAtLS0t
LS0tLS0tLS0tLS0tLS0tLUVSUk9SIFZBTFVFIERFRklOSVRJT04tLS0tLS0tLS0tLS0tLS0tLS0t
LS0NCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqDQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX1RS
QU5TSUVOVCA9ICJUUkFOU0lFTlQiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJP
Ul9GQVRBTCA9ICJGQVRBTCI7DQoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX05P
TkUgPSAiTk9ORSI7CQ0KCQ0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBTVU1NQVJJWkVE
X0VYQ0VQVElPTl9IQU5ETElOR19GSUxFID0gIkV4Y2VwdGlvbkhhbmRsaW5nU3VtbWFyaXplZC54
bWwiOw0KCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFWENFUFRJT05fSEFORExJTkdfWFNE
X0ZJTEUgPSAiRXhjZXB0aW9uSGFuZGxpbmcueHNkIjsNCglwcml2YXRlIHN0YXRpYyBmaW5hbCBT
dHJpbmcgV1hfUkVTSUxJRU5DRSA9ICJXeFJlc2lsaWVuY2UiOw0KCXByaXZhdGUgc3RhdGljIGZp
bmFsIFN0cmluZyBXWF9SRVNJTElFTkNFX0VSUk9SID0gIld4UmVzaWxpZW5jZS5FcnJvciI7DQoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0hBTkRMSU5HX1hNTF9GSUxFID0gIkV4
Y2VwdGlvbkhhbmRsaW5nLnhtbCI7DQoNCg0KCQ0KCQ0KCQ0KCQ0KCQ0KCQ0KCQ0K</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>com.softwareag.util.IDataMap</value>
    <value>com.wm.app.audit.IAuditRuntime</value>
    <value>wx.resilience.impl.ErrorInfo</value>
    <value>wx.resilience.impl.SummarizedExceptionHandlingHandler</value>
    <value>wx.resilience.impl.SummarizedExceptionHandlingHandler.Creator</value>
    <value>wx.resilience.impl.Exceptions</value>
    <value>wx.resilience.impl.Paths</value>
    <value>com.wm.lang.ns.NSName</value>
    <value>java.io.File</value>
    <value>java.io.IOException</value>
    <value>java.util.*</value>
    <value>javax.xml.transform.Source</value>
    <value>javax.xml.transform.stream.StreamSource</value>
    <value>javax.xml.validation.Schema</value>
    <value>javax.xml.validation.SchemaFactory</value>
    <value>javax.xml.validation.Validator</value>
    <value>org.jdom.Document</value>
    <value>org.jdom.Element</value>
    <value>org.jdom.JDOMException</value>
    <value>org.jdom.input.SAXBuilder</value>
    <value>org.jdom.xpath.XPath</value>
    <value>org.xml.sax.SAXException</value>
    <value>com.wm.app.b2b.server.*</value>
    <value>java.lang.reflect.UndeclaredThrowableException</value>
    <value>java.net.URL</value>
    <value>java.nio.file.Path</value>
    <value>com.wm.lang.ns.NSService</value>
  </array>
</Values>
