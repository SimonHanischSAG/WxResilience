<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">QEZ1bmN0aW9uYWxJbnRlcmZhY2UKcHVibGljIHN0YXRpYyBpbnRlcmZhY2UgRXhjZXB0aW9uSGFu
ZGxpbmdMaXN0ZW5lciB7CglwdWJsaWMgdm9pZCBhY2NlcHQoU3RyaW5nIHBTZXJ2aWNlTmFtZSwg
SURhdGEgcFBpcGVsaW5lKTsKfQoKQEZ1bmN0aW9uYWxJbnRlcmZhY2UKcHVibGljIHN0YXRpYyBp
bnRlcmZhY2UgQ2FsbGVyVHlwZVN1cHBsaWVyIHsKCXB1YmxpYyBTdHJpbmcgZ2V0KCk7Cn0KCnBy
aXZhdGUgc3RhdGljIFBhdGggY3JlYXRlU3VtbWFyaXplZEV4Y2VwdGlvbkhhbmRsaW5nKCkgdGhy
b3dzIFNlcnZpY2VFeGNlcHRpb24gewoJc3luY2hyb25pemVkKGNyZWF0ZVN1bW1hcml6ZWRFeGNl
cHRpb25IYW5kbGluZ0xvY2spIHsKCQlyZXR1cm4gY3JlYXRlU3VtbWFyaXplZEV4Y2VwdGlvbkhh
bmRsaW5nKFNVTU1BUklaRURfRVhDRVBUSU9OX0hBTkRMSU5HX0ZJTEUpOwoJfQp9CnByaXZhdGUg
c3RhdGljIFBhdGggY3JlYXRlU3VtbWFyaXplZEV4Y2VwdGlvbkhhbmRsaW5nKFN0cmluZyBwRmls
ZU5hbWUpCgkJdGhyb3dzIFNlcnZpY2VFeGNlcHRpb24gewoJRmlsZSBJU0RpciA9IFNlcnZlckFQ
SS5nZXRTZXJ2ZXJDb25maWdEaXIoKS5nZXRQYXJlbnRGaWxlKCk7CglGaWxlIElTUGFja2FnZXMg
PSBuZXcgamF2YS5pby5GaWxlKElTRGlyLCAicGFja2FnZXMiKTsKCWZpbmFsIFBhdGggY29uZmln
RGlyID0gU2VydmVyQVBJLmdldFBhY2thZ2VDb25maWdEaXIoV1hfUkVTSUxJRU5DRSkudG9QYXRo
KCk7CglmaW5hbCBQYXRoIG91dHB1dEZpbGUgPSBjb25maWdEaXIucmVzb2x2ZShwRmlsZU5hbWUp
OwoJUGF0aHMuYXNzZXJ0UGFyZW50RGlyRXhpc3RzKG91dHB1dEZpbGUpOwoKCXRyeSB7CgkJdHJ5
IChDcmVhdG9yIGNyZWF0b3IgPSBTdW1tYXJpemVkRXhjZXB0aW9uSGFuZGxpbmdIYW5kbGVyLm5l
d0NyZWF0b3Iob3V0cHV0RmlsZSkpIHsKCQkJZm9yIChGaWxlIHBhY2thZ2VEaXIgOiBJU1BhY2th
Z2VzLmxpc3RGaWxlcygpKSB7CgkJCQlpZiAocGFja2FnZURpci5pc0RpcmVjdG9yeSgpKSB7CgkJ
CQkJZmluYWwgU3RyaW5nIHBhY2thZ2VOYW1lID0gcGFja2FnZURpci5nZXROYW1lKCk7CgkJCQkJ
aWYgKHBhY2thZ2VOYW1lLnN0YXJ0c1dpdGgoIldtIikpIHsKCQkJCQkJY29udGludWU7CgkJCQkJ
fQoJCQkJCWZpbmFsIEZpbGUgcGFja2FnZUNmZ0RpciA9IG5ldyBGaWxlKHBhY2thZ2VEaXIsICJj
b25maWciKTsKCQkJCQlpZiAocGFja2FnZUNmZ0Rpci5pc0RpcmVjdG9yeSgpKSB7CgkJCQkJCWZp
bmFsIEZpbGUgcGFja2FnZUVoZEZpbGUgPSBuZXcgRmlsZShwYWNrYWdlQ2ZnRGlyLCBFUlJPUl9I
QU5ETElOR19YTUxfRklMRSk7CgkJCQkJCWlmIChwYWNrYWdlRWhkRmlsZS5pc0ZpbGUoKSkgewoJ
CQkJCQkJY3JlYXRvci5wYXJzZShwYWNrYWdlRWhkRmlsZSwgcGFja2FnZU5hbWUpOwoJCQkJCQl9
CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoJCXZhbGlkYXRlWE1MKCk7Cgl9IGNhdGNoIChFeGNlcHRp
b24gZSkgewoJCWxvZ0Vycm9yKCJFcnJvciBkdXJpbmcgcGFyc2luZyBvZiBzdW1tYXJpemVkRXhj
ZXB0aW9uSGFuZGxpbmdEZWZpbml0aW9uOiAiICsgZS5nZXRNZXNzYWdlKCkpOwoJCXRocm93IEV4
Y2VwdGlvbnMuc2hvdyhlLCBTZXJ2aWNlRXhjZXB0aW9uLmNsYXNzKTsKCX0KCXJldHVybiBvdXRw
dXRGaWxlOwp9Cgpwcml2YXRlIHN0YXRpYyBmaW5hbCBFeGNlcHRpb25IYW5kbGluZ0xpc3RlbmVy
IERFRkFVTFRfRVJST1JfSEFORExFUiA9IG5ldyBFeGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyKCkg
ewoJcHVibGljIHZvaWQgYWNjZXB0KFN0cmluZyBzLCBJRGF0YSBkKSB7CgkJbG9nRGVidWcoIkRl
ZmF1bHRFcnJvckhhbmRsZXI6IC0tPiAiICsgcyk7CgkJdHJ5IHsKCQkJU2VydmljZS5kb0ludm9r
ZShOU05hbWUuY3JlYXRlKHMpLCBkKTsKCQl9IGNhdGNoIChFeGNlcHRpb24gZSkgewoJCQlsb2dE
ZWJ1ZygiRGVmYXVsdEVycm9ySGFuZGxlcjogIiArIGUuZ2V0Q2xhc3MoKS5nZXROYW1lKCkgKyAi
LCAiICsgZS5nZXRNZXNzYWdlKCkpOwoJCQl0aHJvdyBuZXcgVW5kZWNsYXJlZFRocm93YWJsZUV4
Y2VwdGlvbihlKTsKCQl9CgkJbG9nRGVidWcoIkRlZmF1bHRFcnJvckhhbmRsZXI6IDwtLSIpOwoJ
fQp9Owpwcml2YXRlIHN0YXRpYyBFeGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyIGdldEVycm9ySGFu
ZGxlcigpIHsKCXN5bmNocm9uaXplZCAoZXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lckxvY2spIHsK
CQlpZiAoX2V4Y2VwdGlvbkhhbmRsaW5nTGlzdGVuZXIgPT0gbnVsbCkgewoJCQlyZXR1cm4gREVG
QVVMVF9FUlJPUl9IQU5ETEVSOwoJCX0gZWxzZSB7CgkJCXJldHVybiBfZXhjZXB0aW9uSGFuZGxp
bmdMaXN0ZW5lcjsKCQl9Cgl9Cn0KcHVibGljIHN0YXRpYyB2b2lkIHNldEVycm9ySGFuZGxlcihF
eGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyIHBFcnJvckhhbmRsaW5nTGlzdGVuZXIpIHsKCXN5bmNo
cm9uaXplZCAoZXhjZXB0aW9uSGFuZGxpbmdMaXN0ZW5lckxvY2spIHsKCQlfZXhjZXB0aW9uSGFu
ZGxpbmdMaXN0ZW5lciA9IHBFcnJvckhhbmRsaW5nTGlzdGVuZXI7Cgl9Cn0KcHJpdmF0ZSBzdGF0
aWMgdm9pZCBpbnZva2VFcnJvckhhbmRsZXIoSURhdGEgcEhhbmRsaW5nU2VydmljZUlucHV0LAoJ
CWZpbmFsIFN0cmluZyBwU2VydmljZU5hbWUpIHRocm93cyBFeGNlcHRpb24gewoJbG9nRGVidWco
Imludm9rZUVycm9ySGFuZGxlcjogLS0+ICIpOwoJZmluYWwgRXhjZXB0aW9uSGFuZGxpbmdMaXN0
ZW5lciBlaGwgPSBnZXRFcnJvckhhbmRsZXIoKTsKCWxvZ0RlYnVnKCJpbnZva2VFcnJvckhhbmRs
ZXI6IGVoPSIgKyBlaGwpOwoJZWhsLmFjY2VwdChwU2VydmljZU5hbWUsIHBIYW5kbGluZ1NlcnZp
Y2VJbnB1dCk7Cglsb2dEZWJ1ZygiaW52b2tlRXJyb3JIYW5kbGVyOiA8LS0iKTsKCgkvLyAtLS0g
PDxJUy1FTkQ+PiAtLS0KfQoKcHJpdmF0ZSBzdGF0aWMgRG9jdW1lbnQgZ2V0ZXJyb3JIYW5kbGlu
Z3MoKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlvbiB7CglzeW5jaHJvbml6ZWQoZXhjZXB0aW9uSGFu
ZGxpbmdMb2NrKSB7CgkJaWYgKF9leGNlcHRpb25IYW5kbGluZyAhPSBudWxsKSB7CgkJCXJldHVy
biBfZXhjZXB0aW9uSGFuZGxpbmc7CgkJfQoJfQoJaW5pdGlhbGl6ZUV4Y2VwdGlvbkhhbmRsaW5n
cyhudWxsKTsKCXN5bmNocm9uaXplZCAoZXhjZXB0aW9uSGFuZGxpbmdMb2NrKSB7CgkJaWYgKF9l
eGNlcHRpb25IYW5kbGluZyA9PSBudWxsKSB7CgkJCXRocm93IG5ldyBJbGxlZ2FsU3RhdGVFeGNl
cHRpb24oIlVuYWJsZSB0byBpbml0aWFsaXplIGVycm9ySGFuZGxpbmcuIERpZCB5b3UgYXNzZW1i
bGUgaXQ/Iik7CgkJfSBlbHNlIHsKCQkJcmV0dXJuIF9leGNlcHRpb25IYW5kbGluZzsKCQl9Cgl9
Cn0KCnByaXZhdGUgc3RhdGljIFN0cmluZyBnZXRDYWxsZXJUeXBlKCkgewoJQ2FsbGVyVHlwZVN1
cHBsaWVyIGN0czsgCglzeW5jaHJvbml6ZWQgKGNhbGxlclR5cGVTdXBwbGllckxvY2spIHsKCQlj
dHMgPSBjYWxsZXJUeXBlU3VwcGxpZXI7Cgl9CglpZiAoY3RzID09IG51bGwpIHsKCQljdHMgPSBE
RUZBVUxUX0NBTExFUl9UWVBFX1NVUFBMSUVSOwoJfQoJcmV0dXJuIGN0cy5nZXQoKTsKfQoKcHVi
bGljIHN0YXRpYyB2b2lkIHNldENhbGxlclR5cGVTdXBwbGllcihDYWxsZXJUeXBlU3VwcGxpZXIg
cFN1cHBsaWVyKSB7CglzeW5jaHJvbml6ZWQgKGNhbGxlclR5cGVTdXBwbGllckxvY2spIHsKCQlj
YWxsZXJUeXBlU3VwcGxpZXIgPSBwU3VwcGxpZXI7Cgl9Cn0KCnByaXZhdGUgc3RhdGljIFN0cmlu
ZyBnZXRDYWxsZXJUeXBlQnlDYWxsaW5nU2VydmljZSgpIHsKCUlEYXRhIGlucHV0ID0gbnVsbDsK
CVN0cmluZyB0eXBlID0gIiI7CgkvLyBvdXRwdXQKCUlEYXRhIG91dHB1dCA9IElEYXRhRmFjdG9y
eS5jcmVhdGUoKTsKCXRyeSB7CgkJb3V0cHV0ID0gU2VydmljZS5kb0ludm9rZSggInd4LnJlc2ls
aWVuY2UuaW1wbC5jYWxsZXIiLCAiZ2V0Q2FsbGVyIiwgaW5wdXQgKTsKCQlJRGF0YU1hcCBvdXRw
dXRNYXAgPSBuZXcgSURhdGFNYXAob3V0cHV0KTsKCQlJRGF0YU1hcCBjYWxsZXJNYXAgPSBuZXcg
SURhdGFNYXAob3V0cHV0TWFwLmdldEFzSURhdGEoImNhbGxlciIpKTsKCQlyZXR1cm4gY2FsbGVy
TWFwLmdldEFzU3RyaW5nKCJ0eXBlIik7Cgl9IGNhdGNoIChFeGNlcHRpb24gZSkgewoJCXJldHVy
biB0eXBlOwoJfQkKfQoKCglwcml2YXRlIHN0YXRpYyBTdHJpbmcgZ2V0Q2FsbFN0YWNrQXNKU09O
U3RyaW5nKEFycmF5TGlzdDxJRGF0YUN1cnNvcj4gZXJyb3JJbmZvSGllcmFjaHkpIHsKCgkJSURh
dGFbXSBjYWxsU3RhY2sgPSBJRGF0YVV0aWwuZ2V0SURhdGFBcnJheShlcnJvckluZm9IaWVyYWNo
eS5nZXQoMCksIEVSUk9SX0lORk9fQ0FMTF9TVEFDSyk7CgkJCgkJU3RyaW5nIGpzb25TdHJpbmcg
PSAiIjsKCQkKCQlpZiAoY2FsbFN0YWNrICE9IG51bGwpIHsKCQkJLy8gaW5wdXQKCQkJSURhdGEg
aW5wdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CgkJCUlEYXRhQ3Vyc29yIGlucHV0Q3Vyc29y
ID0gaW5wdXQuZ2V0Q3Vyc29yKCk7CgoJCQkvLyBkb2N1bWVudAoJCQlJRGF0YSBkb2N1bWVudCA9
IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsKCQkJSURhdGFDdXJzb3IgZG9jdW1lbnRDdXJzb3IgPSBk
b2N1bWVudC5nZXRDdXJzb3IoKTsKCQkJSURhdGFVdGlsLnB1dChkb2N1bWVudEN1cnNvciwgImNh
bGxTdGFjayIsIGNhbGxTdGFjayk7CgkJCUlEYXRhVXRpbC5wdXQoaW5wdXRDdXJzb3IsICJkb2N1
bWVudCIsIGRvY3VtZW50KTsKCQkJSURhdGFVdGlsLnB1dChpbnB1dEN1cnNvciwgInByZXR0eVBy
aW50IiwgImZhbHNlIik7CgkJCWlucHV0Q3Vyc29yLmRlc3Ryb3koKTsKCgkJCS8vIG91dHB1dAoJ
CQlJRGF0YSBvdXRwdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CgkJCXRyeSB7CgkJCQlvdXRw
dXQgPSBTZXJ2aWNlLmRvSW52b2tlKCJwdWIuanNvbiIsICJkb2N1bWVudFRvSlNPTlN0cmluZyIs
IGlucHV0KTsKCQkJCUlEYXRhQ3Vyc29yIG91dHB1dEN1cnNvciA9IG91dHB1dC5nZXRDdXJzb3Io
KTsKCQkJCWpzb25TdHJpbmcgPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKG91dHB1dEN1cnNvciwgImpz
b25TdHJpbmciKTsKCQkJCW91dHB1dEN1cnNvci5kZXN0cm95KCk7CgkJCX0gY2F0Y2ggKEV4Y2Vw
dGlvbiBlKSB7CgkJCQkvLyBJdCBpcyBwb3NzaWJsZSwgdGhhdCB0aGlzIHNlcnZpY2UgZG9lcyBu
b3QgZXhpc3RzIChXTTguMiBlbnZpcm9ubWVudHMvc3RvcmVzKS4KCQkJCS8vIFRyeSBhZ2FpbiB3
aXRoIFNlcnZpY2UgZnJvbSBXbUpTT04gcGFja2FnZToKCQkJCS8vIFRoaXMgYmxvY2sgY2FuIGJl
IGRlbGV0ZWQsIGlmIGV2ZXJ5IGVudmlyb25tZW50IGlzIG9uIFdNOS4wIQoJCQkJdHJ5IHsKCQkJ
CQlvdXRwdXQgPSBTZXJ2aWNlLmRvSW52b2tlKCJwdWIuanNvbiIsICJkb2N1bWVudFRvSlNPTiIs
IGlucHV0KTsKCQkJCQlJRGF0YUN1cnNvciBvdXRwdXRDdXJzb3IgPSBvdXRwdXQuZ2V0Q3Vyc29y
KCk7CgkJCQkJanNvblN0cmluZyA9IElEYXRhVXRpbC5nZXRTdHJpbmcob3V0cHV0Q3Vyc29yLCAi
anNvbiIpOwoJCQkJCW91dHB1dEN1cnNvci5kZXN0cm95KCk7CgkJCQl9IGNhdGNoIChFeGNlcHRp
b24gaW5uZXJFeCkgewoJCQkJfQoJCQl9CgkJfQoJCQoJCXJldHVybiBqc29uU3RyaW5nOwoJfQoJ
Cglwcml2YXRlIHN0YXRpYyBIYXNoTWFwPFN0cmluZywgU3RyaW5nPiBjcmVhdGVHZW5lcmljVmFs
dWVNYXAoRXhjZXB0aW9uSGFuZGxpbmdJbmZvIGhhbmRsaW5nLCBib29sZWFuIGJyZWFrUmV0cnlM
b29wKSB7CgkJSGFzaE1hcDxTdHJpbmcsIFN0cmluZz4gZ2VuZXJpY1ZhbHVlTWFwID0gbmV3IEhh
c2hNYXA8U3RyaW5nLCBTdHJpbmc+KCk7CgkJLy8gZXZhbHVhdGUgZXJyb3JUb0JlVGhyb3duOgoJ
CVN0cmluZyBlcnJvclRvQmVUaHJvd24gPSBoYW5kbGluZy5nZXRFcnJvclRvQmVUaHJvd24oKTsK
CQkKCQlpbnQgcmV0cnlDb3VudCA9IGdldFJldHJ5Q291bnQoKTsKCQlnZW5lcmljVmFsdWVNYXAu
cHV0KEVIRF9BVFRSSUJVVEVfUkVUUllfQ09VTlQsIFN0cmluZy52YWx1ZU9mKHJldHJ5Q291bnQp
KTsKCgkJU3RyaW5nIG1heFJldHJ5QXR0ZW1wdHNTdHJpbmcgPSBoYW5kbGluZy5nZXRNYXhSZXRy
eUF0dGVtcHRzKCk7CgkJSW50ZWdlciBtYXhSZXRyeUF0dGVtcHRzID0gbnVsbDsKCQl0cnkgewoJ
CQltYXhSZXRyeUF0dGVtcHRzID0gSW50ZWdlci52YWx1ZU9mKG1heFJldHJ5QXR0ZW1wdHNTdHJp
bmcpOwoJCX0gY2F0Y2ggKE51bWJlckZvcm1hdEV4Y2VwdGlvbiBuZmUpIHsKCQl9CQkJCQkJCgkJ
CgkJaW50IG1heFJldHJ5QXR0ZW1wdHNCZWZvcmVBYm9ydCA9IDA7CgkJU3RyaW5nIG1heFJldHJ5
QXR0ZW1wdHNCZWZvcmVDYW5jZWxSZXRyeVN0cmluZyA9IGdldFZhbHVlQ29uZigKCQkJCU1BWF9S
RVRSWV9BVFRFTVBUU19CRUZPUkVfQ0FOQ0VMX1JFVFJZLCBXWF9SRVNJTElFTkNFLCAidHJ1ZSIs
CgkJCQkiIiwgIiIsICIiLCAiIik7CQkKCQl0cnkgewoJCQltYXhSZXRyeUF0dGVtcHRzQmVmb3Jl
QWJvcnQgPSBJbnRlZ2VyLnZhbHVlT2YobWF4UmV0cnlBdHRlbXB0c0JlZm9yZUNhbmNlbFJldHJ5
U3RyaW5nKTsKCQl9IGNhdGNoIChOdW1iZXJGb3JtYXRFeGNlcHRpb24gbmZlKSB7fQoKCQkvLyBE
ZXRlcm1pbmUgZXJyb3JUb0JlVGhyb3duIGFuZCBtYXhSZXRyeUF0dGVtcHRzIGFjY29yZGluZyB0
byByZXRyeSBjb25maWd1cmF0aW9uOgoJCWlmIChicmVha1JldHJ5TG9vcCkgewoJCQkvLyBicmVh
ayBlbmRsZXNzIGxvb3AgLS0+IG92ZXJ3cml0ZSB3aXRoIE5PTkUgb3IgRkFUQUwKCQkJZ2VuZXJp
Y1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX0VSUk9SX1RPX0JFX1RIUk9XTl9JRCwgRVJST1Jf
Tk9ORS5lcXVhbHMoZXJyb3JUb0JlVGhyb3duKT9FUlJPUl9OT05FOkVSUk9SX0ZBVEFMKTsKCQkJ
Z2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX01BWF9SRVRSWV9BVFRFTVBUUywgU3Ry
aW5nLnZhbHVlT2YocmV0cnlDb3VudCkpOwoJCX0gZWxzZSBpZiAobWF4UmV0cnlBdHRlbXB0cyAh
PSBudWxsICYmIG1heFJldHJ5QXR0ZW1wdHMgPT0gLTEgJiYgcmV0cnlDb3VudCA8IG1heFJldHJ5
QXR0ZW1wdHNCZWZvcmVBYm9ydCkgewoJCQkvLyBlbmRsZXNzIGxvb3AgLS0+IFRSQU5TSUVOVAoJ
CQlnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVfRVJST1JfVE9fQkVfVEhST1dOX0lE
LCBFUlJPUl9UUkFOU0lFTlQpOwoJCQlnZW5lcmljVmFsdWVNYXAucHV0KEVIRF9BVFRSSUJVVEVf
TUFYX1JFVFJZX0FUVEVNUFRTLCBtYXhSZXRyeUF0dGVtcHRzQmVmb3JlQ2FuY2VsUmV0cnlTdHJp
bmcpOwoJCX0gZWxzZSB7CgkJCS8vIGxlc3MgdGhhbiBtYXhSZXRyeUF0dGVtcHRzIC0tPiBUUkFO
U0lFTlQKCQkJaWYgKG1heFJldHJ5QXR0ZW1wdHMgIT0gbnVsbCAmJiByZXRyeUNvdW50IDwgbWF4
UmV0cnlBdHRlbXB0cykgewoJCQkJZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX0VS
Uk9SX1RPX0JFX1RIUk9XTl9JRCwgRVJST1JfVFJBTlNJRU5UKTsKCQkJCWdlbmVyaWNWYWx1ZU1h
cC5wdXQoRUhEX0FUVFJJQlVURV9NQVhfUkVUUllfQVRURU1QVFMsIG1heFJldHJ5QXR0ZW1wdHNT
dHJpbmcpOwoJCQl9IGVsc2UgewkJCQkJCgkJCQkgaWYgKEVSUk9SX05PTkUuZXF1YWxzKGVycm9y
VG9CZVRocm93bikpIHsKCQkJCQkgZ2VuZXJpY1ZhbHVlTWFwLnB1dChFSERfQVRUUklCVVRFX0VS
Uk9SX1RPX0JFX1RIUk9XTl9JRCwgRVJST1JfTk9ORSk7CgkJCQkgfSBlbHNlIHsKCQkJCQkgLy8g
RmluYWwgYmVoYXZpb3IgZm9yIGFib3J0CgkJCQkJIGdlbmVyaWNWYWx1ZU1hcC5wdXQoRUhEX0FU
VFJJQlVURV9FUlJPUl9UT19CRV9USFJPV05fSUQsIEVSUk9SX0ZBVEFMKTsKCQkJCSB9CgkJCQkg
Ly8gbWF4UmV0cnlBdHRlbXB0cyBpcyByZWFjaGVkIG9yIHdhcyBub3QgZGVmaW5lZCAoLT4gMCkK
CQkJCSBTdHJpbmcgbWF4UmV0cnlBdHRlbXB0c1Jlc3VsdCA9IG1heFJldHJ5QXR0ZW1wdHMgIT0g
bnVsbCA/IG1heFJldHJ5QXR0ZW1wdHNTdHJpbmcgOiAiMCI7CgkJCQkgZ2VuZXJpY1ZhbHVlTWFw
LnB1dChFSERfQVRUUklCVVRFX01BWF9SRVRSWV9BVFRFTVBUUywgbWF4UmV0cnlBdHRlbXB0c1Jl
c3VsdCk7CgkJCX0KCQl9CgkJcmV0dXJuIGdlbmVyaWNWYWx1ZU1hcDsKCX0KCQoJLyoqCgkgKiBG
aWx0ZXJzIHRoZSBlcnJvciBoaWVyYXJjaHkgZm9yIHRoZSBkZWVwZXN0IHNlcnZpY2UgLS0+IHNo
b3dzCgkgKiBpbiB3aGljaCBzZXJ2aWNlIG9mIG91ciBjb2RlIHRoZSBlcnJvciBvY2N1cmVkCgkg
KiAKCSAqIEBwYXJhbSBoaWVyYWNoaWNhbEVycm9ySW5mbwoJICogQHJldHVybiB0aGUgbGV2ZWwg
b2YgdGhlIGRlZXBlc3Qgc2VydmljZSBuYW1lCgkgKi8KCXByaXZhdGUgc3RhdGljIGludCBnZXRE
ZWVwZXN0QXBwbGljYXRpb25TZXJ2aWNlTGV2ZWwoQXJyYXlMaXN0PEVycm9ySW5mbz4gaGllcmFj
aGljYWxFcnJvckluZm8pIHsKCQlTdHJpbmcgc2VydmljZSA9IG51bGw7CgkJZm9yIChpbnQgbGV2
ZWwgPSBoaWVyYWNoaWNhbEVycm9ySW5mby5zaXplKCkgLSAxOyBsZXZlbCA+IDA7IGxldmVsLS0p
IHsKCQkJc2VydmljZSA9IGhpZXJhY2hpY2FsRXJyb3JJbmZvLmdldChsZXZlbCkuZ2V0U2Vydmlj
ZSgpOwoJCQkvLyBjcmVhdGUgb2YgTGlzdCBvZiBGbG93bmFtZXMgdG8gaWdub3JlCgkJCUxpc3Q8
U3RyaW5nPiBpZ25vcmVGbG93cyA9IEFycmF5cy5hc0xpc3QoInd4LnJlc2lsaWVuY2UucHViLnJl
c2lsaWVuY2U6dGhyb3dFcnJvciIsCgkJCQkJIAkJCQkJCQkJInd4LnJlc2lsaWVuY2UucHViLnJl
c2lsaWVuY2U6dGhyb3dFcnJvcklmTmVjZXNzYXJ5IiwgCgkJCQkJCQkJCQkJCQkgInd4LnJlc2ls
aWVuY2UucHViLnJlc2lsaWVuY2U6cG9zdFByb2Nlc3NGb3JUb3BMZXZlbFNlcnZpY2UiKTsKCQkJ
CgkJCQoJCQkKCQkJCgkJCQoJCQlpZiAoc2VydmljZSAhPSBudWxsICYmIAoJCQkJIXNlcnZpY2Uu
c3RhcnRzV2l0aCgicHViLiIpICYmCgkJCQkhc2VydmljZS5zdGFydHNXaXRoKCJ3bS4iKSAmJiAK
CQkJCSFpZ25vcmVGbG93cy5jb250YWlucyhzZXJ2aWNlKQoJCQkpIHsKCQkJCXJldHVybiBsZXZl
bDsKCQkJfQoJCX0KCgkJcmV0dXJuIDA7Cgl9CgoJCgkvKioKCSAqIExvZ3MgbWVzc2FnZSBmcm9t
IGEgY2F0YWxvZy4KCSAqIAoJICogQHBhcmFtIGFGYWNpbGl0eUtleQoJICogICAgICAgICAgICBk
ZWZpbmVzIHRoZSBmYWNpbGl0eSBpbiB0aGUgY2F0YWxvZwoJICogQHBhcmFtIGFNZXNzYWdlS2V5
CgkgKiAgICAgICAgICAgIGNvcnJlc3BvbmRzIHdpdGggdGhlIG1lc3NhZ2Uga2V5IGluIHRoZSBj
YXRhbG9nCgkgKiBAcGFyYW0gYU1lc3NhZ2VQYXJhbXMKCSAqICAgICAgICAgICAgaWYgbWVzc2Fn
ZSBpbiB0aGUgY2F0YWxvZyBoYXMgcGFyYW1ldGVycwoJICogQHRocm93cyBTZXJ2aWNlRXhjZXB0
aW9uCgkgKiAgICAgICAgICAgICB0aHJvd24gaWYgdGhlIGxvZ2dpbmcgZmFpbGVkCgkgKi8KCS8q
cHJpdmF0ZSBzdGF0aWMgdm9pZCBsb2dNZXNzYWdlRnJvbUNhdGFsb2coU3RyaW5nIGFGYWNpbGl0
eUtleSwgU3RyaW5nIGFNZXNzYWdlS2V5LCBTdHJpbmdbXSBhTWVzc2FnZVBhcmFtcykgewoJCS8v
IGlucHV0CgkJSURhdGEgdElucHV0ID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoJCUlEYXRhQ3Vy
c29yIGlucHV0Q3Vyc29yID0gdElucHV0LmdldEN1cnNvcigpOwoJCUlEYXRhVXRpbC5wdXQoaW5w
dXRDdXJzb3IsICJmYWNpbGl0eUtleSIsIGFGYWNpbGl0eUtleSk7CgkJSURhdGFVdGlsLnB1dChp
bnB1dEN1cnNvciwgIm1lc3NhZ2VLZXkiLCBhTWVzc2FnZUtleSk7CgkKCQkvLyBUaGVyZSBhcmUg
c29tZSBtZXNzYWdlIHBhcmFtcyBwcm92aWRlZAoJCWlmIChhTWVzc2FnZVBhcmFtcy5sZW5ndGgg
PiAwKSB7CgkJCUlEYXRhVXRpbC5wdXQoaW5wdXRDdXJzb3IsICJtZXNzYWdlUGFyYW1zIiwgYU1l
c3NhZ2VQYXJhbXMpOwoJCX0KCQlpbnB1dEN1cnNvci5kZXN0cm95KCk7CgkKCQl0cnkgewoJCQlT
ZXJ2aWNlLmRvSW52b2tlKCJ3eC5yZXNpbGllbmNlLmltcGw6IiwgImxvZ01lc3NhZ2VGcm9tQ2F0
YWxvZyIsIHRJbnB1dCk7CgkJfSAKCQljYXRjaCAoRXhjZXB0aW9uIGUpIHsKCQl9Cgl9Ki8KCgkK
CXByaXZhdGUgc3RhdGljIHZvaWQgdmFsaWRhdGVYTUwoKSB0aHJvd3MgU2VydmljZUV4Y2VwdGlv
biB7CgkJbG9nSW5mbygiVmFsaWRhdGluZyB0aGUgc3VtbWFyaXplZCBlcnJvciBoYW5kbGluZyIp
OwoJCUZpbGUgeG1sRmlsZSA9IG5ldyBGaWxlKFNlcnZlckFQSS5nZXRQYWNrYWdlQ29uZmlnRGly
KFdYX1JFU0lMSUVOQ0UpICsgIi8iICsgU1VNTUFSSVpFRF9FWENFUFRJT05fSEFORExJTkdfRklM
RSk7CgkJRmlsZSBzY2hlbWFGaWxlID0gbmV3IEZpbGUoU2VydmVyQVBJLmdldFBhY2thZ2VDb25m
aWdEaXIoV1hfUkVTSUxJRU5DRSkgKyAiLyIgKyBFWENFUFRJT05fSEFORExJTkdfWFNEX0ZJTEUp
OwoJCQoJCXRyeSB7CgkJCS8vIDEuIExvb2t1cCBhIGZhY3RvcnkgZm9yIHRoZSBXM0MgWE1MIFNj
aGVtYSBsYW5ndWFnZQoJCQlTY2hlbWFGYWN0b3J5IGZhY3RvcnkgPSBTY2hlbWFGYWN0b3J5Lm5l
d0luc3RhbmNlKCJodHRwOi8vd3d3LnczLm9yZy8yMDAxL1hNTFNjaGVtYSIpOwoJCQkvLyAyLiBD
b21waWxlIHRoZSBzY2hlbWEuCgkJCS8vIEhlcmUgdGhlIHNjaGVtYSBpcyBsb2FkZWQgZnJvbSBh
IGphdmEuaW8uRmlsZSwgYnV0IHlvdSBjb3VsZCB1c2UKCQkJLy8gYSBqYXZhLm5ldC5VUkwgb3Ig
YSBqYXZheC54bWwudHJhbnNmb3JtLlNvdXJjZSBpbnN0ZWFkLgoJCQlTY2hlbWEgc2NoZW1hID0g
ZmFjdG9yeS5uZXdTY2hlbWEoc2NoZW1hRmlsZSk7CQoJCQkvLyAzLiBHZXQgYSB2YWxpZGF0b3Ig
ZnJvbSB0aGUgc2NoZW1hLgoJCQlWYWxpZGF0b3IgdmFsaWRhdG9yID0gc2NoZW1hLm5ld1ZhbGlk
YXRvcigpOwkKCQkJLy8gNC4gUGFyc2UgdGhlIGRvY3VtZW50IHlvdSB3YW50IHRvIGNoZWNrLgoJ
CQlTb3VyY2Ugc291cmNlID0gbmV3IFN0cmVhbVNvdXJjZSh4bWxGaWxlKTsJCgkJCS8vIDUuIENo
ZWNrIHRoZSBkb2N1bWVudAoJCQl2YWxpZGF0b3IudmFsaWRhdGUoc291cmNlKTsKCQkJbG9nSW5m
byh4bWxGaWxlLmdldE5hbWUoKSArICIgaXMgdmFsaWQiKTsKCQl9IAoJCWNhdGNoIChTQVhFeGNl
cHRpb258SU9FeGNlcHRpb24gZXgpIHsKCQkJU3RyaW5nIG1lc3NhZ2UgPSB4bWxGaWxlLmdldE5h
bWUoKSArICIgaXMgbm90IHZhbGlkIGJlY2F1c2UgXG4iICsgZXguZ2V0TWVzc2FnZSgpOwoJCQlm
aW5hbCBTZXJ2aWNlRXhjZXB0aW9uIHNlID0gbmV3IFNlcnZpY2VFeGNlcHRpb24obWVzc2FnZSk7
CgkJCXNlLmluaXRDYXVzZShleCk7CgkJCXRocm93IHNlOwoJCX0JCgl9CgoJcHJpdmF0ZSBzdGF0
aWMgU3RyaW5nIGdldFZhbHVlQ29uZihTdHJpbmcga2V5LCBTdHJpbmcgd3hDb25maWdQa2dOYW1l
LAoJCQlTdHJpbmcgbm9TZXJ2aWNlRXhjZXB0aW9uLCBTdHJpbmcgc3Vic3RpdHV0ZVZhcmlhYmxl
cywKCQkJU3RyaW5nIGlnbm9yZUdsb2JhbFZhbHVlcywgU3RyaW5nIHNjYW5BbGxDb25maWd1cmF0
aW9ucywKCQkJU3RyaW5nIG5vVmFyaWFibGVJbnRlcnBvbGF0aW9uKSB7CgkJU3RyaW5nIHByb3Bl
cnR5VmFsdWUgPSAiICI7CgkJLy8gaW5wdXQKCQlJRGF0YSBjb25maWdQYXJhbSA9IElEYXRhRmFj
dG9yeS5jcmVhdGUoKTsKCQlJRGF0YUN1cnNvciBjb25maWdQYXJhbUN1cnNvciA9IGNvbmZpZ1Bh
cmFtLmdldEN1cnNvcigpOwoJCUlEYXRhVXRpbC5wdXQoY29uZmlnUGFyYW1DdXJzb3IsICJrZXki
LCBrZXkpOwoJCUlEYXRhVXRpbC5wdXQoY29uZmlnUGFyYW1DdXJzb3IsICJ3eENvbmZpZ1BrZ05h
bWUiLCB3eENvbmZpZ1BrZ05hbWUpOwoJCUlEYXRhVXRpbC5wdXQoY29uZmlnUGFyYW1DdXJzb3Is
ICJub1NlcnZpY2VFeGNlcHRpb24iLAoJCQkJbm9TZXJ2aWNlRXhjZXB0aW9uKTsKCQljb25maWdQ
YXJhbUN1cnNvci5kZXN0cm95KCk7CgkKCQkvLyBvdXRwdXQKCQlJRGF0YSBjb25maWdPdXRwdXQg
PSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CgkJdHJ5IHsKCQkJY29uZmlnT3V0cHV0ID0gU2Vydmlj
ZS5kb0ludm9rZSgid3guY29uZmlnLnB1YiIsICJnZXRWYWx1ZSIsCgkJCQkJY29uZmlnUGFyYW0p
OwoJCX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7CgkJCXJldHVybiBwcm9wZXJ0eVZhbHVlOwoJCX0K
CQlJRGF0YUN1cnNvciBjb25maWdPdXRwdXRDdXJzb3IgPSBjb25maWdPdXRwdXQuZ2V0Q3Vyc29y
KCk7CgkJcHJvcGVydHlWYWx1ZSA9IElEYXRhVXRpbAoJCQkJLmdldFN0cmluZyhjb25maWdPdXRw
dXRDdXJzb3IsICJwcm9wZXJ0eVZhbHVlIik7CgkJY29uZmlnT3V0cHV0Q3Vyc29yLmRlc3Ryb3ko
KTsKCQlsb2dEZWJ1ZygiZ2V0VmFsdWVDb25mIGZvciAiICsga2V5ICsgIiByZXR1cm5zOiAiICsg
cHJvcGVydHlWYWx1ZSk7CgkJcmV0dXJuIHByb3BlcnR5VmFsdWU7Cgl9CgkKCXByaXZhdGUgc3Rh
dGljIGludCBnZXRSZXRyeUNvdW50KCkgewoJCUlEYXRhIGlucHV0ID0gbnVsbDsKCQkvLyBvdXRw
dXQKCQlJRGF0YSBvdXRwdXQgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CgkJdHJ5IHsKCQkJb3V0
cHV0ID0gU2VydmljZS5kb0ludm9rZSgicHViLmZsb3ciLCAiZ2V0UmV0cnlDb3VudCIsIGlucHV0
KTsKCQkJSURhdGFDdXJzb3Igb3V0cHV0Q3Vyc29yID0gb3V0cHV0LmdldEN1cnNvcigpOwoJCQly
ZXR1cm4gSW50ZWdlci5wYXJzZUludChJRGF0YVV0aWwuZ2V0U3RyaW5nKG91dHB1dEN1cnNvciwg
InJldHJ5Q291bnQiKSk7CgkJfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsKCQkJcmV0dXJuIDA7CgkJ
fQoJfQoJCgkvKioKCSAqIEV4dHJhY3RzIGFuIGVycm9yIGhpZXJhcmNoeSBmb3IgYSBnaXZlbiBl
cnJvciBoaWVyYXJjaHkgKG5vcm1hbGx5IG9ubHkKCSAqIGZpbGxlZCBieSBvbmUgKHJvb3QpIGVy
cm9yKS4gVXNlcyB0aGUgY2FsbFN0YWNrIGFuZCB0aGUgZGVlcGVzdCBlcnJvckluZm8gdG8gYnVp
bGQgaGllYXJjaHkuCgkgKiAKCSAqIEBwYXJhbSBwRXJyb3JIaWVyYXJjaHkKCSAqICAgICAgICAg
ICAgLSBhcnJheSBsaXN0IG9mIElEYXRhQ3Vyc29ycyBvbiBwdWIuZXZlbnQ6ZXhjZXB0aW9uSW5m
bwoJICogQHJldHVybiBmdWxsIGFycmF5IGxpc3QgYXJyYXkgbGlzdCBvZiBFcnJvckluZm8gb24K
CSAqICAgICAgICAgcHViLmV2ZW50OmV4Y2VwdGlvbkluZm8sIGNvbnRhaW5pbmcgYWxsIGVycm9y
cyBmcm9tIHJvb3QoMCkgdG8KCSAqICAgICAgICAgb3JpZ2luIChzaXplIG9mIGFycmF5IGxpc3Qp
CgkgKi8KCXByaXZhdGUgc3RhdGljIEFycmF5TGlzdDxFcnJvckluZm8+IGV4dHJhY3RFcnJvckhp
ZXJhcmNoeShBcnJheUxpc3Q8SURhdGFDdXJzb3I+IHBFcnJvckhpZXJhcmNoeSkgewkKCQlpZiAo
cEVycm9ySGllcmFyY2h5ID09IG51bGwpIHsKCQkJcmV0dXJuIG51bGw7CgkJfQoJCQoJCUlEYXRh
Q3Vyc29yIGRlZXBlc3ROZXN0ZWRFcnJvciA9IGdldERlZXBlc3ROZXN0ZWRFcnJvcihwRXJyb3JI
aWVyYXJjaHkpOwoJCQoJCS8vIGdldCBjYWxsU3RhY2sgb2YgZXJyb3I6CgkJSURhdGFbXSBjYWxs
U3RhY2sgPSBJRGF0YVV0aWwuZ2V0SURhdGFBcnJheShwRXJyb3JIaWVyYXJjaHkuZ2V0KDApLCAi
Y2FsbFN0YWNrIik7CgkJQXJyYXlMaXN0PEVycm9ySW5mbz4gZXJyb3JJbmZvTGlzdCA9IG51bGw7
CgkJCgkJaWYgKGNhbGxTdGFjayAhPSBudWxsKSB7CgkJCWVycm9ySW5mb0xpc3QgPSBuZXcgQXJy
YXlMaXN0PEVycm9ySW5mbz4oY2FsbFN0YWNrLmxlbmd0aCk7CgkJCQoJCQkvLyB1c2UgdGhlIGVy
cm9yIGFuZCBlcnJvclR5cGUgb2YgdGhlIGRlZXBlc3QgZXJyb3JJbmZvIHRvIGRldGVybWluZSB0
aGUgZXJyb3IgYW5kIGVycm9yVHlwZSBvZiBlYWNoIGxldmVsOgoJCQlTdHJpbmcgbmVzdGVkRXJy
b3JUeXBlID0gSURhdGFVdGlsLmdldFN0cmluZyhkZWVwZXN0TmVzdGVkRXJyb3IsIEVSUk9SX0lO
Rk9fRVJST1JfVFlQRSk7CgkJCVN0cmluZyBuZXN0ZWRFcnJvciA9IElEYXRhVXRpbC5nZXRTdHJp
bmcoZGVlcGVzdE5lc3RlZEVycm9yLCBFUlJPUl9JTkZPX0VSUk9SKTsKCgkJCS8vIHRoZSBjYWxs
c3RhY2sgaXMgb3JkZXJlZCBpbnZlcnNlIQoJCQlmb3IgKGludCBpID0gY2FsbFN0YWNrLmxlbmd0
aCAtIDEgOyBpID49IDA7IGktLSkgewoJCQkJLy8gdXNlIHRoZSBzZXJ2aWNlIG5hbWVzIG9mIHRo
ZSBjYWxsc3RhY2s6CgkJCQlJRGF0YUN1cnNvciBjYWxsU3RhY2tDdXJzb3IgPSBjYWxsU3RhY2tb
aV0uZ2V0Q3Vyc29yKCk7CgkJCQlTdHJpbmcgc2VydmljZSA9IElEYXRhVXRpbC5nZXRTdHJpbmco
Y2FsbFN0YWNrQ3Vyc29yLCBFUlJPUl9JTkZPX0NBTExfU1RBQ0tfU0VSVklDRSk7CgkJCQlTdHJp
bmcgZmxvd1N0ZXAgPSBJRGF0YVV0aWwuZ2V0U3RyaW5nKGNhbGxTdGFja0N1cnNvciwgRVJST1Jf
SU5GT19DQUxMX1NUQUNLX0ZMT1dfU1RFUCk7CgkJCQlpZiAoZmxvd1N0ZXAgPT0gbnVsbCB8fCBm
bG93U3RlcC5lcXVhbHMoIiIpKSB7CgkJCQkJZmxvd1N0ZXAgPSAibi5hLiI7CgkJCQl9CgkJCQkK
CQkJCWVycm9ySW5mb0xpc3QuYWRkKG5ldyBFcnJvckluZm8obmVzdGVkRXJyb3IsIG5lc3RlZEVy
cm9yVHlwZSwgc2VydmljZSwgZmxvd1N0ZXApKTsKCQkJfQoJCX0KCQlyZXR1cm4gZXJyb3JJbmZv
TGlzdDsKCX0KCQoJLyoqCgkgKiBHZXRzIHRoZSBkZWVwZXN0IGVycm9yIGluIHRoZSBlcnJvciBo
aWVyYXJjaHkKCSAqIAoJICogQHBhcmFtIHBFcnJvckhpZXJhcmNoeQoJICogICAgICAgICAgICAt
IGFycmF5IGxpc3Qgb2YgSURhdGFDdXJzb3JzIG9uIHB1Yi5ldmVudDpleGNlcHRpb25JbmZvCgkg
KiBAcmV0dXJuIGN1cnNvciBvZiB0aGUgZGVlcGVzdCBlcnJvcgoJICovCglwcml2YXRlIHN0YXRp
YyBJRGF0YUN1cnNvciBnZXREZWVwZXN0TmVzdGVkRXJyb3IoQXJyYXlMaXN0PElEYXRhQ3Vyc29y
PiBwRXJyb3JIaWVyYXJjaHkpIHsJCQoJCQoJCUlEYXRhQ3Vyc29yIG5lc3RlZEVycm9yID0gcEVy
cm9ySGllcmFyY2h5LmdldCgwKTsKCQlJRGF0YUN1cnNvciBjdXJyZW50RXJyb3IgPSBudWxsOwoJ
CUlEYXRhIG5lc3RlZEVycm9ySURhdGEgPSBudWxsOwoJCWRvIHsKCQkJY3VycmVudEVycm9yID0g
bmVzdGVkRXJyb3I7CgkJCW5lc3RlZEVycm9ySURhdGEgPSBJRGF0YVV0aWwuZ2V0SURhdGEoY3Vy
cmVudEVycm9yLCBFUlJPUl9JTkZPX05FU1RFRF9FUlJPUl9JRCk7CgkJCWlmIChuZXN0ZWRFcnJv
cklEYXRhICE9IG51bGwpIHsKCQkJCW5lc3RlZEVycm9yID0gbmVzdGVkRXJyb3JJRGF0YS5nZXRD
dXJzb3IoKTsKCQkJfSBlbHNlIHsKCQkJCW5lc3RlZEVycm9yID0gbnVsbDsKCQkJfQoJCX0gd2hp
bGUgKG5lc3RlZEVycm9yICE9IG51bGwpOwoKCQlyZXR1cm4gY3VycmVudEVycm9yOwoKCX0JCgoJ
LypwdWJsaWMgc3RhdGljIGNsYXNzIExvZyB7CgkJcHJpdmF0ZSBzdGF0aWMgZmluYWwgTG9nIElO
U1RBTkNFID0gbmV3IExvZygpOwoJCXByaXZhdGUgc3RhdGljIGZpbmFsIGJvb2xlYW4gbG9nZ2lu
ZyA9IGZhbHNlOwoKCQlwdWJsaWMgc3RhdGljIHZvaWQgaW5pdCgpIHsKCQkJaWYgKGxvZ2dpbmcp
IHsKCQkJCUlOU1RBTkNFLmluaXRXcml0ZXIoKTsKCQkJfQoJCX0KCQlwdWJsaWMgc3RhdGljIHZv
aWQgd3JpdGUoU3RyaW5nIHBNZXNzYWdlKSB7CgkJCWlmIChsb2dnaW5nKSB7CgkJCQlJTlNUQU5D
RS5sb2cocE1lc3NhZ2UpOwoJCQl9CgkJfQoJCXB1YmxpYyBzdGF0aWMgdm9pZCBjbG9zZSgpIHsK
CQkJaWYgKGxvZ2dpbmcpIHsKCQkJCUlOU1RBTkNFLmNsb3NlV3JpdGVyKCk7CgkJCX0KCQl9CgkJ
cHVibGljIHN0YXRpYyBib29sZWFuIGlzTG9nZ2luZygpIHsKCQkJcmV0dXJuIGxvZ2dpbmc7CgkJ
fQoKCQlwcml2YXRlIGJvb2xlYW4gaW5pdGlhbGl6ZWQ7CgkJcHJpdmF0ZSB2b2lkIGluaXRXcml0
ZXIoKSB7CgkJCWluaXRpYWxpemVkID0gdHJ1ZTsKCQl9CgkJcHJpdmF0ZSB2b2lkIGNsb3NlV3Jp
dGVyKCkgewoJCQlpbml0aWFsaXplZCA9IGZhbHNlOwoJCX0KCQlwcml2YXRlIHZvaWQgbG9nKFN0
cmluZyBwTWVzc2FnZSkgewoJCQlpZiAoaW5pdGlhbGl6ZWQpIHsKCQkJCS8vIFRPRE86CgkJCQkv
L0xvZy5sb2dUcmFjZU1lc3NhZ2UoIkVIRiIsIHBNZXNzYWdlKTsKCQkJfQoJCX0KCX0qLwoJcHVi
bGljIHN0YXRpYyBjbGFzcyBFcnJvckhhbmRsaW5nRXhjZXB0aW9uIGV4dGVuZHMgUnVudGltZUV4
Y2VwdGlvbiB7CgkJcHJpdmF0ZSBzdGF0aWMgZmluYWwgbG9uZyBzZXJpYWxWZXJzaW9uVUlEID0g
LTM5NTAxMDA3NDE2MzY0Nzk2ODFMOwoKCQlwdWJsaWMgRXJyb3JIYW5kbGluZ0V4Y2VwdGlvbihT
dHJpbmcgcE1zZywgVGhyb3dhYmxlIHBDYXVzZSkgewoJCQlzdXBlcihwTXNnLCBwQ2F1c2UpOwoJ
CX0KCgkJcHVibGljIEVycm9ySGFuZGxpbmdFeGNlcHRpb24oU3RyaW5nIHBNc2cpIHsKCQkJc3Vw
ZXIocE1zZyk7CgkJfQoKCQlwdWJsaWMgRXJyb3JIYW5kbGluZ0V4Y2VwdGlvbihUaHJvd2FibGUg
cENhdXNlKSB7CgkJCXN1cGVyKHBDYXVzZSk7CgkJfQoJfQoKCXB1YmxpYyBzdGF0aWMgY2xhc3Mg
RXhjZXB0aW9uSGFuZGxpbmdJbmZvIHsKCQkvLyBPbGQgcmVwcmVzZW50YXRpb24gb2YgRXhjZXB0
aW9uSGFuZGxpbmdJbmZvIChkZXByZWNhdGVkKQoJCXByaXZhdGUgZmluYWwgTGlzdDxTdHJpbmc+
IHNlcnZpY2VOYW1lcyA9IG5ldyBBcnJheUxpc3Q8PigpOwoJCXByaXZhdGUgZmluYWwgU3RyaW5n
ICBlcnJvclRvQmVUaHJvd24sIHR5cGUsIGVycm9yQ29kZSwgZXhjZXB0aW9uVHlwZSwgbWF4UmV0
cnlBdHRlbXB0czsKCQlwcml2YXRlIGZpbmFsIGJvb2xlYW4gcHJpbnRCdXNpbmVzc09iamVjdDsK
CQlwdWJsaWMgRXhjZXB0aW9uSGFuZGxpbmdJbmZvKFN0cmluZyBwRXJyb3JUb0JlVGhyb3duLCBT
dHJpbmcgcFR5cGUsIFN0cmluZyBwRXJyb3JDb2RlLAoJCQkJIAkJCQkJIFN0cmluZyBwRXhjZXB0
aW9uVHlwZSwgU3RyaW5nIHBNYXhSZXRyeUF0dGVtcHRzLAoJCQkJIAkJCQkJIGJvb2xlYW4gcFBy
aW50QnVzaW5lc3NPYmplY3QpIHsKCQkJZXJyb3JUb0JlVGhyb3duID0gcEVycm9yVG9CZVRocm93
bjsKCQkJdHlwZSA9IHBUeXBlOwoJCQllcnJvckNvZGUgPSBwRXJyb3JDb2RlOwoJCQlleGNlcHRp
b25UeXBlID0gcEV4Y2VwdGlvblR5cGU7CgkJCW1heFJldHJ5QXR0ZW1wdHMgPSBwTWF4UmV0cnlB
dHRlbXB0czsKCQkJcHJpbnRCdXNpbmVzc09iamVjdCA9IHBQcmludEJ1c2luZXNzT2JqZWN0OwoJ
CX0KCgkJcHVibGljIExpc3Q8U3RyaW5nPiBnZXRIYW5kbGluZ1NlcnZpY2VzKCkgewoJCQlyZXR1
cm4gc2VydmljZU5hbWVzOwoJCX0KCgkJcHVibGljIHZvaWQgYWRkU2VydmljZU5hbWUoU3RyaW5n
IHBTZXJ2aWNlTmFtZSkgewoJCQlzZXJ2aWNlTmFtZXMuYWRkKHBTZXJ2aWNlTmFtZSk7CgkJfQoK
CQlwdWJsaWMgU3RyaW5nIGdldEVycm9yVG9CZVRocm93bigpIHsKCQkJcmV0dXJuIGVycm9yVG9C
ZVRocm93bjsKCQl9CgoJCXB1YmxpYyBTdHJpbmcgZ2V0VHlwZSgpIHsKCQkJcmV0dXJuIHR5cGU7
CgkJfQoKCQlwdWJsaWMgU3RyaW5nIGdldEVycm9yQ29kZSgpIHsKCQkJcmV0dXJuIGVycm9yQ29k
ZTsKCQl9CgoJCXB1YmxpYyBTdHJpbmcgZ2V0RXhjZXB0aW9uVHlwZSgpIHsKCQkJcmV0dXJuIGV4
Y2VwdGlvblR5cGU7CgkJfQoKCQlwdWJsaWMgU3RyaW5nIGdldE1heFJldHJ5QXR0ZW1wdHMoKSB7
CgkJCXJldHVybiBtYXhSZXRyeUF0dGVtcHRzOwoJCX0KCgkJcHVibGljIGJvb2xlYW4gaXNQcmlu
dEJ1c2luZXNzT2JqZWN0KCkgewoJCQlyZXR1cm4gcHJpbnRCdXNpbmVzc09iamVjdDsKCQl9CgoJ
CUBPdmVycmlkZQoJCXB1YmxpYyBTdHJpbmcgdG9TdHJpbmcoKSB7CgkJCWZpbmFsIFN0cmluZ0J1
aWxkZXIgc2IgPSBuZXcgU3RyaW5nQnVpbGRlcigpOwoJCQlzYi5hcHBlbmQoc3VwZXIudG9TdHJp
bmcoKSk7CgkJCXNiLmFwcGVuZCgiOiBlcnJvclRvQmVUaHJvd249ICIpOwoJCQlzYi5hcHBlbmQo
ZXJyb3JUb0JlVGhyb3duKTsKCQkJc2IuYXBwZW5kKCIsIHR5cGU9Iik7CgkJCXNiLmFwcGVuZCh0
eXBlKTsKCQkJc2IuYXBwZW5kKCJlcnJvckNvZGU9Iik7CgkJCXNiLmFwcGVuZChlcnJvckNvZGUp
OwoJCQlzYi5hcHBlbmQoIiwgZXhjZXB0aW9uVHlwZT0iKTsKCQkJc2IuYXBwZW5kKGV4Y2VwdGlv
blR5cGUpOwoJCQlzYi5hcHBlbmQoIiwgbWF4UmV0cnlBdHRlbXB0cz0iKTsKCQkJc2IuYXBwZW5k
KG1heFJldHJ5QXR0ZW1wdHMpOwoJCQlzYi5hcHBlbmQoIiwgcHJpbnRCdXNpbmVzc09iamVjdD0i
KTsKCQkJc2IuYXBwZW5kKHByaW50QnVzaW5lc3NPYmplY3QpOwoJCQlzYi5hcHBlbmQoIiwgc2Vy
dmljZU5hbWVzPSIpOwoJCQkvLyBUT0RPOgoJCQkvL3NiLmFwcGVuZChTdHJpbmdzLmFzU3RyaW5n
KHNlcnZpY2VOYW1lcykpOwoJCQlyZXR1cm4gc2IudG9TdHJpbmcoKTsKCQl9CgkJCgl9CgkKCS8q
KgoJICogRXh0cmFjdCBoYW5kbGluZ3MgZm9yIGFuIGVycm9yIGF0IGEgbG9jYXRpb24gZnJvbSBh
IGdpdmVuIGV4Y2VwdGlvbgoJICogaGFuZGxpbmcgZGVmaW5pdGlvbgoJICogCgkgKiBAcGFyYW0g
cEVycm9ySGFuZGxpbmcKCSAqICAgICAgICAgICAgZGVmaW5pdGlvbiBhcyBET00gZG9jdW1lbnQg
dG8gdXNlIGZvciBleHRyYWN0aW9uCgkgKiBAcGFyYW0gcExvY2F0aW9uWFBhdGgKCSAqICAgICAg
ICAgICAgZXJyb3IgbG9jYXRpb24gYXMgWFBBVEgKCSAqIEBwYXJhbSBwRXhjZXB0aW9uVHlwZQoJ
ICogICAgICAgICAgICBlcnJvciB0eXBlIGFzIFN0cmluZwoJICogQHBhcmFtIGN1cnJlbnRDYWxs
ZXJUeXBlCgkgKiAgICAgICAgICAgIGNhbGxlciB0eXBlIGFzIFN0cmluZwkKCSAqIEBwYXJhbSBj
dXJyZW50RXJyb3JNZXNzYWdlCgkgKiAgICAgICAgICAgIG9yaWdpbmFsIGVycm9yIGFzIFN0cmlu
ZyAKCSAqIEByZXR1cm4gYWxsIGZvdW5kIGhhbmRsaW5ncyBmb3IgdGhlIGdpdmVuIGVycm9yIGFz
IGFuIGFycmF5IGxpc3QsIGVtcHR5CgkgKiAgICAgICAgIGxpc3QgaW4gY2FzZSBvZiBubyBmb3Vu
ZCBlcnJvcgoJICogQHRocm93cyBTZXJ2aWNlRXhjZXB0aW9uCgkgKi8KCUBTdXBwcmVzc1dhcm5p
bmdzKCJ1bmNoZWNrZWQiKQoJcHJpdmF0ZSBzdGF0aWMgRXhjZXB0aW9uSGFuZGxpbmdJbmZvIGdl
dEhhbmRsaW5nc0ZvckxvY2F0aW9uKAoJCQlEb2N1bWVudCBwRXJyb3JIYW5kbGluZywgU3RyaW5n
IHBMb2NhdGlvblhQYXRoLAoJCQlTdHJpbmcgcEV4Y2VwdGlvblR5cGUsIFN0cmluZyBjdXJyZW50
Q2FsbGVyVHlwZSwgU3RyaW5nIGN1cnJlbnRFcnJvck1lc3NhZ2UpCgkJCXRocm93cyBTZXJ2aWNl
RXhjZXB0aW9uIHsKCQlsb2dEZWJ1ZygiZ2V0SGFuZGxpbmdzRm9yTG9jYXRpb246IC0tPiAiICsg
cExvY2F0aW9uWFBhdGggKyAiLCAiICsgcEV4Y2VwdGlvblR5cGUgKyAiLCAiICsgY3VycmVudENh
bGxlclR5cGUgKyAiLCAiICsgY3VycmVudEVycm9yTWVzc2FnZSk7CgoJCS8vIGdldCBleGNlcHRp
b24gbGlzdCBmb3IgbG9jYXRpb24KCQlMaXN0PEVsZW1lbnQ+IGV4Y2VwdGlvbk5vZGVzID0gbnVs
bDsKCQl0cnkgewoJCQlleGNlcHRpb25Ob2RlcyA9IChMaXN0PEVsZW1lbnQ+KSBYUGF0aC5zZWxl
Y3ROb2RlcyhwRXJyb3JIYW5kbGluZywgcExvY2F0aW9uWFBhdGgpOwoJCX0gCgkJY2F0Y2ggKEpE
T01FeGNlcHRpb24gZSkgewoJCQlsb2dFcnJvcigiSkRPTSBFcnJvciBkdXJpbmcgZXh0cmFjdGlv
biBvZiBlcnJvciB0eXBlcyBmcm9tIGV4Y2VwdGlvbiBoYW5kbGluZyBkZWZpbml0aW9uOiAiICsg
ZS5nZXRNZXNzYWdlKCkpOwoJCQlsb2dEZWJ1ZygiZ2V0SGFuZGxpbmdzRm9yTG9jYXRpb246IDwt
LSBudWxsIChKRE9NRXhjZXB0aW9uOiAiICsgZS5nZXRNZXNzYWdlKCkgKyAiKSIpOwoJCQlyZXR1
cm4gbnVsbDsKCQl9CiAgICAgICAgLy8gY2hlY2sgZXhjZXB0aW9uIG5vZGVzIHNhbml0eQoJCWlm
IChleGNlcHRpb25Ob2RlcyA9PSBudWxsIHx8IGV4Y2VwdGlvbk5vZGVzLmlzRW1wdHkoKSkgewoJ
CQlsb2dEZWJ1ZygiZ2V0SGFuZGxpbmdzRm9yTG9jYXRpb246IDwtLSBudWxsIChObyBleGNlcHRp
b25Ob2RlcykiKTsKCQkJcmV0dXJuIG51bGw7CgkJfQkJCQoJCQoJCS8vIGV4dHJhY3QgZXhjZXB0
aW9ucyBmcm9tIGxpc3QsIGlmIGxvY2F0aW9uIGV4aXN0cyBhbmQgZXhjZXB0aW9uCgkJLy8gZGVm
aW5pdGlvbnMgYXJlIGNvbnRhaW5lZAoJCS8vIGl0ZXJhdGlvbiBvdmVyIGFsbCBkZWZpbmVkIGV4
Y2VwdGlvbnMgaW4gbG9jYXRpb24KCQlFeGNlcHRpb25IYW5kbGluZ0luZm8gZXhjZXB0aW9uSGFu
ZGxpbmdJbmZvID0gbnVsbDsKCQlFbGVtZW50IGV4Y2VwdGlvbkhhbmRsaW5nRWxlbWVudCA9IG51
bGw7CgkJZm9yIChFbGVtZW50IGV4Y2VwdGlvbk5vZGUgOiBleGNlcHRpb25Ob2RlcykgewoJCQli
b29sZWFuIGlzRXJyb3JNZXNzYWdlQ29udGFpbnNDaGVja1RydWUgPSBmYWxzZTsKCQkJZmluYWwg
U3RyaW5nIGVycm9yTWVzc2FnZUNvbnRhaW5zRnJvbURlZmluaXRpb24gPSBleGNlcHRpb25Ob2Rl
LmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9BVFRSSUJVVEVfRVJST1JfTUVTU0FHRV9DT05UQUlOUyk7
CgkJCWlmIChlcnJvck1lc3NhZ2VDb250YWluc0Zyb21EZWZpbml0aW9uID09IG51bGwgfHwKCQkJ
CShjdXJyZW50RXJyb3JNZXNzYWdlICE9IG51bGwgJiYKCQkJCWVycm9yTWVzc2FnZUNvbnRhaW5z
RnJvbURlZmluaXRpb24gIT0gbnVsbCAmJgoJCQkJY3VycmVudEVycm9yTWVzc2FnZS5jb250YWlu
cyhlcnJvck1lc3NhZ2VDb250YWluc0Zyb21EZWZpbml0aW9uKSkpIAoJCQl7CgkJCQlpc0Vycm9y
TWVzc2FnZUNvbnRhaW5zQ2hlY2tUcnVlID0gdHJ1ZTsKCQkJfQoKCQkJLy8gQ2hlY2sgZm9yIG9w
dGlvbmFsIGF0dHJpYnV0IGVycm9yTWVzc2FnZVJlZ2V4OgoJCQlib29sZWFuIGlzRXJyb3JNZXNz
YWdlUmVnZXhDaGVja1RydWUgPSBmYWxzZTsKCQkJZmluYWwgU3RyaW5nIGVycm9yTWVzc2FnZVJl
Z2V4RnJvbURlZmluaXRpb24gPSBleGNlcHRpb25Ob2RlLmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9B
VFRSSUJVVEVfRVJST1JfTUVTU0FHRV9SRUdFWF9JRCk7CgkJCWlmIChlcnJvck1lc3NhZ2VSZWdl
eEZyb21EZWZpbml0aW9uID09IG51bGwgfHwKCQkJCShjdXJyZW50RXJyb3JNZXNzYWdlICE9IG51
bGwgJiYKCQkJCWVycm9yTWVzc2FnZVJlZ2V4RnJvbURlZmluaXRpb24gIT0gbnVsbCAmJgoJCQkJ
Y3VycmVudEVycm9yTWVzc2FnZS5tYXRjaGVzKGVycm9yTWVzc2FnZVJlZ2V4RnJvbURlZmluaXRp
b24pKSkgCgkJCXsKCQkJCWlzRXJyb3JNZXNzYWdlUmVnZXhDaGVja1RydWUgPSB0cnVlOwoJCQl9
CgkJCQoJCQkvLyBDaGVjayBmb3Igb3B0aW9uYWwgYXR0cmlidXQgY2FsbGVyVHlwZToKCQkJYm9v
bGVhbiBpc0NhbGxlclR5cGVDaGVja1RydWUgPSBmYWxzZTsKCQkJZmluYWwgU3RyaW5nIGNhbGxl
clR5cGVGcm9tRGVmaW5pdGlvbiA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhE
X0FUVFJJQlVURV9FUlJPUl9DQUxMRVJfVFlQRV9JRCk7CgkJCWlmIChjYWxsZXJUeXBlRnJvbURl
ZmluaXRpb24gPT0gbnVsbCB8fAoJCQkJKGN1cnJlbnRDYWxsZXJUeXBlICE9IG51bGwgJiYKCQkJ
CWNhbGxlclR5cGVGcm9tRGVmaW5pdGlvbiAhPSBudWxsICYmCgkJCQljdXJyZW50Q2FsbGVyVHlw
ZS5lcXVhbHMoY2FsbGVyVHlwZUZyb21EZWZpbml0aW9uKSkpIAoJCQl7CgkJCQlpc0NhbGxlclR5
cGVDaGVja1RydWUgPSB0cnVlOwoJCQl9CgkJCQoJCQkvLyBpZiBkZWZpbmVkIGV4Y2VwdGlvbiB0
eXBlIGVxdWFscyBleGNlcHRpb24sIHNldCBoYW5kbGluZyBhbmQKCQkJLy8gZXhpdCBsb29wCgkJ
CWZpbmFsIFN0cmluZyBleGNlcHRpb25UeXBlRnJvbURlZmluaXRpb24gPSBleGNlcHRpb25Ob2Rl
LmdldEF0dHJpYnV0ZVZhbHVlKEVIRF9BVFRSSUJVVEVfRVJST1JfVFlQRV9JRCk7CgkJCWlmIChl
eGNlcHRpb25UeXBlRnJvbURlZmluaXRpb24uZXF1YWxzKHBFeGNlcHRpb25UeXBlKSAmJiBpc0Vy
cm9yTWVzc2FnZUNvbnRhaW5zQ2hlY2tUcnVlICYmIGlzRXJyb3JNZXNzYWdlUmVnZXhDaGVja1Ry
dWUgJiYgaXNDYWxsZXJUeXBlQ2hlY2tUcnVlKSB7CgkJCQlleGNlcHRpb25IYW5kbGluZ0luZm8g
PSBnZXRSZXRWYWwoZXhjZXB0aW9uTm9kZSwgcEV4Y2VwdGlvblR5cGUpOwoJCQkJZXhjZXB0aW9u
SGFuZGxpbmdFbGVtZW50ID0gZXhjZXB0aW9uTm9kZTsKCQkJCWJyZWFrOwoJCQl9CQoJCQkgIAoJ
CQkvLyBpZiBnZW5lcmljIGhhbmRsaW5nIGlzIGFsbG93ZWQgYW5kIGRlZmluZWQgKHR5cGU9ImFs
bCIpLCBzZXQgKGNhY2hlKQoJCQkvLyBnZW5lcmljIGhhbmRsaW5nCgkJCWVsc2UgaWYgKGV4Y2Vw
dGlvblR5cGVGcm9tRGVmaW5pdGlvbi5lcXVhbHMoRUhEX1ZBTFVFX0dFTkVSSUNfRVJST1JfVFlQ
RV9JRCkgJiYgaXNFcnJvck1lc3NhZ2VDb250YWluc0NoZWNrVHJ1ZSAmJiBpc0Vycm9yTWVzc2Fn
ZVJlZ2V4Q2hlY2tUcnVlICYmIGlzQ2FsbGVyVHlwZUNoZWNrVHJ1ZSkgewoJCQkJZXhjZXB0aW9u
SGFuZGxpbmdJbmZvID0gZ2V0UmV0VmFsKGV4Y2VwdGlvbk5vZGUsIHBFeGNlcHRpb25UeXBlKTsK
CQkJCWV4Y2VwdGlvbkhhbmRsaW5nRWxlbWVudCA9IGV4Y2VwdGlvbk5vZGU7CgkJCQlicmVhazsK
CQkJfQoJCX0KCgkJaWYgKGV4Y2VwdGlvbkhhbmRsaW5nRWxlbWVudCA9PSBudWxsKSB7CgkJCXJl
dHVybiBudWxsOwoJCX0gZWxzZSB7CgkJCS8vIGNoZWNrIGhhbmRsaW5nIG5vZGVzIHNhbml0eQoJ
CQlmb3IgKE9iamVjdCBuIDogZXhjZXB0aW9uSGFuZGxpbmdFbGVtZW50LmdldENoaWxkcmVuKEVI
RF9BVFRSSUJVVEVfSEFORExJTkcpKSB7CgkJCQkJZXhjZXB0aW9uSGFuZGxpbmdJbmZvLmFkZFNl
cnZpY2VOYW1lKCgoRWxlbWVudCkgbikuZ2V0VGV4dCgpKTsKCQkJfQoKCQkJbG9nRGVidWcoImdl
dEhhbmRsaW5nc0ZvckxvY2F0aW9uOiA8LS0gIiArIGV4Y2VwdGlvbkhhbmRsaW5nSW5mbyk7CgkJ
CXJldHVybiBleGNlcHRpb25IYW5kbGluZ0luZm87CgkJfQoJCQoJfQoJCglwcml2YXRlIHN0YXRp
YyBFeGNlcHRpb25IYW5kbGluZ0luZm8gZ2V0UmV0VmFsKEVsZW1lbnQgZXhjZXB0aW9uTm9kZSwg
U3RyaW5nIGV4Y2VwdGlvblR5cGUpIHsJCgkJZmluYWwgU3RyaW5nIGVycm9yVG9CZVRocm93biA9
IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVURV9FUlJPUl9UT19C
RV9USFJPV05fSUQpOwoJCWZpbmFsIFN0cmluZyB0eXBlID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRy
aWJ1dGVWYWx1ZShFSERfQVRUUklCVVRFX0VSUk9SX1RZUEVfSUQpOwoJCWZpbmFsIFN0cmluZyBl
eGNlcHRpb25IYW5kbGluZ0lkID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERf
QVRUUklCVVRFX0VSUk9SX0hBTkRMSU5HX0lEX0lEKTsKCQlmaW5hbCBTdHJpbmcgbWF4UmV0cnlB
dHRlbXB0cyA9IGV4Y2VwdGlvbk5vZGUuZ2V0QXR0cmlidXRlVmFsdWUoRUhEX0FUVFJJQlVURV9N
QVhfUkVUUllfQVRURU1QVFMpOwoJCWZpbmFsIFN0cmluZyBwcmludEJ1c2luZXNzT2JqZWN0U3Ry
ID0gZXhjZXB0aW9uTm9kZS5nZXRBdHRyaWJ1dGVWYWx1ZShFSERfUFJJTlRfQlVTSU5FU1NfT0JK
RUNUX0lEKTsKCQlmaW5hbCBib29sZWFuIHByaW50QnVzaW5lc3NPYmplY3QgPSBwcmludEJ1c2lu
ZXNzT2JqZWN0U3RyID09IG51bGwgPyBmYWxzZSA6IEJvb2xlYW4ucGFyc2VCb29sZWFuKHByaW50
QnVzaW5lc3NPYmplY3RTdHIpOwoJCXJldHVybiBuZXcgRXhjZXB0aW9uSGFuZGxpbmdJbmZvKGVy
cm9yVG9CZVRocm93biwgdHlwZSwgZXhjZXB0aW9uSGFuZGxpbmdJZCwgZXhjZXB0aW9uVHlwZSwg
bWF4UmV0cnlBdHRlbXB0cywgcHJpbnRCdXNpbmVzc09iamVjdCk7Cgl9CgkKCglwcml2YXRlIHN0
YXRpYyBJRGF0YSBidWlsZENvbXBhY3RFcnJvckluZm8oU3RyaW5nIHBFcnJvckxvY2F0aW9uLCBT
dHJpbmcgZmxvd1N0ZXApIHsKCQlJRGF0YSBjb21wYWN0RXJyb3JJbmZvID0gSURhdGFGYWN0b3J5
LmNyZWF0ZSgpOwoJCUlEYXRhQ3Vyc29yIGNvbXBhY3RFcnJvckluZm9DdXJzb3IgPSBjb21wYWN0
RXJyb3JJbmZvLmdldEN1cnNvcigpOwoKCQlJRGF0YVV0aWwucHV0KGNvbXBhY3RFcnJvckluZm9D
dXJzb3IsIENPTVBBQ1RfRVJST1JfTE9DQVRJT05fSUQsIHBFcnJvckxvY2F0aW9uKTsKCQlJRGF0
YVV0aWwucHV0KGNvbXBhY3RFcnJvckluZm9DdXJzb3IsIENPTVBBQ1RfRVJST1JfRkxPV19TVEVQ
LCBmbG93U3RlcCk7CgoJCWNvbXBhY3RFcnJvckluZm9DdXJzb3IuZGVzdHJveSgpOwoKCQlyZXR1
cm4gY29tcGFjdEVycm9ySW5mbzsKCX0KCQkKCUBTdXBwcmVzc1dhcm5pbmdzKCJyYXd0eXBlcyIp
Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBOU1NlcnZpY2UgZ2V0Q3VycmVudFRvcExldmVsU2Vydmlj
ZSgpIHsKCQlOU1NlcnZpY2UgdG9wTGV2ZWxTZXJ2aWNlTmFtZSA9IG51bGw7CgkJSW52b2tlU3Rh
dGUgc3RhdGUgPSBJbnZva2VTdGF0ZS5nZXRDdXJyZW50U3RhdGUoKTsKCQlpZiAoc3RhdGUgIT0g
bnVsbCkgewoJCQlTdGFjayBjYWxsU3RhY2sgPSBzdGF0ZS5nZXRDYWxsU3RhY2soKTsKCQkJaWYg
KGNhbGxTdGFjayAhPSBudWxsICYmIGNhbGxTdGFjay5zaXplKCkgPiAwKSB7CgkJCQl0b3BMZXZl
bFNlcnZpY2VOYW1lID0gKE5TU2VydmljZSkgY2FsbFN0YWNrLmVsZW1lbnRBdCgwKTsKCQkJfQoJ
CX0KCQlyZXR1cm4gdG9wTGV2ZWxTZXJ2aWNlTmFtZTsKCX0KCQoJcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgU3RyaW5nIGdldE1lc3NhZ2VVSUQoSURhdGEgbWV0YURhdGEpIHsKCQlpZihtZXRhRGF0YSAh
PSBudWxsKSB7CgkJCUlEYXRhTWFwIG1ldGFEYXRhTWFwID0gbmV3IElEYXRhTWFwKG1ldGFEYXRh
KTsKCQkJcmV0dXJuIG1ldGFEYXRhTWFwLmdldEFzU3RyaW5nKFVJRF9JRCk7CgkJfQoJCXJldHVy
biBudWxsOwoJfQoKCXB1YmxpYyBzdGF0aWMgdm9pZCBpbml0SGFuZGxpbmdzKFVSTCBwVXJsLCBT
QVhCdWlsZGVyIHBCdWlsZGVyKSB7CgkJZmluYWwgU0FYQnVpbGRlciBidWlsZGVyOwoJCWlmIChw
QnVpbGRlciA9PSBudWxsKSB7CgkJCWJ1aWxkZXIgPSBuZXcgU0FYQnVpbGRlcigpOwoJCX0gZWxz
ZSB7CgkJCWJ1aWxkZXIgPSBwQnVpbGRlcjsKCQl9CgkJZmluYWwgRG9jdW1lbnQgZG9jID0gbG9h
ZEhhbmRsaW5ncyhwVXJsLCBidWlsZGVyKTsKCQlzeW5jaHJvbml6ZWQoZXhjZXB0aW9uSGFuZGxp
bmdMb2NrKSB7CgkJCV9leGNlcHRpb25IYW5kbGluZyA9IGRvYzsKCQl9Cgl9CgkKCXByaXZhdGUg
c3RhdGljIERvY3VtZW50IGxvYWRIYW5kbGluZ3MoVVJMIHBGaWxlLCBTQVhCdWlsZGVyIHBCdWls
ZGVyKSB7CgkJLy8gTG9hZCBleGNlcHRpb24gaGFuZGxpbmcgZGVmaW5pdGlvbiBmaWxlCgkJCgkJ
dHJ5IHsKCQkJZmluYWwgRG9jdW1lbnQgZWhkID0gcEJ1aWxkZXIuYnVpbGQocEZpbGUpOwoJCQoJ
CQlsb2dJbmZvKCJTdWNjZXNzZnVsbHkgaW5pdGlhbGl6ZWQgZXJyb3IgaGFuZGxpbmciKTsKCQkJ
cmV0dXJuIGVoZDsKCQl9IAoJCWNhdGNoIChKRE9NRXhjZXB0aW9uIGUpIHsKCQkJbG9nRXJyb3Io
IkpET00gRXJyb3IgZHVyaW5nIGluaXRpYWxpemF0aW9uIG9mIGVycm9yIGhhbmRsaW5nOiAiICsg
ZS5nZXRNZXNzYWdlKCkpOwoJCQl0aHJvdyBuZXcgVW5kZWNsYXJlZFRocm93YWJsZUV4Y2VwdGlv
bihlKTsKCQl9IAoJCWNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7CgkJCWxvZ0Vycm9yKCJJTyBFcnJv
ciBkdXJpbmcgaW5pdGlhbGl6YXRpb24gb2YgZXJyb3IgaGFuZGxpbmc6ICIgKyBlLmdldE1lc3Nh
Z2UoKSk7CgkJCXRocm93IG5ldyBVbmRlY2xhcmVkVGhyb3dhYmxlRXhjZXB0aW9uKGUpOwoJCX0K
CX0KCgoJcHJpdmF0ZSBzdGF0aWMgU3RyaW5nIGFzU3RyaW5nKFN0cmluZ1tdIHRlbXBQYXJ0cykg
ewoJCVN0cmluZ0J1aWxkZXIgYnVpbGRlciA9IG5ldyBTdHJpbmdCdWlsZGVyKCk7CgkJZm9yIChT
dHJpbmcgc3RyaW5nIDogdGVtcFBhcnRzKSB7CgkJCWJ1aWxkZXIuYXBwZW5kKHN0cmluZykuYXBw
ZW5kKCIsIik7CgkJfQoJCXJldHVybiBidWlsZGVyLnRvU3RyaW5nKCk7Cgl9CgoJcHJpdmF0ZSBz
dGF0aWMgZmluYWwgU3RyaW5nIExPR19TVkNfUEFUSCA9ICJ3eC5yZXNpbGllbmNlLmltcGwubG9n
RXJyb3IiOwoKCXB1YmxpYyBzdGF0aWMgdm9pZCBsb2dJbmZvKFN0cmluZyBtZXNzYWdlKSB7CgkJ
bG9nSW1wbChtZXNzYWdlLCAiSW5mbyIpOwoJfQoJCglwdWJsaWMgc3RhdGljIHZvaWQgbG9nV2Fy
bihTdHJpbmcgbWVzc2FnZSkgewoJCWxvZ0ltcGwobWVzc2FnZSwgIldhcm4iKTsKCX0KCQoJcHVi
bGljIHN0YXRpYyB2b2lkIGxvZ0Vycm9yKFN0cmluZyBtZXNzYWdlKSB7CgkJbG9nSW1wbChtZXNz
YWdlLCAiRXJyb3IiKTsKCX0KCglwdWJsaWMgc3RhdGljIHZvaWQgbG9nVHJhY2UoU3RyaW5nIG1l
c3NhZ2UpIHsKCQlsb2dJbXBsKG1lc3NhZ2UsICJUcmFjZSIpOwoJfQoJCglwdWJsaWMgc3RhdGlj
IHZvaWQgbG9nRGVidWcoU3RyaW5nIG1lc3NhZ2UpIHsKCQlsb2dJbXBsKG1lc3NhZ2UsICJEZWJ1
ZyIpOwoJfQoJCglwdWJsaWMgc3RhdGljIHZvaWQgbG9nRmF0YWwoU3RyaW5nIG1lc3NhZ2UpIHsK
CQlsb2dJbXBsKG1lc3NhZ2UsICJGYXRhbCIpOwoJfQoJCglwcml2YXRlIHN0YXRpYyB2b2lkIGxv
Z0ltcGwoU3RyaW5nIG1lc3NhZ2UsIFN0cmluZyBsZXZlbCkgewoJCUlEYXRhIGlucHV0ID0gSURh
dGFGYWN0b3J5LmNyZWF0ZSgpOwoJCUlEYXRhTWFwIGlucHV0TWFwID0gbmV3IElEYXRhTWFwKGlu
cHV0KTsKCQlpbnB1dE1hcC5wdXQoIm1lc3NhZ2UiLCBtZXNzYWdlKTsKCQlpbnB1dE1hcC5wdXQo
ImZ1bmN0aW9uIiwgV1hfUkVTSUxJRU5DRV9FUlJPUik7CgkJaW5wdXRNYXAucHV0KCJsZXZlbCIs
IGxldmVsKTsKCQkKCQl0cnkgewoJCQlTZXJ2aWNlLmRvSW52b2tlKExPR19TVkNfUEFUSCwgImxv
ZyIsIGlucHV0KTsKCQl9IAoJCWNhdGNoIChFeGNlcHRpb24gZSkgewoJCX0KCX0KCQoJLy8gKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKgoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tWE1MIE5PREUgTkFNRSBERUZJTklUSU9O
Uy0tLS0tLS0tLS0tLS0tLS0tLS0tLQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgU3RyaW5nIEVIRF9OT0RFX0RPQ19ST09UX0lEID0gImV4Y2VwdGlvbkhhbmRsaW5nIjsKCXBy
aXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfTk9ERV9HTE9CQUxfRVJST1JfVFlQRV9JRCA9
ICJnbG9iYWxFeGNlcHRpb24iOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9OT0RF
X0VSUk9SX0xPQ0FUSU9OX0lEID0gImxvY2F0aW9uIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0
cmluZyBFSERfTk9ERV9FUlJPUl9UWVBFX0lEID0gImV4Y2VwdGlvbiI7CgoJLy8gKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLVhNTCBOT0RFIEFUVFJJQlVURSBERUZJTklUSU9OUy0t
LS0tLS0tLS0tLS0tLS0tLQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3Ry
aW5nIEVIRF9BVFRSSUJVVEVfRVJST1JfVFlQRV9JRCA9ICJ0eXBlIjsKCXByaXZhdGUgc3RhdGlj
IGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0VSUk9SX0NBTExFUl9UWVBFX0lEID0gImNhbGxl
clR5cGUiOwkJCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9FUlJP
Ul9NRVNTQUdFX0NPTlRBSU5TID0gImVycm9yTWVzc2FnZUNvbnRhaW5zIjsJCQoJcHJpdmF0ZSBz
dGF0aWMgZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfRVJST1JfTUVTU0FHRV9SRUdFWF9JRCA9
ICJlcnJvck1lc3NhZ2VSZWdleCI7CQkKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERf
QVRUUklCVVRFX0xPQ0FUSU9OX05BTUVfSUQgPSAibmFtZSI7Cglwcml2YXRlIHN0YXRpYyBmaW5h
bCBTdHJpbmcgRUhEX0FUVFJJQlVURV9FUlJPUl9UT19CRV9USFJPV05fSUQgPSAiZXJyb3JUb0Jl
VGhyb3duIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFSERfQVRUUklCVVRFX0VSUk9S
X0hBTkRMSU5HX0lEX0lEID0gImV4Y2VwdGlvbkhhbmRsaW5nSWQiOwoJcHJpdmF0ZSBzdGF0aWMg
ZmluYWwgU3RyaW5nIEVIRF9BVFRSSUJVVEVfSEFORExJTkc9ICJoYW5kbGluZyI7Cglwcml2YXRl
IHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJQlVURV9NQVhfUkVUUllfQVRURU1QVFMgPSAi
bWF4UmV0cnlBdHRlbXB0cyI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgRUhEX0FUVFJJ
QlVURV9SRVRSWV9DT1VOVCA9ICJyZXRyeUNvdW50IjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0
cmluZyBFSERfQVRUUklCVVRFX0ZVTkNUSU9OID0gIkBXeFJlc2lsaWVuY2UubG9nZ2luZy5mdW5j
dGlvbkAiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9QUklOVF9CVVNJTkVTU19P
QkpFQ1RfSUQgPSAicHJpbnRCdXNpbmVzc09iamVjdCI7CgoJLy8gKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJLy8gLS0t
LS0tLS0tLS0tLS0tLS0tLS0tWE1MIE5PREUgVkFMVUUgREVGSU5JVElPTlMtLS0tLS0tLS0tLS0t
LS0tLS0tLQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKgoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVIRF9W
QUxVRV9HRU5FUklDX0VSUk9SX1RZUEVfSUQgPSAiYWxsIjsKCXByaXZhdGUgc3RhdGljIGZpbmFs
IFN0cmluZyBFSERfVkFMVUVfR0xPQkFMX0VSUk9SX0hBTkRMSU5HX0lEID0gImdsb2JhbCI7CgoJ
Ly8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKgoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tSU5QVVQgRVJST1IgRklFTEQgSUQg
REVGSU5JVElPTlMtLS0tLS0tLS0tLS0tLS0tLQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJcHJpdmF0ZSBzdGF0
aWMgZmluYWwgU3RyaW5nIEVSUk9SX0lORk9fSUQgPSAiZXhjZXB0aW9uSW5mbyI7Cglwcml2YXRl
IHN0YXRpYyBmaW5hbCBTdHJpbmcgRVhDTFVERV9TRVJWSUNFID0gIkBXeFJlc2lsaWVuY2UuZXJy
b3JIYW5kbGluZy5leGNsdWRlU2VydmljZUZyb21FcnJvckhhbmRsaW5nQCI7CgkKCXByaXZhdGUg
c3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0VSUk9SID0gImVycm9yIjsKCXByaXZhdGUg
c3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0VSUk9SX1RZUEUgPSAiZXJyb3JUeXBlIjsK
CXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0NBTExfU1RBQ0tfU0VSVklD
RSA9ICJzZXJ2aWNlIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0NB
TExfU1RBQ0tfRkxPV19TVEVQID0gImZsb3dTdGVwIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0
cmluZyBFUlJPUl9JTkZPX0NBTExfU1RBQ0sgPSAiY2FsbFN0YWNrIjsKCXByaXZhdGUgc3RhdGlj
IGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX0VSUk9SX0RVTVAgPSAiZXJyb3JEdW1wIjsKCXByaXZh
dGUgc3RhdGljIGZpbmFsIFN0cmluZyBFUlJPUl9JTkZPX1RJTUUgPSAidGltZSI7Cglwcml2YXRl
IHN0YXRpYyBmaW5hbCBTdHJpbmcgRVJST1JfSU5GT19ORVNURURfRVJST1JfSUQgPSAibmVzdGVk
RXJyb3JJbmZvIjsKCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgR0VORVJJQ19WQUxVRV9N
QVBfSUQgPSAiZ2VuZXJpY1ZhbHVlTWFwIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBH
RU5FUklDX0VSUk9SX01FU1NBR0VfSUQgPSAiZ2VuZXJpY0Vycm9yTWVzc2FnZSI7CgoJLy8gKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKgoJLy8gLS0tLS0tLS0tLS0tLS1PVVRQVVQgSEFORExFRCBFUlJPUiBGSUVMRCBJRCBE
RUZJTklUSU9OUy0tLS0tLS0tLS0tLQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJcHJpdmF0ZSBzdGF0aWMgZmlu
YWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19JRCA9ICJoYW5kbGVkRXJyb3JJbmZvIjsKCQoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19ST09UX0lEID0g
InRvcFNlcnZpY2VFcnJvciI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9F
UlJPUl9JTkZPX0hBTkRMRURfSUQgPSAiaGFuZGxlZFNlcnZpY2VFcnJvciI7Cglwcml2YXRlIHN0
YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0FQUExJQ0FUSU9OX1NFUlZJQ0Vf
SUQgPSAiYXBwbGljYXRpb25TZXJ2aWNlRXJyb3IiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3Ry
aW5nIEhBTkRMRURfRVJST1JfSU5GT19PUklHSU5fSUQgPSAicm9vdFNlcnZpY2VFcnJvciI7CgoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19IQU5ETElOR19M
T0NBVElPTl9JRCA9ICJoYW5kbGluZ0xvY2F0aW9uIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0
cmluZyBIQU5ETEVEX0VSUk9SX0lORk9fSEFORExJTkdfVFlQRV9JRCA9ICJoYW5kbGluZ1R5cGUi
OwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19ERVBUSF9J
RCA9ICJlcnJvckRlcHRoIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VS
Uk9SX0lORk9fRVJST1JfQ09ERSA9ICJlcnJvckNvZGUiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwg
U3RyaW5nIEhBTkRMRURfRVJST1JfSU5GT19DQUxMX1NUQUNLID0gImNhbGxTdGFjayI7Cglwcml2
YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgSEFORExFRF9FUlJPUl9JTkZPX0VSUk9SX0RVTVAgPSAi
ZXJyb3JEdW1wIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VSUk9SX0lO
Rk9fVElNRSA9ICJ0aW1lIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBIQU5ETEVEX0VS
Uk9SX0lORk9fUElQRUxJTkUgPSAicGlwZWxpbmUiOwoKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0
cmluZyBFUlJPUl9NU0dfSUQgPSAiZXJyb3JNZXNzYWdlIjsKCXByaXZhdGUgc3RhdGljIGZpbmFs
IFN0cmluZyBDT01QQUNUX0VSUk9SX0xPQ0FUSU9OX0lEID0gImVycm9yTG9jYXRpb24iOwoJcHJp
dmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIENPTVBBQ1RfRVJST1JfRkxPV19TVEVQID0gImVycm9y
Rmxvd1N0ZXAiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX1RZUEVfSUQgPSAi
ZXJyb3JUeXBlIjsKCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCgkvLyAtLS0tLS0tLS0tLS0tLS0tLS0tR0VORVJJ
QyBET0MgRklFTEQgSUQgREVGSU5JVElPTlMtLS0tLS0tLS0tLS0tLS0tCgkvLyAqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgQlVTSU5FU1NfRE9DX0lEID0gImJ1c2luZXNz
T2JqZWN0IjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBQUklOVF9CVVNJTkVTU19PQkpF
Q1RfSUQgPSAicHJpbnRCdXNpbmVzc09iamVjdCI7CgoJLy8gKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJLy8gLS0tLS0t
LS0tLS0tLS0tLS0tLS1FWENFUFRJT04gSEFORExJTkcgREVGSU5JVElPTi0tLS0tLS0tLS0tLS0t
LS0tLQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKgoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIE1FVEFEQVRB
X0lEID0gInd4TWV0YURhdGEiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIExPR0dJTkdf
RlVOQ1RJT04gPSAiQFd4UmVzaWxpZW5jZS5sb2dnaW5nLmZ1bmN0aW9uQCI7Cglwcml2YXRlIHN0
YXRpYyBmaW5hbCBTdHJpbmcgVUlEX0lEID0gInV1aWQiOwoKCS8vICoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKCS8vIC0t
LS0tLS0tLS0tLS0tLS0tLS0tRVhDRVBUSU9OIEhBTkRMSU5HIERFRklOSVRJT04tLS0tLS0tLS0t
LS0tLS0tLS0KCS8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioKCXByaXZhdGUgc3RhdGljIERvY3VtZW50IF9leGNlcHRp
b25IYW5kbGluZzsKCXByaXZhdGUgc3RhdGljIGZpbmFsIE9iamVjdCBleGNlcHRpb25IYW5kbGlu
Z0xvY2sgPSBuZXcgT2JqZWN0KCk7Cglwcml2YXRlIHN0YXRpYyBFeGNlcHRpb25IYW5kbGluZ0xp
c3RlbmVyIF9leGNlcHRpb25IYW5kbGluZ0xpc3RlbmVyOwoJcHJpdmF0ZSBzdGF0aWMgQ2FsbGVy
VHlwZVN1cHBsaWVyIERFRkFVTFRfQ0FMTEVSX1RZUEVfU1VQUExJRVIgPSBuZXcgQ2FsbGVyVHlw
ZVN1cHBsaWVyKCkgewoJCUBPdmVycmlkZQoJCXB1YmxpYyBTdHJpbmcgZ2V0KCkgewoJCQlyZXR1
cm4gZ2V0Q2FsbGVyVHlwZUJ5Q2FsbGluZ1NlcnZpY2UoKTsKCQl9Cgl9OwoJcHJpdmF0ZSBzdGF0
aWMgQ2FsbGVyVHlwZVN1cHBsaWVyIGNhbGxlclR5cGVTdXBwbGllciA9IG51bGw7Cglwcml2YXRl
IHN0YXRpYyBmaW5hbCBPYmplY3QgY2FsbGVyVHlwZVN1cHBsaWVyTG9jayA9IG5ldyBPYmplY3Qo
KTsKCXByaXZhdGUgc3RhdGljIGZpbmFsIE9iamVjdCBleGNlcHRpb25IYW5kbGluZ0xpc3RlbmVy
TG9jayA9IG5ldyBPYmplY3QoKTsKCXByaXZhdGUgc3RhdGljIGZpbmFsIE9iamVjdCBjcmVhdGVT
dW1tYXJpemVkRXhjZXB0aW9uSGFuZGxpbmdMb2NrID0gbmV3IE9iamVjdCgpOwoJLy8gKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKgoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1JTlBVVCBHRVQgVkFMVUUgREVGSU5JVElPTi0t
LS0tLS0tLS0tLS0tLS0tLS0tLQoJLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgoJcHJpdmF0ZSBzdGF0aWMgZmluYWwg
U3RyaW5nIE1BWF9SRVRSWV9BVFRFTVBUU19CRUZPUkVfQ0FOQ0VMX1JFVFJZID0gIm1heFJldHJ5
QXR0ZW1wdHNCZWZvcmVDYW5jZWxSZXRyeSI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcg
QlJFQUtfUkVUUllfTE9PUCA9ICJicmVhay5yZXRyeS5sb29wLmZvci4iOwoJLy8gKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgoJLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS1FUlJPUiBWQUxVRSBERUZJTklUSU9OLS0tLS0tLS0t
LS0tLS0tLS0tLS0tCgkvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcg
RVJST1JfVFJBTlNJRU5UID0gIlRSQU5TSUVOVCI7Cglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJp
bmcgRVJST1JfRkFUQUwgPSAiRkFUQUwiOwoJcHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVS
Uk9SX05PTkUgPSAiTk9ORSI7CQoJCglwcml2YXRlIHN0YXRpYyBmaW5hbCBTdHJpbmcgU1VNTUFS
SVpFRF9FWENFUFRJT05fSEFORExJTkdfRklMRSA9ICJFeGNlcHRpb25IYW5kbGluZ1N1bW1hcml6
ZWQueG1sIjsKCXByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBFWENFUFRJT05fSEFORExJTkdf
WFNEX0ZJTEUgPSAiRXhjZXB0aW9uSGFuZGxpbmcueHNkIjsKCXByaXZhdGUgc3RhdGljIGZpbmFs
IFN0cmluZyBXWF9SRVNJTElFTkNFID0gIld4UmVzaWxpZW5jZSI7Cglwcml2YXRlIHN0YXRpYyBm
aW5hbCBTdHJpbmcgV1hfUkVTSUxJRU5DRV9FUlJPUiA9ICJXeFJlc2lsaWVuY2UuRXJyb3IiOwoJ
cHJpdmF0ZSBzdGF0aWMgZmluYWwgU3RyaW5nIEVSUk9SX0hBTkRMSU5HX1hNTF9GSUxFID0gIkV4
Y2VwdGlvbkhhbmRsaW5nLnhtbCI7CgoKCQoJCgkKCQoJCgkKCQoJ</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>com.softwareag.util.IDataMap</value>
    <value>com.wm.app.audit.IAuditRuntime</value>
    <value>wx.resilience.impl.ErrorInfo</value>
    <value>wx.resilience.impl.SummarizedExceptionHandlingHandler</value>
    <value>wx.resilience.impl.SummarizedExceptionHandlingHandler.Creator</value>
    <value>wx.resilience.impl.Exceptions</value>
    <value>wx.resilience.impl.Paths</value>
    <value>com.wm.lang.ns.NSName</value>
    <value>java.io.File</value>
    <value>java.io.IOException</value>
    <value>java.util.*</value>
    <value>javax.xml.transform.Source</value>
    <value>javax.xml.transform.stream.StreamSource</value>
    <value>javax.xml.validation.Schema</value>
    <value>javax.xml.validation.SchemaFactory</value>
    <value>javax.xml.validation.Validator</value>
    <value>org.jdom.Document</value>
    <value>org.jdom.Element</value>
    <value>org.jdom.JDOMException</value>
    <value>org.jdom.input.SAXBuilder</value>
    <value>org.jdom.xpath.XPath</value>
    <value>org.xml.sax.SAXException</value>
    <value>com.wm.app.b2b.server.*</value>
    <value>java.lang.reflect.UndeclaredThrowableException</value>
    <value>java.net.URL</value>
    <value>java.nio.file.Path</value>
    <value>com.wm.lang.ns.NSService</value>
  </array>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
</Values>
