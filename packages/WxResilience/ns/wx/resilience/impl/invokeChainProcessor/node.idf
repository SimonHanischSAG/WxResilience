<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">CnB1YmxpYyBzdGF0aWMgV3hSZXNpbGllbmNlUHJvY2Vzc29yIHByb2Nlc3NvciA9IG51bGw7Cgpw
dWJsaWMgc3RhdGljIGNsYXNzIFd4UmVzaWxpZW5jZVByb2Nlc3NvciBpbXBsZW1lbnRzIEludm9r
ZUNoYWluUHJvY2Vzc29yIHsKCglwcml2YXRlIFN0cmluZ1tdIGludm9rZUNoYWluQmxhY2tsaXN0
OwoJCglwdWJsaWMgV3hSZXNpbGllbmNlUHJvY2Vzc29yKFN0cmluZ1tdIGludm9rZUNoYWluQmxh
Y2tsaXN0KSB7CgkJaWYgKGludm9rZUNoYWluQmxhY2tsaXN0ICE9IG51bGwpIHsKCQkJdGhpcy5p
bnZva2VDaGFpbkJsYWNrbGlzdCA9IGludm9rZUNoYWluQmxhY2tsaXN0OwoJCX0gZWxzZSB7CgkJ
CXRoaXMuaW52b2tlQ2hhaW5CbGFja2xpc3QgPSBuZXcgU3RyaW5nWzBdOwoJCX0KCX0KCglAT3Zl
cnJpZGUKCXB1YmxpYyB2b2lkIHByb2Nlc3MoSXRlcmF0b3IgY2hhaW4sIEJhc2VTZXJ2aWNlIGJh
c2VTZXJ2aWNlLCBJRGF0YSBwaXBlbGluZSwgU2VydmljZVN0YXR1cyBzdGF0dXMpCgkJCXRocm93
cyBTZXJ2ZXJFeGNlcHRpb24gewoKCQlJRGF0YU1hcCBwaXBlTWFwID0gbmV3IElEYXRhTWFwKHBp
cGVsaW5lKTsKCQlTdHJpbmcgYmFzZVNlcnZpY2VOYW1lID0gIiI7CgkJYm9vbGVhbiBpc1RvcCA9
IHN0YXR1cy5pc1RvcFNlcnZpY2UoKTsJCQoJCWJhc2VTZXJ2aWNlTmFtZSA9IGJhc2VTZXJ2aWNl
LmdldE5TTmFtZSgpLmdldEZ1bGxOYW1lKCk7CgkJCgkJYm9vbGVhbiBleGVjdXRlV3hSZXNpbGll
bmNlU2VydmljZXMgPSBmYWxzZTsKCQlpZiAoaXNUb3ApIHsKCQkJZXhlY3V0ZVd4UmVzaWxpZW5j
ZVNlcnZpY2VzID0gdHJ1ZTsKCQkJZm9yIChTdHJpbmcgZW50cnkgOiBpbnZva2VDaGFpbkJsYWNr
bGlzdCkgewoJCQkJaWYgKGJhc2VTZXJ2aWNlTmFtZS5zdGFydHNXaXRoKGVudHJ5KSkgewoJCQkJ
CWV4ZWN1dGVXeFJlc2lsaWVuY2VTZXJ2aWNlcyA9IGZhbHNlOwoJCQkJCWJyZWFrOwoJCQkJfQoJ
CQl9CgkJfQkJCQoJCQoJCS8vIHdlIGhhdmUgdG8gbWFrZSBzdXJlIHRoYXQgdGhlIHNlcnZjaWUg
aW52b2NhdGlvbiBjaGFpbiBpcyBub3QgY3V0CgkJaWYgKGNoYWluLmhhc05leHQoKSkgewoJCQl0
cnkgewoJCQkJaWYgKGV4ZWN1dGVXeFJlc2lsaWVuY2VTZXJ2aWNlcykgewoJCQkJCXRyeSB7CgkJ
CQkJCWV4ZWN1dGVTZXJ2aWNlKCJ3eC5yZXNpbGllbmNlLnB1Yi5yZXNpbGllbmNlIiwgInByZVBy
b2Nlc3NGb3JUb3BMZXZlbFNlcnZpY2UiLCBwaXBlbGluZSwgYmFzZVNlcnZpY2VOYW1lKTsKCQkJ
CQl9IGNhdGNoKEV4Y2VwdGlvbiBlKSB7CgkJCQkJCWxvZ0Vycm9yKCJFcnJvciBpbiBwcmVQcm9j
ZXNzRm9yVG9wTGV2ZWxTZXJ2aWNlOiAiICsgZSk7CgkJCQkJfQoJCQkJfQoKCQkJCS8vbG9nRGVi
dWcoIkJlZm9yZSBvcmlnaW5hbCBTZXJ2aWNlIik7CgkJCQkKCQkJCSgoSW52b2tlQ2hhaW5Qcm9j
ZXNzb3IpIGNoYWluLm5leHQoKSkucHJvY2VzcyhjaGFpbiwgYmFzZVNlcnZpY2UsIHBpcGVsaW5l
LCBzdGF0dXMpOwoJCQkJCgkJCQkvL2xvZ0RlYnVnKCJBZnRlciBvcmlnaW5hbCBTZXJ2aWNlIik7
CgkJCQkKCQkJfSBjYXRjaCAoRXhjZXB0aW9uIG9yaWdpbmFsRXhjZXB0aW9uKSB7CgkJCQlpZiAo
ZXhlY3V0ZVd4UmVzaWxpZW5jZVNlcnZpY2VzKSB7CgkJCQkJYm9vbGVhbiB3eFJlc2lsaWVuY2VQ
b3N0UHJvY2Vzc0V4ZWN1dGVkID0gcGlwZU1hcC5nZXRBc0Jvb2xlYW4oIkBXeFJlc2lsaWVuY2Uu
cG9zdFByb2Nlc3MuZXhlY3V0ZWRAIik7CgkJCQkJLy9sb2dEZWJ1Zygid3hSZXNpbGllbmNlUG9z
dFByb2Nlc3NFeGVjdXRlZDogIiArIHd4UmVzaWxpZW5jZVBvc3RQcm9jZXNzRXhlY3V0ZWQpOwoJ
CQkJCWlmICghd3hSZXNpbGllbmNlUG9zdFByb2Nlc3NFeGVjdXRlZCkgewoJCQkJCQlsb2dFcnJv
cigiSGFuZGxlIGVycm9yIik7CgkJCQkJCQkJCgkJCQkJCUlEYXRhIGxhc3RFcnJvciA9IG51bGw7
CgkJCQkJCXRyeSB7CgkJCQkJCQlleGVjdXRlU2VydmljZSgicHViLmZsb3ciLCAiZ2V0TGFzdEVy
cm9yIiwgcGlwZWxpbmUsIGJhc2VTZXJ2aWNlTmFtZSk7CQkJCQkJCgkJCQkJCQkKCQkJCQkJCWxh
c3RFcnJvciA9IHBpcGVNYXAuZ2V0QXNJRGF0YSgibGFzdEVycm9yIik7CgkJCQkJCQlpZiAobGFz
dEVycm9yID09IG51bGwpIHsKCQkJCQkJCQlsYXN0RXJyb3IgPSBJRGF0YUZhY3RvcnkuY3JlYXRl
KCk7CgkJCQkJCQkJSURhdGFNYXAgbGFzdEVycm9yTWFwID0gbmV3IElEYXRhTWFwKGxhc3RFcnJv
cik7CgkJCQkJCQkJbGFzdEVycm9yTWFwLnB1dCgiZXJyb3IiLCBvcmlnaW5hbEV4Y2VwdGlvbi5n
ZXRDYXVzZSgpKTsKCQkJCQkJCQlsYXN0RXJyb3JNYXAucHV0KCJlcnJvclR5cGUiLCBvcmlnaW5h
bEV4Y2VwdGlvbi5nZXRDbGFzcygpLmdldENhbm9uaWNhbE5hbWUoKSk7CgkJCQkJCQkJcGlwZU1h
cC5wdXQoImxhc3RFcnJvciIsIGxhc3RFcnJvcik7CgkJCQkJCQl9CgkJCQkJCX0gY2F0Y2ggKEV4
Y2VwdGlvbiBlKSB7CgkJCQkJCQlsb2dFcnJvcigiQ291bGQgbm90IGNhbGwgZ2V0TGFzdEVycm9y
Iik7CgkJCQkJCQlsYXN0RXJyb3IgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CgkJCQkJCQlJRGF0
YU1hcCBsYXN0RXJyb3JNYXAgPSBuZXcgSURhdGFNYXAobGFzdEVycm9yKTsKCQkJCQkJCWxhc3RF
cnJvck1hcC5wdXQoImVycm9yIiwgb3JpZ2luYWxFeGNlcHRpb24uZ2V0TG9jYWxpemVkTWVzc2Fn
ZSgpKTsKCQkJCQkJCWxhc3RFcnJvck1hcC5wdXQoImVycm9yVHlwZSIsIG9yaWdpbmFsRXhjZXB0
aW9uLmdldENsYXNzKCkuZ2V0Q2Fub25pY2FsTmFtZSgpKTsKCQkJCQkJCXBpcGVNYXAucHV0KCJs
YXN0RXJyb3IiLCBsYXN0RXJyb3IpOwoJCQkJCQl9CgkKCQkJCQkJdHJ5IHsKCQkJCQkJCWV4ZWN1
dGVTZXJ2aWNlKCJ3eC5yZXNpbGllbmNlLnB1Yi5yZXNpbGllbmNlIiwgImhhbmRsZUVycm9yIiwg
cGlwZWxpbmUsIGJhc2VTZXJ2aWNlTmFtZSk7CgkJCQkJCX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7
CgkJCQkJCQlsb2dFcnJvcigiRXJyb3IgaW4gaGFuZGxlRXJyb3I6ICIgKyBlKTsKCQkJCQkJfQoJ
CQkJCX0gZWxzZSB7CgkJCQkJCS8vIEVycm9yIGFscmVhZHkgaGFuZGxlZCBpbiBGbG93CgkJCQkJ
CXRocm93IG9yaWdpbmFsRXhjZXB0aW9uOwoJCQkJCX0gCgkJCQl9IGVsc2UgewoJCQkJCS8vbG9n
RGVidWcoImV4ZWN1dGUiKTsKCQkJCQl0aHJvdyBvcmlnaW5hbEV4Y2VwdGlvbjsKCQkJCX0KCQkJ
CgkJCX0gZmluYWxseSB7CgkJCQlpZiAoZXhlY3V0ZVd4UmVzaWxpZW5jZVNlcnZpY2VzKSB7CgkJ
CQkJYm9vbGVhbiB3eFJlc2lsaWVuY2VQb3N0UHJvY2Vzc0V4ZWN1dGVkID0gcGlwZU1hcC5nZXRB
c0Jvb2xlYW4oIkBXeFJlc2lsaWVuY2UucG9zdFByb2Nlc3MuZXhlY3V0ZWRAIik7CgkJCQkJLy9s
b2dEZWJ1Zygid3hSZXNpbGllbmNlUG9zdFByb2Nlc3NFeGVjdXRlZDogIiArIHd4UmVzaWxpZW5j
ZVBvc3RQcm9jZXNzRXhlY3V0ZWQpOwoJCQkJCWlmICghd3hSZXNpbGllbmNlUG9zdFByb2Nlc3NF
eGVjdXRlZCkgewoJCQkJCQlleGVjdXRlU2VydmljZSgid3gucmVzaWxpZW5jZS5wdWIucmVzaWxp
ZW5jZSIsICJwb3N0UHJvY2Vzc0ZvclRvcExldmVsU2VydmljZSIsIHBpcGVsaW5lLCBiYXNlU2Vy
dmljZU5hbWUpOwoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCX0KfQoKcHJpdmF0ZSBzdGF0aWMgdm9p
ZCBleGVjdXRlU2VydmljZShTdHJpbmcgaWZjLCBTdHJpbmcgc3ZjLCBJRGF0YSBwaXBlbGluZSwg
U3RyaW5nIGN1cnJlbnRTZXJ2aWNlTmFtZSkgdGhyb3dzIFNlcnZlckV4Y2VwdGlvbiwgSVNSdW50
aW1lRXhjZXB0aW9uIHsKCS8vIEF2b2lkIGVuZGxlc3MgbG9vcCBpbiBjYXNlIG9mIGJyb2tlbiBl
cnJvbmVvdXMgc2VydmljZToKCWlmICghKGlmYyArICI6IiArIHN2YykuZXF1YWxzKGN1cnJlbnRT
ZXJ2aWNlTmFtZSkpIHsKCQl0cnkgewoJCQlTZXJ2aWNlLmRvSW52b2tlKGlmYywgc3ZjLCBwaXBl
bGluZSk7CgkJfSBjYXRjaCAoSVNSdW50aW1lRXhjZXB0aW9uIGUpIHsKCQkJdGhyb3cgZTsKCQl9
IGNhdGNoIChTZXJ2ZXJFeGNlcHRpb24gZSkgewoJCQl0aHJvdyBlOwoJCX0gY2F0Y2ggKEV4Y2Vw
dGlvbiBlKSB7CgkJCXRocm93IG5ldyBTZXJ2aWNlRXhjZXB0aW9uKGUpOwoJCX0KCX0KfQoKcHJp
dmF0ZSBzdGF0aWMgdm9pZCBsb2dEZWJ1ZyhTdHJpbmcgbWVzc2FnZSkgewoJSm91cm5hbExvZ2dl
ci5sb2coNCwgSm91cm5hbExvZ2dlci5GQUNfRkxPV19TVkMsIEpvdXJuYWxMb2dnZXIuSU5GTywg
Ild4UmVzaWxpZW5jZVByb2Nlc3NvciIsIG1lc3NhZ2UpOwp9Cgpwcml2YXRlIHN0YXRpYyB2b2lk
IGxvZ0luZm8oU3RyaW5nIG1lc3NhZ2UpIHsKCUpvdXJuYWxMb2dnZXIubG9nKDQsIEpvdXJuYWxM
b2dnZXIuRkFDX0ZMT1dfU1ZDLCBKb3VybmFsTG9nZ2VyLklORk8sICJXeFJlc2lsaWVuY2VQcm9j
ZXNzb3IiLCBtZXNzYWdlKTsKfQoKcHJpdmF0ZSBzdGF0aWMgdm9pZCBsb2dFcnJvcihTdHJpbmcg
bWVzc2FnZSkgewoJSm91cm5hbExvZ2dlci5sb2coNCwgSm91cm5hbExvZ2dlci5GQUNfRkxPV19T
VkMsIEpvdXJuYWxMb2dnZXIuRVJST1IsICJXeFJlc2lsaWVuY2VQcm9jZXNzb3IiLCBtZXNzYWdl
KTsKfQoKCQoJCgk=</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>com.wm.util.JournalLogger</value>
    <value>com.wm.util.ServerException</value>
    <value>com.wm.app.b2b.server.BaseService</value>
    <value>com.wm.app.b2b.server.ISRuntimeException</value>
    <value>com.wm.app.b2b.server.invoke.InvokeChainProcessor</value>
    <value>com.wm.app.b2b.server.invoke.InvokeManager</value>
    <value>com.wm.app.b2b.server.invoke.ServiceStatus</value>
    <value>java.util.Arrays</value>
    <value>java.util.Iterator</value>
    <value>com.softwareag.util.IDataMap</value>
  </array>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
</Values>
