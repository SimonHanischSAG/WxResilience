<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">CnB1YmxpYyBzdGF0aWMgV3hSZXNpbGllbmNlUHJvY2Vzc29yIHByb2Nlc3NvciA9IG51bGw7Cgpw
dWJsaWMgc3RhdGljIGNsYXNzIFd4UmVzaWxpZW5jZVByb2Nlc3NvciBpbXBsZW1lbnRzIEludm9r
ZUNoYWluUHJvY2Vzc29yIHsKCglwcml2YXRlIFN0cmluZ1tdIGludm9rZUNoYWluQmxhY2tsaXN0
OwoJCglwdWJsaWMgV3hSZXNpbGllbmNlUHJvY2Vzc29yKFN0cmluZ1tdIGludm9rZUNoYWluQmxh
Y2tsaXN0KSB7CgkJaWYgKGludm9rZUNoYWluQmxhY2tsaXN0ICE9IG51bGwpIHsKCQkJdGhpcy5p
bnZva2VDaGFpbkJsYWNrbGlzdCA9IGludm9rZUNoYWluQmxhY2tsaXN0OwoJCX0gZWxzZSB7CgkJ
CXRoaXMuaW52b2tlQ2hhaW5CbGFja2xpc3QgPSBuZXcgU3RyaW5nWzBdOwoJCX0KCX0KCglAT3Zl
cnJpZGUKCXB1YmxpYyB2b2lkIHByb2Nlc3MoSXRlcmF0b3IgY2hhaW4sIEJhc2VTZXJ2aWNlIGJh
c2VTZXJ2aWNlLCBJRGF0YSBwaXBlbGluZSwgU2VydmljZVN0YXR1cyBzdGF0dXMpCgkJCXRocm93
cyBTZXJ2ZXJFeGNlcHRpb24gewoKCQlTdHJpbmcgYmFzZVNlcnZpY2VOYW1lID0gYmFzZVNlcnZp
Y2UuZ2V0TlNOYW1lKCkuZ2V0RnVsbE5hbWUoKTsKCQlJRGF0YU1hcCBwaXBlTWFwID0gbmV3IElE
YXRhTWFwKHBpcGVsaW5lKTsKCQkKCQlib29sZWFuIHd4UmVzaWxpZW5jZVNlcnZpY2VSZWRpcmVj
dGVkID0gcGlwZU1hcC5nZXRBc0Jvb2xlYW4oUkVESVJFQ1RFRCk7CgkJYm9vbGVhbiB3eFJlc2ls
aWVuY2VTZXJ2aWNlV3JhcHBlZCA9IHBpcGVNYXAuZ2V0QXNCb29sZWFuKFdSQVBQRUQpOwoJCWJv
b2xlYW4gcmVkaXJlY3RlZCA9IGZhbHNlOwoJCWJvb2xlYW4gd3JhcHBlZCA9IGZhbHNlOwoKCQlp
ZiAoIXd4UmVzaWxpZW5jZVNlcnZpY2VXcmFwcGVkKSB7CgkJCS8vIEF2b2lkIHJlZGlyZWN0aW5n
IGZvciBzZXJ2aWNlcyB3aGVyZSB0aGUgd3JhcHBlciB3YXMgYWxyZWFkeSBpbnZva2VkIG1hbnVh
bGx5CgkJCWlmICgid3gucmVzaWxpZW5jZS5wdWIuaHR0cDpodHRwIi5lcXVhbHMoYmFzZVNlcnZp
Y2VOYW1lKSkgewoJCQkJcGlwZU1hcC5wdXQoV1JBUFBFRCwgdHJ1ZSk7CgkJCQl3cmFwcGVkID0g
dHJ1ZTsKCQkJfSBlbHNlIGlmICgid3gucmVzaWxpZW5jZS5wdWIuaHR0cDpodHRwIi5lcXVhbHMo
YmFzZVNlcnZpY2VOYW1lKSkgewoJCQkJcGlwZU1hcC5wdXQoV1JBUFBFRCwgdHJ1ZSk7CgkJCQl3
cmFwcGVkID0gdHJ1ZTsKCQkJfSBlbHNlIGlmICgid3gucmVzaWxpZW5jZS5wdWIuam1zOnNlbmQi
LmVxdWFscyhiYXNlU2VydmljZU5hbWUpKSB7CgkJCQlwaXBlTWFwLnB1dChXUkFQUEVELCB0cnVl
KTsKCQkJCXdyYXBwZWQgPSB0cnVlOwoJCQl9IGVsc2UgaWYgKCJ3eC5yZXNpbGllbmNlLnB1Yi5q
bXM6c2VuZFd4TWVzc2FnZSIuZXF1YWxzKGJhc2VTZXJ2aWNlTmFtZSkpIHsKCQkJCXBpcGVNYXAu
cHV0KFdSQVBQRUQsIHRydWUpOwoJCQkJd3JhcHBlZCA9IHRydWU7CgkJCX0gZWxzZSBpZiAoInd4
LnJlc2lsaWVuY2UucHViLmptczpzZW5kV3hNZXNzYWdlQXNKc29uIi5lcXVhbHMoYmFzZVNlcnZp
Y2VOYW1lKSkgewoJCQkJcGlwZU1hcC5wdXQoV1JBUFBFRCwgdHJ1ZSk7CgkJCQl3cmFwcGVkID0g
dHJ1ZTsKCQkJfSBlbHNlIHsKCQkJCS8vIEF2b2lkIGVuZGxlc3MgcmVkaXJlY3RpbmcKCQkJCWlm
ICghd3hSZXNpbGllbmNlU2VydmljZVJlZGlyZWN0ZWQpIHsKCQkJCQlpZiAoInB1Yi5qbXM6c2Vu
ZCIuZXF1YWxzKGJhc2VTZXJ2aWNlTmFtZSkpIHsKCQkJCQkJLy9sb2dEZWJ1ZygicHViLmptczpz
ZW5kIHJlZGlyZWN0ZWQiKTsKCQkJCQkJcGlwZU1hcC5wdXQoUkVESVJFQ1RFRCwgdHJ1ZSk7CgkJ
CQkJCWV4ZWN1dGVTZXJ2aWNlKCJ3eC5yZXNpbGllbmNlLnB1Yi5qbXMiLCAic2VuZCIsIHBpcGVs
aW5lLCBiYXNlU2VydmljZU5hbWUpOwoJCQkJCQlwaXBlTWFwLnJlbW92ZShSRURJUkVDVEVEKTsK
CQkJCQkJcmVkaXJlY3RlZCA9IHRydWU7CgkJCQkJfSBlbHNlIGlmICgicHViLmNsaWVudDpodHRw
Ii5lcXVhbHMoYmFzZVNlcnZpY2VOYW1lKSkgewoJCQkJCQkvL2xvZ0RlYnVnKCJ3eC5yZXNpbGll
bmNlLnB1Yi5odHRwIik7CgkJCQkJCXBpcGVNYXAucHV0KFJFRElSRUNURUQsIHRydWUpOwoJCQkJ
CQlleGVjdXRlU2VydmljZSgid3gucmVzaWxpZW5jZS5wdWIuaHR0cCIsICJodHRwIiwgcGlwZWxp
bmUsIGJhc2VTZXJ2aWNlTmFtZSk7CgkJCQkJCXBpcGVNYXAucmVtb3ZlKFJFRElSRUNURUQpOwoJ
CQkJCQlyZWRpcmVjdGVkID0gdHJ1ZTsKCQkJCQl9CgkJCQl9CgkJCX0KCQl9CgkJaWYgKCFyZWRp
cmVjdGVkKSB7CgkJCWJvb2xlYW4gaXNUb3AgPSBzdGF0dXMuaXNUb3BTZXJ2aWNlKCk7CQkKCQkJ
Ym9vbGVhbiBleGVjdXRlV3hSZXNpbGllbmNlU2VydmljZXMgPSBmYWxzZTsKCQkJaWYgKGlzVG9w
KSB7CgkJCQlleGVjdXRlV3hSZXNpbGllbmNlU2VydmljZXMgPSB0cnVlOwoJCQkJZm9yIChTdHJp
bmcgZW50cnkgOiBpbnZva2VDaGFpbkJsYWNrbGlzdCkgewoJCQkJCWlmIChiYXNlU2VydmljZU5h
bWUuc3RhcnRzV2l0aChlbnRyeSkpIHsKCQkJCQkJZXhlY3V0ZVd4UmVzaWxpZW5jZVNlcnZpY2Vz
ID0gZmFsc2U7CgkJCQkJCWJyZWFrOwoJCQkJCX0KCQkJCX0KCQkJfQoJCQkvL2lmIChpc1RvcCB8
fCBleGVjdXRlV3hSZXNpbGllbmNlU2VydmljZXMpCgkJCQkvL2xvZ0RlYnVnKGJhc2VTZXJ2aWNl
TmFtZSArICI6ICIgKyBpc1RvcCArICIsIiArIGV4ZWN1dGVXeFJlc2lsaWVuY2VTZXJ2aWNlcyk7
CgkJCS8vIHdlIGhhdmUgdG8gbWFrZSBzdXJlIHRoYXQgdGhlIHNlcnZjaWUgaW52b2NhdGlvbiBj
aGFpbiBpcyBub3QgY3V0CgkJCWlmIChjaGFpbi5oYXNOZXh0KCkpIHsKCQkJCXRyeSB7CgkJCQkJ
aWYgKGV4ZWN1dGVXeFJlc2lsaWVuY2VTZXJ2aWNlcykgewoJCQkJCQl0cnkgewoJCQkJCQkJLy9s
b2dEZWJ1ZygicGlwZTE6ICIgKyBwaXBlbGluZS5nZXRDbGFzcygpLmhhc2hDb2RlKCkpOwoJCQkJ
CQkJZXhlY3V0ZVNlcnZpY2UoInd4LnJlc2lsaWVuY2UuaW1wbC5pbnZva2VDaGFpblByb2Nlc3Nv
ciIsICJwcmVQcm9jZXNzRm9yVG9wTGV2ZWxTZXJ2aWNlIiwgcGlwZWxpbmUsIGJhc2VTZXJ2aWNl
TmFtZSk7CgkJCQkJCQkvL2xvZ0RlYnVnKCJwaXBlMjogIiArIHBpcGVsaW5lLmdldENsYXNzKCku
aGFzaENvZGUoKSk7CgkJCQkJCQkvL3BpcGVNYXAgPSBuZXcgSURhdGFNYXAocGlwZWxpbmUpOwoJ
CQkJCQl9IGNhdGNoKEV4Y2VwdGlvbiBlKSB7CgkJCQkJCQlsb2dFcnJvcigiRXJyb3IgaW4gcHJl
UHJvY2Vzc0ZvclRvcExldmVsU2VydmljZTogIiArIGUpOwoJCQkJCQl9CgkJCQkJfQoJCgkJCQkJ
Ly9sb2dEZWJ1ZygiQmVmb3JlIG9yaWdpbmFsIFNlcnZpY2UiKTsKCQkJCQkKCQkJCQkvL2xvZ0Rl
YnVnKCJwaXBlMzogIiArIHBpcGVsaW5lLmdldENsYXNzKCkuaGFzaENvZGUoKSk7CgkJCQkJKChJ
bnZva2VDaGFpblByb2Nlc3NvcikgY2hhaW4ubmV4dCgpKS5wcm9jZXNzKGNoYWluLCBiYXNlU2Vy
dmljZSwgcGlwZWxpbmUsIHN0YXR1cyk7CgkJCQkJLy9sb2dEZWJ1ZygicGlwZTQ6ICIgKyBwaXBl
bGluZS5nZXRDbGFzcygpLmhhc2hDb2RlKCkpOwoJCQkJCQoJCQkJCS8vbG9nRGVidWcoIkFmdGVy
IG9yaWdpbmFsIFNlcnZpY2UiKTsKCQkJCQkKCQkJCX0gY2F0Y2ggKEV4Y2VwdGlvbiBvcmlnaW5h
bEV4Y2VwdGlvbikgewoJCQkJCS8vcGlwZU1hcCA9IG5ldyBJRGF0YU1hcChwaXBlbGluZSk7CgkJ
CQkJaWYgKGV4ZWN1dGVXeFJlc2lsaWVuY2VTZXJ2aWNlcykgewoJCQkJCQlib29sZWFuIHd4UmVz
aWxpZW5jZVBvc3RQcm9jZXNzRXhlY3V0ZWQgPSBwaXBlTWFwLmdldEFzQm9vbGVhbihQT1NUUFJP
Q0VTU19FWEVDVVRFRCk7CgkJCQkJCS8vbG9nRGVidWcoInd4UmVzaWxpZW5jZVBvc3RQcm9jZXNz
RXhlY3V0ZWQ6ICIgKyB3eFJlc2lsaWVuY2VQb3N0UHJvY2Vzc0V4ZWN1dGVkKTsKCQkJCQkJaWYg
KCF3eFJlc2lsaWVuY2VQb3N0UHJvY2Vzc0V4ZWN1dGVkKSB7CgkJCQkJCQlsb2dFcnJvcigiSGFu
ZGxlIGVycm9yIik7CgkJCQkJCQkJCQoJCQkJCQkJSURhdGEgbGFzdEVycm9yID0gbnVsbDsKCQkJ
CQkJCXRyeSB7CgkJCQkJCQkJZXhlY3V0ZVNlcnZpY2UoInB1Yi5mbG93IiwgImdldExhc3RFcnJv
ciIsIHBpcGVsaW5lLCBiYXNlU2VydmljZU5hbWUpOwkJCQkJCQoJCQkJCQkJCS8vcGlwZU1hcCA9
IG5ldyBJRGF0YU1hcChwaXBlbGluZSk7CgkJCQkJCQkJCgkJCQkJCQkJbGFzdEVycm9yID0gcGlw
ZU1hcC5nZXRBc0lEYXRhKCJsYXN0RXJyb3IiKTsKCQkJCQkJCQlpZiAobGFzdEVycm9yID09IG51
bGwpIHsKCQkJCQkJCQkJbGFzdEVycm9yID0gSURhdGFGYWN0b3J5LmNyZWF0ZSgpOwoJCQkJCQkJ
CQlJRGF0YU1hcCBsYXN0RXJyb3JNYXAgPSBuZXcgSURhdGFNYXAobGFzdEVycm9yKTsKCQkJCQkJ
CQkJbGFzdEVycm9yTWFwLnB1dCgiZXJyb3IiLCBvcmlnaW5hbEV4Y2VwdGlvbi5nZXRMb2NhbGl6
ZWRNZXNzYWdlKCkpOwoJCQkJCQkJCQlsYXN0RXJyb3JNYXAucHV0KCJlcnJvclR5cGUiLCBvcmln
aW5hbEV4Y2VwdGlvbi5nZXRDbGFzcygpLmdldENhbm9uaWNhbE5hbWUoKSk7CgkJCQkJCQkJCXBp
cGVNYXAucHV0KCJsYXN0RXJyb3IiLCBsYXN0RXJyb3IpOwoJCQkJCQkJCX0KCQkJCQkJCX0gY2F0
Y2ggKEV4Y2VwdGlvbiBlKSB7CgkJCQkJCQkJbG9nRXJyb3IoIkNvdWxkIG5vdCBjYWxsIGdldExh
c3RFcnJvciIpOwoJCQkJCQkJCWxhc3RFcnJvciA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsKCQkJ
CQkJCQlJRGF0YU1hcCBsYXN0RXJyb3JNYXAgPSBuZXcgSURhdGFNYXAobGFzdEVycm9yKTsKCQkJ
CQkJCQlsYXN0RXJyb3JNYXAucHV0KCJlcnJvciIsIG9yaWdpbmFsRXhjZXB0aW9uLmdldExvY2Fs
aXplZE1lc3NhZ2UoKSk7CgkJCQkJCQkJbGFzdEVycm9yTWFwLnB1dCgiZXJyb3JUeXBlIiwgb3Jp
Z2luYWxFeGNlcHRpb24uZ2V0Q2xhc3MoKS5nZXRDYW5vbmljYWxOYW1lKCkpOwoJCQkJCQkJCXBp
cGVNYXAucHV0KCJsYXN0RXJyb3IiLCBsYXN0RXJyb3IpOwoJCQkJCQkJfQoJCQoJCQkJCQkJdHJ5
IHsKCQkJCQkJCQlleGVjdXRlU2VydmljZSgid3gucmVzaWxpZW5jZS5wdWIucmVzaWxpZW5jZSIs
ICJoYW5kbGVFcnJvciIsIHBpcGVsaW5lLCBiYXNlU2VydmljZU5hbWUpOwoJCQkJCQkJfSBjYXRj
aCAoRXhjZXB0aW9uIGUpIHsKCQkJCQkJCQlsb2dFcnJvcigiRXJyb3IgaW4gaGFuZGxlRXJyb3I6
ICIgKyBlKTsKCQkJCQkJCX0KCQkJCQkJfSBlbHNlIHsKCQkJCQkJCS8vIEVycm9yIGFscmVhZHkg
aGFuZGxlZCBpbiBGbG93CgkJCQkJCQl0aHJvdyBvcmlnaW5hbEV4Y2VwdGlvbjsKCQkJCQkJfSAK
CQkJCQl9IGVsc2UgewoJCQkJCQkvL2xvZ0RlYnVnKCJleGVjdXRlIik7CgkJCQkJCXRocm93IG9y
aWdpbmFsRXhjZXB0aW9uOwoJCQkJCX0KCQkJCQoJCQkJfSBmaW5hbGx5IHsKCQkJCQkvL3BpcGVN
YXAgPSBuZXcgSURhdGFNYXAocGlwZWxpbmUpOwoJCQkJCWJvb2xlYW4gd3hSZXNpbGllbmNlUG9z
dFByb2Nlc3NFeGVjdXRlZCA9IHBpcGVNYXAuZ2V0QXNCb29sZWFuKFBPU1RQUk9DRVNTX0VYRUNV
VEVEKTsKCQkJCQlpZiAoIXd4UmVzaWxpZW5jZVBvc3RQcm9jZXNzRXhlY3V0ZWQpIHsKCQkJCQkJ
aWYgKGV4ZWN1dGVXeFJlc2lsaWVuY2VTZXJ2aWNlcykgewoJCQkJCQkvL2xvZ0RlYnVnKGJhc2VT
ZXJ2aWNlTmFtZSArICIgd3hSZXNpbGllbmNlUG9zdFByb2Nlc3NFeGVjdXRlZDogIiArIHd4UmVz
aWxpZW5jZVBvc3RQcm9jZXNzRXhlY3V0ZWQpOwoJCQkJCQkJLy9sb2dEZWJ1ZygicGlwZTU6ICIg
KyBwaXBlbGluZS5nZXRDbGFzcygpLmhhc2hDb2RlKCkpOwoJCQkJCQkJZXhlY3V0ZVNlcnZpY2Uo
Ind4LnJlc2lsaWVuY2UucHViLnJlc2lsaWVuY2UiLCAicG9zdFByb2Nlc3NGb3JUb3BMZXZlbFNl
cnZpY2UiLCBwaXBlbGluZSwgYmFzZVNlcnZpY2VOYW1lKTsKCQkJCQkJCS8vbG9nRGVidWcoInBp
cGU2OiAiICsgcGlwZWxpbmUuZ2V0Q2xhc3MoKS5oYXNoQ29kZSgpKTsKCQkJCQkJCS8vcGlwZU1h
cCA9IG5ldyBJRGF0YU1hcChwaXBlbGluZSk7CgkJCQkJCX0KCQkJCQkJcGlwZU1hcC5yZW1vdmUo
UE9TVFBST0NFU1NfRVhFQ1VURUQpOwoJCQkJCX0KCQkJCX0KCQkJfQoJCX0KCQlpZiAod3JhcHBl
ZCkgewoJCQlwaXBlTWFwLnJlbW92ZShXUkFQUEVEKTsKCQl9Cgl9Cn0KCnByaXZhdGUgc3RhdGlj
IElEYXRhIGV4ZWN1dGVTZXJ2aWNlKFN0cmluZyBpZmMsIFN0cmluZyBzdmMsIElEYXRhIHBpcGVs
aW5lLCBTdHJpbmcgY3VycmVudFNlcnZpY2VOYW1lKSB0aHJvd3MgU2VydmVyRXhjZXB0aW9uLCBJ
U1J1bnRpbWVFeGNlcHRpb24gewoJLy8gQXZvaWQgZW5kbGVzcyBsb29wIGluIGNhc2Ugb2YgYnJv
a2VuIGVycm9uZW91cyBzZXJ2aWNlOgoJaWYgKCEoaWZjICsgIjoiICsgc3ZjKS5lcXVhbHMoY3Vy
cmVudFNlcnZpY2VOYW1lKSkgewoJCXRyeSB7CgkJCXJldHVybiBTZXJ2aWNlLmRvSW52b2tlKGlm
Yywgc3ZjLCBwaXBlbGluZSk7CgkJfSBjYXRjaCAoSVNSdW50aW1lRXhjZXB0aW9uIGUpIHsKCQkJ
dGhyb3cgZTsKCQl9IGNhdGNoIChTZXJ2ZXJFeGNlcHRpb24gZSkgewoJCQl0aHJvdyBlOwoJCX0g
Y2F0Y2ggKEV4Y2VwdGlvbiBlKSB7CgkJCXRocm93IG5ldyBTZXJ2aWNlRXhjZXB0aW9uKGUpOwoJ
CX0KCX0gZWxzZSB7CgkJcmV0dXJuIHBpcGVsaW5lOwoJfQp9Cgpwcml2YXRlIHN0YXRpYyB2b2lk
IGxvZ0RlYnVnKFN0cmluZyBtZXNzYWdlKSB7CglKb3VybmFsTG9nZ2VyLmxvZyg0LCBKb3VybmFs
TG9nZ2VyLkZBQ19GTE9XX1NWQywgSm91cm5hbExvZ2dlci5JTkZPLCAiV3hSZXNpbGllbmNlUHJv
Y2Vzc29yIiwgbWVzc2FnZSk7Cn0KCnByaXZhdGUgc3RhdGljIHZvaWQgbG9nSW5mbyhTdHJpbmcg
bWVzc2FnZSkgewoJSm91cm5hbExvZ2dlci5sb2coNCwgSm91cm5hbExvZ2dlci5GQUNfRkxPV19T
VkMsIEpvdXJuYWxMb2dnZXIuSU5GTywgIld4UmVzaWxpZW5jZVByb2Nlc3NvciIsIG1lc3NhZ2Up
Owp9Cgpwcml2YXRlIHN0YXRpYyB2b2lkIGxvZ0Vycm9yKFN0cmluZyBtZXNzYWdlKSB7CglKb3Vy
bmFsTG9nZ2VyLmxvZyg0LCBKb3VybmFsTG9nZ2VyLkZBQ19GTE9XX1NWQywgSm91cm5hbExvZ2dl
ci5FUlJPUiwgIld4UmVzaWxpZW5jZVByb2Nlc3NvciIsIG1lc3NhZ2UpOwp9CgoJCnByaXZhdGUg
c3RhdGljIGZpbmFsIFN0cmluZyBSRURJUkVDVEVEID0gIkBXeFJlc2lsaWVuY2Uuc2VydmljZS5y
ZWRpcmVjdGVkQCI7CnByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBXUkFQUEVEID0gIkBXeFJl
c2lsaWVuY2Uuc2VydmljZS53cmFwcGVkQCI7CnByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBQ
T1NUUFJPQ0VTU19FWEVDVVRFRCA9ICJAV3hSZXNpbGllbmNlLnBvc3RQcm9jZXNzLmV4ZWN1dGVk
QCI7CgoJCgk=</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>com.wm.util.JournalLogger</value>
    <value>com.wm.util.ServerException</value>
    <value>com.wm.app.b2b.server.BaseService</value>
    <value>com.wm.app.b2b.server.ISRuntimeException</value>
    <value>com.wm.app.b2b.server.invoke.InvokeChainProcessor</value>
    <value>com.wm.app.b2b.server.invoke.InvokeManager</value>
    <value>com.wm.app.b2b.server.invoke.ServiceStatus</value>
    <value>java.util.Arrays</value>
    <value>java.util.Iterator</value>
    <value>com.softwareag.util.IDataMap</value>
  </array>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
</Values>
