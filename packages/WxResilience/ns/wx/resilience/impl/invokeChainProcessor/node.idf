<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="shared">CnB1YmxpYyBzdGF0aWMgV3hSZXNpbGllbmNlUHJvY2Vzc29yIHByb2Nlc3NvciA9IG51bGw7Cgpw
dWJsaWMgc3RhdGljIGNsYXNzIFd4UmVzaWxpZW5jZVByb2Nlc3NvciBpbXBsZW1lbnRzIEludm9r
ZUNoYWluUHJvY2Vzc29yIHsKCglwcml2YXRlIFN0cmluZ1tdIGludm9rZUNoYWluQmxhY2tsaXN0
OwoJCglwdWJsaWMgV3hSZXNpbGllbmNlUHJvY2Vzc29yKFN0cmluZ1tdIGludm9rZUNoYWluQmxh
Y2tsaXN0KSB7CgkJaWYgKGludm9rZUNoYWluQmxhY2tsaXN0ICE9IG51bGwpIHsKCQkJdGhpcy5p
bnZva2VDaGFpbkJsYWNrbGlzdCA9IGludm9rZUNoYWluQmxhY2tsaXN0OwoJCX0gZWxzZSB7CgkJ
CXRoaXMuaW52b2tlQ2hhaW5CbGFja2xpc3QgPSBuZXcgU3RyaW5nWzBdOwoJCX0KCX0KCglAT3Zl
cnJpZGUKCXB1YmxpYyB2b2lkIHByb2Nlc3MoSXRlcmF0b3IgY2hhaW4sIEJhc2VTZXJ2aWNlIGJh
c2VTZXJ2aWNlLCBJRGF0YSBwaXBlbGluZSwgU2VydmljZVN0YXR1cyBzdGF0dXMpCgkJCXRocm93
cyBTZXJ2ZXJFeGNlcHRpb24gewoKCQlTdHJpbmcgYmFzZVNlcnZpY2VOYW1lID0gYmFzZVNlcnZp
Y2UuZ2V0TlNOYW1lKCkuZ2V0RnVsbE5hbWUoKTsKCQlJRGF0YU1hcCBwaXBlTWFwID0gbmV3IElE
YXRhTWFwKHBpcGVsaW5lKTsKCQkKCQlib29sZWFuIHd4UmVzaWxpZW5jZVNlcnZpY2VSZWRpcmVj
dGVkID0gcGlwZU1hcC5nZXRBc0Jvb2xlYW4oUkVESVJFQ1RFRCk7CgkJYm9vbGVhbiByZWRpcmVj
dGVkID0gZmFsc2U7CgkJaWYgKCF3eFJlc2lsaWVuY2VTZXJ2aWNlUmVkaXJlY3RlZCkgewoJCQlp
ZiAoInB1Yi5qbXM6c2VuZCIuZXF1YWxzKGJhc2VTZXJ2aWNlTmFtZSkpIHsKCQkJCS8vbG9nRGVi
dWcoInB1Yi5qbXM6c2VuZCByZWRpcmVjdGVkIik7CgkJCQlwaXBlTWFwLnB1dChSRURJUkVDVEVE
LCB0cnVlKTsKCQkJCWV4ZWN1dGVTZXJ2aWNlKCJ3eC5yZXNpbGllbmNlLnB1Yi5qbXMiLCAic2Vu
ZCIsIHBpcGVsaW5lLCBiYXNlU2VydmljZU5hbWUpOwoJCQkJcGlwZU1hcC5yZW1vdmUoUkVESVJF
Q1RFRCk7CgkJCQlyZWRpcmVjdGVkID0gdHJ1ZTsKCQkJfSBlbHNlIGlmICgicHViLmNsaWVudDpo
dHRwIi5lcXVhbHMoYmFzZVNlcnZpY2VOYW1lKSkgewoJCQkJLy9sb2dEZWJ1Zygid3gucmVzaWxp
ZW5jZS5wdWIuaHR0cCIpOwoJCQkJcGlwZU1hcC5wdXQoUkVESVJFQ1RFRCwgdHJ1ZSk7CgkJCQll
eGVjdXRlU2VydmljZSgid3gucmVzaWxpZW5jZS5wdWIuaHR0cCIsICJodHRwIiwgcGlwZWxpbmUs
IGJhc2VTZXJ2aWNlTmFtZSk7CgkJCQlwaXBlTWFwLnJlbW92ZShSRURJUkVDVEVEKTsKCQkJCXJl
ZGlyZWN0ZWQgPSB0cnVlOwoJCQl9IAoJCX0KCQlpZiAoIXJlZGlyZWN0ZWQpIHsKCQkJYm9vbGVh
biBpc1RvcCA9IHN0YXR1cy5pc1RvcFNlcnZpY2UoKTsJCQoJCQlib29sZWFuIGV4ZWN1dGVXeFJl
c2lsaWVuY2VTZXJ2aWNlcyA9IGZhbHNlOwoJCQlpZiAoaXNUb3ApIHsKCQkJCWV4ZWN1dGVXeFJl
c2lsaWVuY2VTZXJ2aWNlcyA9IHRydWU7CgkJCQlmb3IgKFN0cmluZyBlbnRyeSA6IGludm9rZUNo
YWluQmxhY2tsaXN0KSB7CgkJCQkJaWYgKGJhc2VTZXJ2aWNlTmFtZS5zdGFydHNXaXRoKGVudHJ5
KSkgewoJCQkJCQlleGVjdXRlV3hSZXNpbGllbmNlU2VydmljZXMgPSBmYWxzZTsKCQkJCQkJYnJl
YWs7CgkJCQkJfQoJCQkJfQoJCQl9CQkKCQkJLy9pZiAoaXNUb3AgfHwgZXhlY3V0ZVd4UmVzaWxp
ZW5jZVNlcnZpY2VzKQoJCQkJLy9sb2dEZWJ1ZyhiYXNlU2VydmljZU5hbWUgKyAiOiAiICsgaXNU
b3AgKyAiLCIgKyBleGVjdXRlV3hSZXNpbGllbmNlU2VydmljZXMpOwoJCQkvLyB3ZSBoYXZlIHRv
IG1ha2Ugc3VyZSB0aGF0IHRoZSBzZXJ2Y2llIGludm9jYXRpb24gY2hhaW4gaXMgbm90IGN1dAoJ
CQlpZiAoY2hhaW4uaGFzTmV4dCgpKSB7CgkJCQl0cnkgewoJCQkJCWlmIChleGVjdXRlV3hSZXNp
bGllbmNlU2VydmljZXMpIHsKCQkJCQkJdHJ5IHsKCQkJCQkJCS8vbG9nRGVidWcoInBpcGUxOiAi
ICsgcGlwZWxpbmUuZ2V0Q2xhc3MoKS5oYXNoQ29kZSgpKTsKCQkJCQkJCWV4ZWN1dGVTZXJ2aWNl
KCJ3eC5yZXNpbGllbmNlLmltcGwuaW52b2tlQ2hhaW5Qcm9jZXNzb3IiLCAicHJlUHJvY2Vzc0Zv
clRvcExldmVsU2VydmljZSIsIHBpcGVsaW5lLCBiYXNlU2VydmljZU5hbWUpOwoJCQkJCQkJLy9s
b2dEZWJ1ZygicGlwZTI6ICIgKyBwaXBlbGluZS5nZXRDbGFzcygpLmhhc2hDb2RlKCkpOwoJCQkJ
CQkJLy9waXBlTWFwID0gbmV3IElEYXRhTWFwKHBpcGVsaW5lKTsKCQkJCQkJfSBjYXRjaChFeGNl
cHRpb24gZSkgewoJCQkJCQkJbG9nRXJyb3IoIkVycm9yIGluIHByZVByb2Nlc3NGb3JUb3BMZXZl
bFNlcnZpY2U6ICIgKyBlKTsKCQkJCQkJfQoJCQkJCX0KCQoJCQkJCS8vbG9nRGVidWcoIkJlZm9y
ZSBvcmlnaW5hbCBTZXJ2aWNlIik7CgkJCQkJCgkJCQkJLy9sb2dEZWJ1ZygicGlwZTM6ICIgKyBw
aXBlbGluZS5nZXRDbGFzcygpLmhhc2hDb2RlKCkpOwoJCQkJCSgoSW52b2tlQ2hhaW5Qcm9jZXNz
b3IpIGNoYWluLm5leHQoKSkucHJvY2VzcyhjaGFpbiwgYmFzZVNlcnZpY2UsIHBpcGVsaW5lLCBz
dGF0dXMpOwoJCQkJCS8vbG9nRGVidWcoInBpcGU0OiAiICsgcGlwZWxpbmUuZ2V0Q2xhc3MoKS5o
YXNoQ29kZSgpKTsKCQkJCQkKCQkJCQkvL2xvZ0RlYnVnKCJBZnRlciBvcmlnaW5hbCBTZXJ2aWNl
Iik7CgkJCQkJCgkJCQl9IGNhdGNoIChFeGNlcHRpb24gb3JpZ2luYWxFeGNlcHRpb24pIHsKCQkJ
CQkvL3BpcGVNYXAgPSBuZXcgSURhdGFNYXAocGlwZWxpbmUpOwoJCQkJCWlmIChleGVjdXRlV3hS
ZXNpbGllbmNlU2VydmljZXMpIHsKCQkJCQkJYm9vbGVhbiB3eFJlc2lsaWVuY2VQb3N0UHJvY2Vz
c0V4ZWN1dGVkID0gcGlwZU1hcC5nZXRBc0Jvb2xlYW4oUE9TVFBST0NFU1NfRVhFQ1VURUQpOwoJ
CQkJCQkvL2xvZ0RlYnVnKCJ3eFJlc2lsaWVuY2VQb3N0UHJvY2Vzc0V4ZWN1dGVkOiAiICsgd3hS
ZXNpbGllbmNlUG9zdFByb2Nlc3NFeGVjdXRlZCk7CgkJCQkJCWlmICghd3hSZXNpbGllbmNlUG9z
dFByb2Nlc3NFeGVjdXRlZCkgewoJCQkJCQkJbG9nRXJyb3IoIkhhbmRsZSBlcnJvciIpOwoJCQkJ
CQkJCQkKCQkJCQkJCUlEYXRhIGxhc3RFcnJvciA9IG51bGw7CgkJCQkJCQl0cnkgewoJCQkJCQkJ
CWV4ZWN1dGVTZXJ2aWNlKCJwdWIuZmxvdyIsICJnZXRMYXN0RXJyb3IiLCBwaXBlbGluZSwgYmFz
ZVNlcnZpY2VOYW1lKTsJCQkJCQkKCQkJCQkJCQkvL3BpcGVNYXAgPSBuZXcgSURhdGFNYXAocGlw
ZWxpbmUpOwoJCQkJCQkJCQoJCQkJCQkJCWxhc3RFcnJvciA9IHBpcGVNYXAuZ2V0QXNJRGF0YSgi
bGFzdEVycm9yIik7CgkJCQkJCQkJaWYgKGxhc3RFcnJvciA9PSBudWxsKSB7CgkJCQkJCQkJCWxh
c3RFcnJvciA9IElEYXRhRmFjdG9yeS5jcmVhdGUoKTsKCQkJCQkJCQkJSURhdGFNYXAgbGFzdEVy
cm9yTWFwID0gbmV3IElEYXRhTWFwKGxhc3RFcnJvcik7CgkJCQkJCQkJCWxhc3RFcnJvck1hcC5w
dXQoImVycm9yIiwgb3JpZ2luYWxFeGNlcHRpb24uZ2V0TG9jYWxpemVkTWVzc2FnZSgpKTsKCQkJ
CQkJCQkJbGFzdEVycm9yTWFwLnB1dCgiZXJyb3JUeXBlIiwgb3JpZ2luYWxFeGNlcHRpb24uZ2V0
Q2xhc3MoKS5nZXRDYW5vbmljYWxOYW1lKCkpOwoJCQkJCQkJCQlwaXBlTWFwLnB1dCgibGFzdEVy
cm9yIiwgbGFzdEVycm9yKTsKCQkJCQkJCQl9CgkJCQkJCQl9IGNhdGNoIChFeGNlcHRpb24gZSkg
ewoJCQkJCQkJCWxvZ0Vycm9yKCJDb3VsZCBub3QgY2FsbCBnZXRMYXN0RXJyb3IiKTsKCQkJCQkJ
CQlsYXN0RXJyb3IgPSBJRGF0YUZhY3RvcnkuY3JlYXRlKCk7CgkJCQkJCQkJSURhdGFNYXAgbGFz
dEVycm9yTWFwID0gbmV3IElEYXRhTWFwKGxhc3RFcnJvcik7CgkJCQkJCQkJbGFzdEVycm9yTWFw
LnB1dCgiZXJyb3IiLCBvcmlnaW5hbEV4Y2VwdGlvbi5nZXRMb2NhbGl6ZWRNZXNzYWdlKCkpOwoJ
CQkJCQkJCWxhc3RFcnJvck1hcC5wdXQoImVycm9yVHlwZSIsIG9yaWdpbmFsRXhjZXB0aW9uLmdl
dENsYXNzKCkuZ2V0Q2Fub25pY2FsTmFtZSgpKTsKCQkJCQkJCQlwaXBlTWFwLnB1dCgibGFzdEVy
cm9yIiwgbGFzdEVycm9yKTsKCQkJCQkJCX0KCQkKCQkJCQkJCXRyeSB7CgkJCQkJCQkJZXhlY3V0
ZVNlcnZpY2UoInd4LnJlc2lsaWVuY2UucHViLnJlc2lsaWVuY2UiLCAiaGFuZGxlRXJyb3IiLCBw
aXBlbGluZSwgYmFzZVNlcnZpY2VOYW1lKTsKCQkJCQkJCX0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7
CgkJCQkJCQkJbG9nRXJyb3IoIkVycm9yIGluIGhhbmRsZUVycm9yOiAiICsgZSk7CgkJCQkJCQl9
CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQkvLyBFcnJvciBhbHJlYWR5IGhhbmRsZWQgaW4gRmxvdwoJ
CQkJCQkJdGhyb3cgb3JpZ2luYWxFeGNlcHRpb247CgkJCQkJCX0gCgkJCQkJfSBlbHNlIHsKCQkJ
CQkJLy9sb2dEZWJ1ZygiZXhlY3V0ZSIpOwoJCQkJCQl0aHJvdyBvcmlnaW5hbEV4Y2VwdGlvbjsK
CQkJCQl9CgkJCQkKCQkJCX0gZmluYWxseSB7CgkJCQkJLy9waXBlTWFwID0gbmV3IElEYXRhTWFw
KHBpcGVsaW5lKTsKCQkJCQlib29sZWFuIHd4UmVzaWxpZW5jZVBvc3RQcm9jZXNzRXhlY3V0ZWQg
PSBwaXBlTWFwLmdldEFzQm9vbGVhbihQT1NUUFJPQ0VTU19FWEVDVVRFRCk7CgkJCQkJaWYgKCF3
eFJlc2lsaWVuY2VQb3N0UHJvY2Vzc0V4ZWN1dGVkKSB7CgkJCQkJCWlmIChleGVjdXRlV3hSZXNp
bGllbmNlU2VydmljZXMpIHsKCQkJCQkJLy9sb2dEZWJ1ZyhiYXNlU2VydmljZU5hbWUgKyAiIHd4
UmVzaWxpZW5jZVBvc3RQcm9jZXNzRXhlY3V0ZWQ6ICIgKyB3eFJlc2lsaWVuY2VQb3N0UHJvY2Vz
c0V4ZWN1dGVkKTsKCQkJCQkJCS8vbG9nRGVidWcoInBpcGU1OiAiICsgcGlwZWxpbmUuZ2V0Q2xh
c3MoKS5oYXNoQ29kZSgpKTsKCQkJCQkJCWV4ZWN1dGVTZXJ2aWNlKCJ3eC5yZXNpbGllbmNlLnB1
Yi5yZXNpbGllbmNlIiwgInBvc3RQcm9jZXNzRm9yVG9wTGV2ZWxTZXJ2aWNlIiwgcGlwZWxpbmUs
IGJhc2VTZXJ2aWNlTmFtZSk7CgkJCQkJCQkvL2xvZ0RlYnVnKCJwaXBlNjogIiArIHBpcGVsaW5l
LmdldENsYXNzKCkuaGFzaENvZGUoKSk7CgkJCQkJCQkvL3BpcGVNYXAgPSBuZXcgSURhdGFNYXAo
cGlwZWxpbmUpOwoJCQkJCQl9CgkJCQkJCXBpcGVNYXAucmVtb3ZlKFBPU1RQUk9DRVNTX0VYRUNV
VEVEKTsKCQkJCQl9CgkJCQl9CgkJCX0KCQl9Cgl9Cn0KCnByaXZhdGUgc3RhdGljIElEYXRhIGV4
ZWN1dGVTZXJ2aWNlKFN0cmluZyBpZmMsIFN0cmluZyBzdmMsIElEYXRhIHBpcGVsaW5lLCBTdHJp
bmcgY3VycmVudFNlcnZpY2VOYW1lKSB0aHJvd3MgU2VydmVyRXhjZXB0aW9uLCBJU1J1bnRpbWVF
eGNlcHRpb24gewoJLy8gQXZvaWQgZW5kbGVzcyBsb29wIGluIGNhc2Ugb2YgYnJva2VuIGVycm9u
ZW91cyBzZXJ2aWNlOgoJaWYgKCEoaWZjICsgIjoiICsgc3ZjKS5lcXVhbHMoY3VycmVudFNlcnZp
Y2VOYW1lKSkgewoJCXRyeSB7CgkJCXJldHVybiBTZXJ2aWNlLmRvSW52b2tlKGlmYywgc3ZjLCBw
aXBlbGluZSk7CgkJfSBjYXRjaCAoSVNSdW50aW1lRXhjZXB0aW9uIGUpIHsKCQkJdGhyb3cgZTsK
CQl9IGNhdGNoIChTZXJ2ZXJFeGNlcHRpb24gZSkgewoJCQl0aHJvdyBlOwoJCX0gY2F0Y2ggKEV4
Y2VwdGlvbiBlKSB7CgkJCXRocm93IG5ldyBTZXJ2aWNlRXhjZXB0aW9uKGUpOwoJCX0KCX0gZWxz
ZSB7CgkJcmV0dXJuIHBpcGVsaW5lOwoJfQp9Cgpwcml2YXRlIHN0YXRpYyB2b2lkIGxvZ0RlYnVn
KFN0cmluZyBtZXNzYWdlKSB7CglKb3VybmFsTG9nZ2VyLmxvZyg0LCBKb3VybmFsTG9nZ2VyLkZB
Q19GTE9XX1NWQywgSm91cm5hbExvZ2dlci5JTkZPLCAiV3hSZXNpbGllbmNlUHJvY2Vzc29yIiwg
bWVzc2FnZSk7Cn0KCnByaXZhdGUgc3RhdGljIHZvaWQgbG9nSW5mbyhTdHJpbmcgbWVzc2FnZSkg
ewoJSm91cm5hbExvZ2dlci5sb2coNCwgSm91cm5hbExvZ2dlci5GQUNfRkxPV19TVkMsIEpvdXJu
YWxMb2dnZXIuSU5GTywgIld4UmVzaWxpZW5jZVByb2Nlc3NvciIsIG1lc3NhZ2UpOwp9Cgpwcml2
YXRlIHN0YXRpYyB2b2lkIGxvZ0Vycm9yKFN0cmluZyBtZXNzYWdlKSB7CglKb3VybmFsTG9nZ2Vy
LmxvZyg0LCBKb3VybmFsTG9nZ2VyLkZBQ19GTE9XX1NWQywgSm91cm5hbExvZ2dlci5FUlJPUiwg
Ild4UmVzaWxpZW5jZVByb2Nlc3NvciIsIG1lc3NhZ2UpOwp9CgoJCnByaXZhdGUgc3RhdGljIGZp
bmFsIFN0cmluZyBSRURJUkVDVEVEID0gIkBXeFJlc2lsaWVuY2Uuc2VydmljZS5yZWRpcmVjdGVk
QCI7CnByaXZhdGUgc3RhdGljIGZpbmFsIFN0cmluZyBQT1NUUFJPQ0VTU19FWEVDVVRFRCA9ICJA
V3hSZXNpbGllbmNlLnBvc3RQcm9jZXNzLmV4ZWN1dGVkQCI7CgoJ</value>
  <value name="encodeutf8">true</value>
  <array name="imports" type="value" depth="1">
    <value>com.wm.util.JournalLogger</value>
    <value>com.wm.util.ServerException</value>
    <value>com.wm.app.b2b.server.BaseService</value>
    <value>com.wm.app.b2b.server.ISRuntimeException</value>
    <value>com.wm.app.b2b.server.invoke.InvokeChainProcessor</value>
    <value>com.wm.app.b2b.server.invoke.InvokeManager</value>
    <value>com.wm.app.b2b.server.invoke.ServiceStatus</value>
    <value>java.util.Arrays</value>
    <value>java.util.Iterator</value>
    <value>com.softwareag.util.IDataMap</value>
  </array>
  <value name="extends"></value>
  <array name="implements" type="value" depth="1">
  </array>
</Values>
